{"version":3,"file":"component---src-pages-ui-components-components-wysiwyg-add-custom-editor-md-6d6455f71e0a2909c9d1.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/ui-components/components/wysiwyg/add-custom-editor.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-custom-editor\"\n    }}>{`Add a custom editor`}</h1>\n    <p>{`This tutorial goes through the process of adding `}<a parentName=\"p\" {...{\n        \"href\": \"https://ckeditor.com/ckeditor-4/\"\n      }}>{`CKEditor4`}</a>{` as an editor that can be used by the WYSIWYG UI component.`}</p>\n    <p>{`As a developer, use this tutorial as a guide for adding your own custom JavaScript editor to Magento.`}</p>\n    <h2 {...{\n      \"id\": \"step-1-make-the-editor-library-available\"\n    }}>{`Step 1. Make the editor library available`}</h2>\n    <p>{`Download and install your editor's library into your module's `}<inlineCode parentName=\"p\">{`view/base/web/js`}</inlineCode>{` directory to have the application publish it under `}<inlineCode parentName=\"p\">{`pub/static`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"step-2-register-editor\"\n    }}>{`Step 2. Register editor`}</h2>\n    <p>{`In your module's `}<inlineCode parentName=\"p\">{`etc/adminhtml/di.xml`}</inlineCode>{` file, add your editor to the list of `}<inlineCode parentName=\"p\">{`adapterOptions`}</inlineCode>{` to include it to the list of available WYSIWYG editors in the Admin.`}</p>\n    <p>{`Provide unique values for the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` parameter and the `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` entries for your editor to avoid naming collisions.`}</p>\n    <p>{`If you are also extending or overriding the configuration for Variable, Widget, or Gallery, you must use the same string as the `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` entry.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`CKEditor registration in `}<inlineCode parentName=\"p\">{`app/code/CKEditor/CKEditor4/etc/adminhtml/di.xml`}</inlineCode></p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Cms\\\\Model\\\\Config\\\\Source\\\\Wysiwyg\\\\Editor\">\n    <arguments>\n        <argument name=\"adapterOptions\" xsi:type=\"array\">\n            <item name=\"ckeditor\" xsi:type=\"array\">\n                <item name=\"value\" xsi:type=\"string\">CKEditor_CKEditor4/ckeditor4Adapter</item>\n                <item name=\"label\" xsi:type=\"string\" translatable=\"true\">ckeditor</item>\n            </item>\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n    <p>{`To avoid issues in the case that we remove or disable the adapter module, add this configuration to the `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Configuration in `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode></p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <type name=\"Magento\\\\Ui\\\\Block\\\\Wysiwyg\\\\ActiveEditor\">\n        <arguments>\n            <argument name=\"availableAdapterPaths\" xsi:type=\"array\">\n                <item name=\"CKEditor_CKEditor4/ckeditor4Adapter\" xsi:type=\"string\"/>\n            </argument>\n        </arguments>\n    </type>\n</config>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3-create-editor-adapter\"\n    }}>{`Step 3. Create editor adapter`}</h2>\n    <p>{`Create an adapter for your editor in your module's `}<inlineCode parentName=\"p\">{`view/base/web`}</inlineCode>{` directory.\nThis adapter should implement the extensions points called by `}<inlineCode parentName=\"p\">{`wysiwygInstance`}</inlineCode>{` in the following file:`}</p>\n    <p><inlineCode parentName=\"p\">{`lib/mage/adminhtml/wysiwyg/tiny_mce/setup.js`}</inlineCode></p>\n    <p>{`At minimum your adapter should implement the following methods:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getAdapterPrototype()`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`setup( mode )`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`openFileBrowser( o )`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`toggle()`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`onFormValidation()`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`encodeContent(content)`}</inlineCode></li>\n    </ul>\n    <p>{`If you are integrating entities such as variable and widget as plugins, your adapter must also implement the following methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`get( id )`}</inlineCode>{` - returns the editor by it element id`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`getContent()`}</inlineCode>{` - returns the content stored in the WYSIWYG field`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`setContent(content)`}</inlineCode>{` - replaces the entire contents of the WYSIWYG with the string content parameter`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`insertContent( content )`}</inlineCode>{` - inserts content into the editor`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`setCaretOnElement( targetElement )`}</inlineCode>{` - sets the caret location in the editor`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`activeEditor()`}</inlineCode>{` - returns the active editor as an object with a `}<inlineCode parentName=\"p\">{`selection`}</inlineCode>{` property.`}</p>\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`selection`}</inlineCode>{` property returns an instance of the editor with the following additional methods defined:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`getBookmark( type:Number, normalized:Boolean ):Object`}</inlineCode>{` - returns a bookmark object that has the location for the current selection.`}</p>\n            <p parentName=\"li\">{`This is used to restore the selection after content modification in the document.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`moveToBookmark( bookmark:Object ):Boolean`}</inlineCode>{` - restores the selection of the specified bookmark.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`getNode():Element`}</inlineCode>{` - returns the currently selected element or common ancestor element for both start and end of the selection.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`select( targetElement )`}</inlineCode>{` - selects the specified element.`}</p>\n            <p parentName=\"li\">{`This places the start and end of the selection range around the element.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`collapse( to_start:Boolean ):void`}</inlineCode>{` - collapse the selection to start or end of range.`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example:`}</strong>{` CKEditor/CKEditor4/view/base/web/ckeditor4Adapter.js`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/**\n * Copyright © Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global varienGlobalEvents, tinyMceEditors, MediabrowserUtility, closeEditorPopup, Base64 */\n/* eslint-disable strict */\ndefine([\n    'jquery',\n    'underscore',\n    'CKEditor_CKEditor4/js/ckeditor4/ckeditor',\n    'mage/translate',\n    'prototype',\n    'mage/adminhtml/events',\n    'jquery/ui'\n], function (jQuery, _, ckeditor4) {\n\n    var ckeditorWysiwyg = Class.create();\n\n    ckeditorWysiwyg.prototype = {\n        mediaBrowserOpener: null,\n        mediaBrowserTargetElementId: null,\n\n        /**\n         * @param {*} htmlId\n         * @param {Object} config\n         */\n        initialize: function (htmlId, config) {\n            this.id = htmlId;\n            this.config = config;\n\n            if (typeof ckeditorWysiwyg === 'undefined') {\n                window.ckeditorWysiwyg = $H({});\n            }\n\n            var settings = '';\n            ckeditorWysiwyg.settings = this.config;\n            settings = $H({});\n            if (this.config.plugins) {\n                this.config.plugins.each(function (plugin) {\n                    settings.set(plugin.name, plugin.options);\n                });\n                this.config.magentoPluginsOptions = settings;\n            }\n            this.config.elements = this.id;\n            ckeditor4.settings = this.config;\n        },\n\n        /**\n         * @param {*} mode\n         */\n        setup: function (mode) {\n            ckeditor4.replaceAll();\n        },\n\n        /**\n         * Insert content to active editor.\n         *\n         * @param {String} content\n         * @param {Boolean} ui\n         */\n        insertContent: function (content, ui) {\n            this.activeEditor().insertText(content);\n        },\n\n        /**\n         * @param {Object} o\n         */\n        openFileBrowser: function (o) {\n        },\n\n        /**\n         * Encodes the content so it can be inserted into the wysiwyg\n         * @param {String} content - The content to be encoded\n         *\n         * @returns {*} - The encoded content\n         */\n        updateContent: function (content) {\n        },\n\n        /**\n         * On form validation.\n         */\n        onFormValidation: function () {\n            if (tinyMCE4.get(this.id)) {\n                $(this.id).value = tinyMCE4.get(this.id).getContent();\n            }\n        },\n        /**\n         * @param {String} id\n         */\n        get: function (id) {\n            return ckeditor4.instances[id];\n        },\n\n        /**\n         * @return {Object}\n         */\n        activeEditor: function () {\n            var activeInstance = false;\n            _.each(ckeditor4.instances, function (instance) {\n                if (instance.activeEnterMode === 1) {\n                    activeInstance = instance;\n                    instance.getBookmark = function () {\n                        return null;\n                    };\n                    instance.moveToBookmark = function () {\n                        return instance;\n                    };\n                    instance.getNode = function () {\n                        return instance.getSelection();\n                    };\n                    instance.getNode = function () {\n                        return instance.getSelection();\n                    };\n                    activeInstance.selection = instance;\n\n                }\n            });\n            return activeInstance;\n        },\n\n        /**\n         * @param {*} mode\n         * @return {tinyMceWysiwygSetup}\n         */\n        turnOn: function (mode) {\n        },\n\n        /**\n         * @return {tinyMceWysiwygSetup}\n         */\n        turnOff: function () {\n\n            return this;\n        },\n\n        /**\n         * Retrieve directives URL with substituted directive value.\n         *\n         * @param {String} directive\n         */\n        makeDirectiveUrl: function (directive) {\n\n        },\n\n        /**\n         * @param {Object} content\n         * @return {*}\n         */\n        encodeDirectives: function (content) {\n\n        },\n\n        /**\n         * @param {Object} content\n         * @return {*}\n         */\n        encodeWidgets: function (content) {\n\n        },\n\n        /**\n         * @param {Object} content\n         * @return {*}\n         */\n        decodeDirectives: function (content) {\n\n        },\n\n        /**\n         * @param {Object} content\n         * @return {*}\n         */\n        decodeWidgets: function (content) {\n\n        },\n\n        /**\n         * @param {Object} attributes\n         * @return {Object}\n         */\n        parseAttributesString: function (attributes) {\n\n        },\n\n        /**\n         * Update text area.\n         */\n        updateTextArea: function () {\n\n        },\n        setCaretOnElement: function (targetElement) {\n            this.activeEditor().selection.select(targetElement);\n            this.activeEditor().selection.collapse();\n        },\n\n        /**\n         * @param {Object} content\n         * @return {*}\n         */\n        decodeContent: function (content) {\n\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        toggle: function () {\n            return this.wysiwygInstance.toggle();\n        },\n\n        /**\n         * @param {Object} content\n         * @return {*}\n         */\n        encodeContent: function (content) {\n        },\n\n        /**\n         * @param {Object} o\n         */\n        beforeSetContent: function (o) {\n\n        },\n\n        /**\n         * @param {Object} o\n         */\n        saveContent: function (o) {\n\n        },\n\n        /**\n         * @returns {Object}\n         */\n        getAdapterPrototype: function () {\n            return ckeditorWysiwyg;\n        },\n\n        /**\n         * Return the content stored in the WYSIWYG field\n         * @param {String} id\n         * @return {String}\n         */\n        getContent: function (id) {\n\n        }\n    };\n\n    return ckeditorWysiwyg.prototype;\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-4-load-editor-library\"\n    }}>{`Step 4. Load editor library`}</h2>\n    <p>{`After loading, modifying, and merging all configurations, the application serializes the result into a JSON object and passes it to the UI component.`}</p>\n    <p>{`In your module's `}<inlineCode parentName=\"p\">{`view/base/requirejs-config.js`}</inlineCode>{` file, add a shim configuration entry for your editor in order to have RequireJS load it correctly.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong>{` CKEditor\\\\CKEditor4\\\\view\\\\base\\\\requirejs-config.js`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`var config = {\n    \"shim\": {\n        \"CKEditor_CKEditor4/js/ckeditor4/ckeditor\": { \"exports\": \"CKEDITOR\" }\n    }\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}