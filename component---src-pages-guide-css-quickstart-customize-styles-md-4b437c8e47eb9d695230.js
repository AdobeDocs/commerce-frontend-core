"use strict";(self.webpackChunkcommerce_frontend_core=self.webpackChunkcommerce_frontend_core||[]).push([[2432],{72682:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return i},default:function(){return h}});var a,d=t(87462),r=t(63366),l=(t(15007),t(64983)),m=t(91515),o=["components"],i={},s=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)}),p={_frontmatter:i},x=m.Z;function h(e){var n=e.components,t=(0,r.Z)(e,o);return(0,l.mdx)(x,(0,d.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"customize-theme-styles"},"Customize theme styles"),(0,l.mdx)("p",null,"Let's say you created a new ",(0,l.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/theme"},"theme")," inheriting from Blank or Luma, and chose the ",(0,l.mdx)("a",{parentName:"p",href:"compilation-mode.md"},"Less compilation mode"),". What's next? Where to add the style changes? This topic gives quick answers."),(0,l.mdx)("h2",{id:"extend-parent-styles"},"Extend parent styles"),(0,l.mdx)("p",null,"To extend the parent theme's styles in your theme:"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In your theme directory, create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"web/css/source")," sub-directory.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," file there. The path to it looks like following:"),(0,l.mdx)("pre",{parentName:"li"},(0,l.mdx)("code",{parentName:"pre",className:"language-tree"},"<theme_dir>/\n│  ├── web/\n│  │   ├── css/\n│  │   │   ├── source/\n│  │   │       ├──_extend.less\n...\n"))),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Add your Less code in this file."))),(0,l.mdx)("p",null,"However, the above only works if the theme's parent is a Blank. Consider a Theme A which is the child of Blank. Theme A has two children, B and C. A global style rule is added to the ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," file of theme A. This extends its parent Blank. Theme B and C also have their own ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," files. Theme B and C will override the parent (Theme A), rather than extending it further. Theme B & Theme C are extending their grandparent (Blank) and overriding their parent (Theme A) in this setup."),(0,l.mdx)("p",null,"In case of subsequent descendants of the child theme, you can avoid this behavior by following these steps:"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend-child.less")," in both your parent and child themes.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Keep ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend-child.less")," empty in your parent theme and add it too your parent theme's ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," file.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Add a ",(0,l.mdx)("inlineCode",{parentName:"p"},"@import '_extend-child.less'")," rule to the end of your parent's theme's ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," file.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In your child theme, add ",(0,l.mdx)("inlineCode",{parentName:"p"},"@import")," or style rules in ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend-child.less")," to extend parent theme's CSS."),(0,l.mdx)("pre",{parentName:"li"},(0,l.mdx)("code",{parentName:"pre",className:"language-tree"},"app/design/frontend/Vendor/\n├── parent\n│   └── web\n│       └── css\n│           └── source\n│               ├── _extend-child.less (keep this file empty)\n│               └── _extend.less\n└── child\n    └── web\n        └── css\n            └── source\n                └── _extend-child.less\n...\n")))),(0,l.mdx)("p",null,"Extending a theme using ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," is the simplest option when you are happy with everything the parent theme has, but want to add more styles."),(0,l.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,l.mdx)("p",null,"The rules and variables declared in ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," always have precedence over ones declared in ",(0,l.mdx)("inlineCode",{parentName:"p"},"_theme.less"),"."),(0,l.mdx)("h2",{id:"override-parent-styles"},"Override parent styles"),(0,l.mdx)("p",null,"To override parent styles (that is, override default UI ",(0,l.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/library"},"library")," variables):"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In your theme directory, create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"web/css/source")," sub-directory.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"_theme.less")," file here. The path to it then looks like following:"),(0,l.mdx)("pre",{parentName:"li"},(0,l.mdx)("code",{parentName:"pre",className:"language-tree"},"<theme_dir>/\n│  ├── web/\n│  │   ├── css/\n│  │   │   ├── source/\n│  │   │       ├──_theme.less\n...\n")),(0,l.mdx)("p",{parentName:"li"},"It is important to remember that your ",(0,l.mdx)("inlineCode",{parentName:"p"},"_theme.less")," overrides the parent ",(0,l.mdx)("inlineCode",{parentName:"p"},"_theme.less"),".")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Copy all variables you need from the parent ",(0,l.mdx)("inlineCode",{parentName:"p"},"_theme.less"),", including those which will not be changed. For example, if your theme inherits from Blank, the ",(0,l.mdx)("inlineCode",{parentName:"p"},"_theme.less")," you should copy from is located at ",(0,l.mdx)("inlineCode",{parentName:"p"},"<Magento_Blank_theme_dir>/web/css/source/_theme.less"),".")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Make the necessary changes."))),(0,l.mdx)("p",null,"The drawback of this approach is that you need to monitor and manually update your files whenever the parent's ",(0,l.mdx)("inlineCode",{parentName:"p"},"_theme.less")," is updated."),(0,l.mdx)("h2",{id:"add-structured-changes"},"Add structured changes"),(0,l.mdx)("p",null,"To make your changes easier to read and support, structure them by adding a separate overriding or extending ",(0,l.mdx)("inlineCode",{parentName:"p"},".less")," files for each ",(0,l.mdx)("a",{parentName:"p",href:"../ui-library.md#components"},"UI library component")," you change. Let's use the ",(0,l.mdx)("inlineCode",{parentName:"p"},"button")," component implemented in ",(0,l.mdx)("inlineCode",{parentName:"p"},"_button.less")," as an illustration."),(0,l.mdx)("h3",{id:"extend-component-styles"},"Extend component styles"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In your theme directory, create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"web/css/source")," sub-directory.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Add ",(0,l.mdx)("inlineCode",{parentName:"p"},"_buttons_extend.less")," and ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," here. The path to the files looks like following:"),(0,l.mdx)("pre",{parentName:"li"},(0,l.mdx)("code",{parentName:"pre",className:"language-tree"},"<theme_dir>\n│  ├── web/\n│  │   ├── css/\n│  │   │   ├── source/\n│  │   │       ├──_buttons_extend.less\n│  │   │       ├──_extend.less\n...\n"))),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In ",(0,l.mdx)("inlineCode",{parentName:"p"},"_buttons_extend.less")," add your styles for the button component.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," register the ",(0,l.mdx)("inlineCode",{parentName:"p"},"_buttons_extend.less")," by adding the following code: ",(0,l.mdx)("inlineCode",{parentName:"p"},"@import '_buttons_extend.less';")))),(0,l.mdx)("h3",{id:"override-component-styles"},"Override component styles"),(0,l.mdx)("p",null,"To override the parent theme's styles for buttons in your theme:"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In your theme directory, create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"web/css/source")," sub-directory.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"_buttons.less")," file here. The path to it looks like following:"),(0,l.mdx)("pre",{parentName:"li"},(0,l.mdx)("code",{parentName:"pre",className:"language-tree"},"<theme_dir>/\n│  ├── web/\n│  │   ├── css/\n│  │   │   ├── source/\n│  │   │       ├──_buttons.less\n...\n")),(0,l.mdx)("p",{parentName:"li"},"This file overrides the ",(0,l.mdx)("inlineCode",{parentName:"p"},"_buttons.less")," of the parent theme.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Add your styles for the button component. If the file is left blank, then no styles are applied for the component."))),(0,l.mdx)("h3",{id:"extend-module-styles"},"Extend module styles"),(0,l.mdx)("p",null,"To extend a Module's styles in your theme:"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In your theme directory, create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"Module_Name/web/css/source")," directory.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Create an ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," file in the theme directory. For example:"),(0,l.mdx)("pre",{parentName:"li"},(0,l.mdx)("code",{parentName:"pre",className:"language-tree"},"<theme_dir>/\n├── <module_dir>/\n│   ├── web/\n│   │   ├── css/\n│   │   │   ├── source/\n                ├──_extend.less\n...\n"))),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Add additional styles in the ",(0,l.mdx)("inlineCode",{parentName:"p"},"_extend.less")," file."))),(0,l.mdx)("p",null,"For example, to extend the Magento_Review module's style, the directory path should be ",(0,l.mdx)("inlineCode",{parentName:"p"},"<your_theme_dir>/Magento_Review/web/css/source/_extend.less"),"."),(0,l.mdx)("h3",{id:"override-module-styles"},"Override module styles"),(0,l.mdx)("p",null,"To override module styles in your theme:"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"In your theme directory, create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"Module_Name/web/css/source")," directory.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Create a ",(0,l.mdx)("inlineCode",{parentName:"p"},"_module.less")," file in the theme directory. For example:"),(0,l.mdx)("pre",{parentName:"li"},(0,l.mdx)("code",{parentName:"pre",className:"language-tree"},"<theme_dir>/\n├── <module_dir>/\n│   ├── web/\n│   │   ├── css/\n│   │   │   ├── source/\n|   |   |       ├──_module.less\n...\n")),(0,l.mdx)("p",{parentName:"li"},"This file overrides the ",(0,l.mdx)("inlineCode",{parentName:"p"},"_module.less")," file of the specific module.")),(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("p",{parentName:"li"},"Add your styles in the ",(0,l.mdx)("inlineCode",{parentName:"p"},"_module.less")," file."))),(0,l.mdx)("p",null,"For example, to override the Magento_Review module's style, the directory path should be ",(0,l.mdx)("inlineCode",{parentName:"p"},"<your_theme_dir>/Magento_Review/web/css/source/_module.less"),"."))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guide-css-quickstart-customize-styles-md-4b437c8e47eb9d695230.js.map