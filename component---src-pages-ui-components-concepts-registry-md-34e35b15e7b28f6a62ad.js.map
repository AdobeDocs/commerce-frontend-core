{"version":3,"file":"component---src-pages-ui-components-concepts-registry-md-34e35b15e7b28f6a62ad.js","mappings":"uSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,sBACH,uBACL,mBAAG,uBAAYC,WAAW,KAAM,cAA2B,qEAAmE,uBAAYA,WAAW,KAAM,SAAsB,MAAI,uBAAYA,WAAW,KAAM,SAAsB,UAAQ,uBAAYA,WAAW,KAAM,SAAsB,cACnS,eACE,GAAM,wBACH,yBACL,kBAAK,yDAAuD,uBAAYA,WAAW,KAAM,cAA2B,0DAAwD,cAAGA,WAAW,IACtL,KAAQ,iCACL,gBAAoB,KAAG,uBAAYA,WAAW,KAAM,cAA2B,MACtF,kBAAK,gDACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,6CAEP,kBAAK,gBAAc,uBAAYA,WAAW,KAAM,cAA2B,qBAAmB,uBAAYA,WAAW,KAAM,YAAyB,kEACpJ,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,sDAEP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,cAA2B,yMAEnE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,iEAEP,kBAAK,qFACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,oFAEP,eACE,GAAM,wDACH,yDACL,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,gBAAc,mBAAQC,WAAW,KAAM,eAAwB,kCACpE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,+IAKP,mBAAG,mBAAQA,WAAW,KAAM,eAC5B,kBAAK,8EACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,mJAGP,kBAAK,yEACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,iKAKP,kBAAK,sFACL,kBAAK,uJACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,+ZAUV,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/ui-components/concepts/registry.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"uiregistry-library\"\n    }}>{`uiRegistry library`}</h1>\n    <p><inlineCode parentName=\"p\">{`uiRegistry`}</inlineCode>{` is in-memory, plain storage of entities by keys. Implements the `}<inlineCode parentName=\"p\">{`get()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`set()`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`has()`}</inlineCode>{` methods.`}</p>\n    <h2 {...{\n      \"id\": \"javascript-debugging\"\n    }}>{`JavaScript debugging`}</h2>\n    <p>{`To debug the UI component JS, we first need to get a `}<inlineCode parentName=\"p\">{`uiRegistry`}</inlineCode>{` instance from the browser console. To do so, use the `}<a parentName=\"p\" {...{\n        \"href\": \"../../javascript/resources.md\"\n      }}>{`RequireJs ID`}</a>{` `}<inlineCode parentName=\"p\">{`uiRegistry`}</inlineCode>{`.`}</p>\n    <p>{`In the browser console enter the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`var registry = require('uiRegistry');\n`}</code></pre>\n    <p>{`Now we have `}<inlineCode parentName=\"p\">{`uiRegistry`}</inlineCode>{` instance in the `}<inlineCode parentName=\"p\">{`registry`}</inlineCode>{` variable. We can use it to get an instance of any component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`var component = registry.get('componentName');\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`uiRegistry`}</inlineCode>{` instance allows you to search for components using property values.\nIf you know a unique property value of a component that you need to find, you can use the following code to get the component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`var component = registry.get('property = propertyValue');\n`}</code></pre>\n    <p>{`To get a list of all components used on the current page, you can use this code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`require('uiRegistry').get(function(component){console.log(component.name)});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"asynchronously-retrieve-components-from-the-registry\"\n    }}>{`Asynchronously retrieve components from the registry`}</h3>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This is the `}<strong parentName=\"p\">{`recommended`}</strong>{` method for best performance.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module('trigger', true);\nvar component = () => registry.get('componentName', function (component) {\n    component.trigger(true);\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Examples:`}</strong></p>\n    <p>{`The following code shows how to get a component by a full component name:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Admin > Products > Catalog > Add Product\nvar fieldName = registry.get('product_form.product_form.product-details.container_name.name');\n`}</code></pre>\n    <p>{`The following code shows how to get a component by a property value:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Admin > Products > Catalog > Add Product\nvar fieldName = registry.get('index = name');\n// or\nfieldName = registry.get('inputName = product[name]');\n`}</code></pre>\n    <p>{`The previous example gets the same JS component as using the full component name.`}</p>\n    <p>{`Lets look what we have in component variable. It keeps component context with all properties, we can see component file, component name and so on.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`console.log(fieldName.name); // product_form.product_form.product-details.container_name.name\n\nfieldName.trigger('validate'); // will invoke validation\nfieldName.visible(false); // will hide field from page\nfieldName.visible(true);  // will show field again\nfieldName.value(); // will show current field value\nfieldName.value('New string value'); // will change field value to string 'New string value'\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}