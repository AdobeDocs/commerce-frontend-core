{"version":3,"file":"component---src-pages-guide-tools-grunt-md-06c8358ead54a053e694.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/guide/tools/grunt.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"grunt\"\n    }}>{`Grunt`}</h1>\n    <p>{`The topic describes how to install and configure `}<a parentName=\"p\" {...{\n        \"href\": \"http://gruntjs.com/\"\n      }}>{`Grunt JavaScript task runner`}</a>{`.`}</p>\n    <p>{`You can use Grunt to automate any tasks you need, but out of the box the application comes with pre-configured grunt tasks for compiling LESS files.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Make sure that you `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/config-guide/cli/config-cli-subcommands-mode.html\"\n      }}>{`set`}</a>{` your application to the developer or default `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/config-guide/bootstrap/magento-modes.html\"\n      }}>{`mode`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"install-and-configure-grunt\"\n    }}>{`Install and configure Grunt`}</h2>\n    <p>{`The application has built-in Grunt tasks configured, but there are still several steps you need to take to be able to use it:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install `}<a parentName=\"p\" {...{\n            \"href\": \"https://nodejs.org/en/download/package-manager/\"\n          }}>{`node.js`}</a>{` to any location on your machine.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install Grunt CLI tool globally. To do this, run the following command in a command prompt:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install -g grunt-cli\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From the `}<inlineCode parentName=\"p\">{`<Magento_root>`}</inlineCode>{` directory, copy and paste the contents of the following files:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`package.json.sample`}</inlineCode>{` into `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Gruntfile.js.sample`}</inlineCode>{` into `}<inlineCode parentName=\"li\">{`Gruntfile.js`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grunt-config.json.sample`}</inlineCode>{` into `}<inlineCode parentName=\"li\">{`grunt-config.json`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install (or refresh) the `}<inlineCode parentName=\"p\">{`node.js`}</inlineCode>{` project dependency, including Grunt, for your instance. To do this, run the following commands in a command prompt:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`cd your_Magento_instance_directory\n`}</code></pre>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install\n`}</code></pre>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm update\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`(Optional) If you want to use Grunt for \"watching\" changes automatically, without reloading pages in a browser each time, install the `}<a parentName=\"p\" {...{\n            \"href\": \"http://livereload.com/extensions/\"\n          }}>{`LiveReload extension`}</a>{` in your browser.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"configuration-file\"\n    }}>{`Configuration file`}</h2>\n    <p>{`Copy the contents of `}<inlineCode parentName=\"p\">{`themes.js`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`local-themes.js`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`dev/tools/grunt/configs/`}</inlineCode>{` directory.`}</p>\n    <p>{`If installed as described above, Grunt will use the default configuration files located in the `}<inlineCode parentName=\"p\">{`dev/tools/grunt/configs/`}</inlineCode>{` directory. You can define your theme in the `}<inlineCode parentName=\"p\">{`local-themes.js`}</inlineCode>{` file. The following shows an example of how you can define your theme.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<theme>: {\n  area: '<area>',\n  name: '<Vendor>/<theme>,\n  locale: '<language>',\n  files: [\n    '<path_to_file1>', //path to root source file\n    '<path_to_file2>'\n  ],\ndsl: 'less'\n}\n`}</code></pre>\n    <p>{`Where the following notation is used:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<Vendor>`}</inlineCode>{`: vendor name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<theme>`}</inlineCode>{`: your theme code, conventionally should correspond to the theme directory name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<area>`}</inlineCode>{`: area code, can be either `}<inlineCode parentName=\"li\">{`frontend`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`adminhtml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<language>`}</inlineCode>{`: specified in the `}<inlineCode parentName=\"li\">{`code_subtag`}</inlineCode>{` format, for example `}<inlineCode parentName=\"li\">{`en_US`}</inlineCode>{`. Only one locale can be specified here. To debug the theme with another locale, create one more theme declaration, having specified another value for `}<inlineCode parentName=\"li\">{`language`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<path_to_file>`}</inlineCode>{`: path to the root source file, relative to the `}<inlineCode parentName=\"li\">{`app/design/frontend/<Vendor>/<theme>/web`}</inlineCode>{` directory. You need to specify all `}<a parentName=\"li\" {...{\n          \"href\": \"../css/preprocess.md\"\n        }}>{`root source files of the theme`}</a>{`. If your theme `}{`[inherits]`}{` from a certain theme, and does not contain its own root source files, specify the root source files of the parent theme.`}</li>\n    </ul>\n    <p>{`Once these are set correctly, run grunt to watch your changes.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`grunt exec:<theme>`}</inlineCode>{` from the root directory to republish the symlinks.`}</li>\n      <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`grunt watch:<theme>`}</inlineCode>{` so that grunt will watch for file changes.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"custom-grunt-configuration-files\"\n    }}>{`Custom Grunt configuration files`}</h2>\n    <p>{`There are several ways to declare a custom configuration file.`}</p>\n    <h3 {...{\n      \"id\": \"declare-a-custom-configuration-file-option-1\"\n    }}>{`Declare a custom configuration file (option 1)`}</h3>\n    <p>{`To use a custom file for Grunt configuration:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the default configuration file to the preferred location in the instance directory. Do not change the file name.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open the `}<inlineCode parentName=\"p\">{`grunt-config.json`}</inlineCode>{` file in the installation and set configurations object as follows.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`key: file alias`}</li>\n          <li parentName=\"ul\">{`value: path to your custom file`}</li>\n        </ul>\n        <p parentName=\"li\">{`Example:\nIf your custom configuration file `}<inlineCode parentName=\"p\">{`local-themes.js`}</inlineCode>{` is located in the `}<inlineCode parentName=\"p\">{`<magento_root>/dev/tools/grunt/configs`}</inlineCode>{` directory, the following is already set in your `}<inlineCode parentName=\"p\">{`grunt-config.json`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n    \"themes\": \"dev/tools/grunt/configs/local-themes.js\"\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`This path is also added to your .gitignore by default.`}</p>\n    <h3 {...{\n      \"id\": \"declare-a-custom-configuration-file-option-2\"\n    }}>{`Declare a custom configuration file (option 2)`}</h3>\n    <p>{`You can also use the other way to declare a custom config file:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your Grunt related scripts, in the file router, set the alias and path to the custom configuration file. For example, to set the custom `}<inlineCode parentName=\"p\">{`themes.loc.js`}</inlineCode>{` configuration file, this would look like the following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`filesRouter.set('themes', 'dev/tools/grunt/configs/themes.loc.js');\n`}</code></pre>\n        <p parentName=\"li\">{`It must be added earlier, than the `}<inlineCode parentName=\"p\">{`get()`}</inlineCode>{` method with this alias is called.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<inlineCode parentName=\"p\">{`dev/tools/grunt/configs/`}</inlineCode>{` directory, create a copy of the default configuration file. Change its name by adding the \".loc\" suffix. For example, your copy of `}<inlineCode parentName=\"p\">{`themes.js`}</inlineCode>{` will be `}<inlineCode parentName=\"p\">{`themes.loc.js`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"how-to-use-a-custom-configuration-file\"\n    }}>{`How to use a custom configuration file`}</h3>\n    <p>{`To tell Grunt to use a custom configuration file, instead of the default one, add the following in your script:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Require file-router:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`var fileRouter = require('/files-router');\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Call the `}<inlineCode parentName=\"p\">{`get(%file_alias%)`}</inlineCode>{` method to get the configuration file.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`var themes = fileRouter.get('themes');\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}