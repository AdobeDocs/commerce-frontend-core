{"version":3,"file":"component---src-pages-page-builder-content-types-customize-add-image-uploader-md-6b347a1cda673ed8a9dc.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/content-types/customize/add-image-uploader.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-an-image-uploader\"\n    }}>{`Add an image uploader`}</h1>\n    <p>{`This topic describes how to add the image uploader component to your content type so that end-users can add images from the Admin stage as needed.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-frontend-core/assets/e0c54b6ec85134da97f7c079e212b5fe/how-to-add-image-uploader.svg\",\n        \"alt\": \"Add an image uploader\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"add-configuration-data-for-the-uploader\"\n    }}>{`Add configuration data for the uploader`}</h2>\n    <p>{`The first step is to customize the image uploader to suit your needs. To do this, you must add the `}<inlineCode parentName=\"p\">{`additional_data`}</inlineCode>{` element to your content type's config file to create the data types and values needed to initialize the image uploader for your specific needs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_PageBuilder:etc/content_type.xsd\">\n    <type name=\"example_quote\"\n        ...\n        <additional_data>\n            <item name=\"uploaderConfig\" xsi:type=\"array\">\n                <item name=\"isShowImageUploadInstructions\" xsi:type=\"boolean\">false</item>\n                <item name=\"isShowImageUploadOptions\" xsi:type=\"boolean\">true</item>\n                <item name=\"maxFileSize\" xsi:type=\"object\">ImageMaxFileSizeDesktop</item>\n                <item name=\"allowedExtensions\" xsi:type=\"string\">jpg jpeg gif png</item>\n                <item name=\"component\" xsi:type=\"string\">Magento_PageBuilder/js/form/element/image-uploader</item>\n                <item name=\"componentType\" xsi:type=\"string\">imageUploader</item>\n                <item name=\"dataScope\" xsi:type=\"string\">background_image</item>\n                <item name=\"formElement\" xsi:type=\"string\">imageUploader</item>\n                <item name=\"uploaderConfig\" xsi:type=\"array\">\n                    <item name=\"url\" xsi:type=\"object\">Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\Provider\\\\Uploader\\\\SaveUrl</item>\n                </item>\n                <item name=\"previewTmpl\" xsi:type=\"string\">Magento_PageBuilder/form/element/uploader/preview</item>\n                <item name=\"template\" xsi:type=\"string\">Magento_PageBuilder/form/element/uploader/preview/image</item>\n                <item name=\"mediaGallery\" xsi:type=\"array\">\n                    <item name=\"openDialogUrl\" xsi:type=\"object\">Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\Provider\\\\Uploader\\\\OpenDialogUrl</item>\n                    <item name=\"openDialogTitle\" xsi:type=\"string\" translate=\"true\">Insert Images...</item>\n                    <item name=\"initialOpenSubpath\" xsi:type=\"string\">wysiwyg</item>\n                    <item name=\"storeId\" xsi:type=\"object\">Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\Provider\\\\StoreId</item>\n                </item>\n                <item name=\"validation\" xsi:type=\"array\">\n                    <item name=\"required-entry\" xsi:type=\"boolean\">true</item>\n                </item>\n            </item>\n        </additional_data>\n    </type>\n</config>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-2-create-an-instance-of-the-uploader\"\n    }}>{`Step 2: Create an instance of the uploader`}</h2>\n    <p>{`To create an instance of the image uploader in your preview component (`}<inlineCode parentName=\"p\">{`preview.js`}</inlineCode>{`), import the `}<inlineCode parentName=\"p\">{`Magento_PageBuilder/js/content-type/uploader`}</inlineCode>{` component as a dependency and call the uploader constructor, passing in your content type's configuration options (added in step 1) and the other required arguments, as shown here :`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define(['Magento_PageBuilder/js/uploader'], function (Uploader) {\n\n    Preview.prototype.getUploader = function () {\n        var initialImageValue = this.contentType.dataStore\n            .get(this.config.additional_data.uploaderConfig.dataScope, \"\");\n\n        return new Uploader(\n            \"imageuploader_\" + this.contentType.id,\n            this.config.additional_data.uploaderConfig,\n            this.contentType.id,\n            this.contentType.dataStore,\n            initialImageValue,\n        );\n    };\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"uploader-constructor-arguments\"\n    }}>{`Uploader constructor arguments`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to locate the component in the UI registry.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`None`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`uploaderConfig`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Initializes the image uploader UI component with the configuration settings from the `}<inlineCode parentName=\"td\">{`additional_data`}</inlineCode>{` element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`None`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`contentTypeId`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The ID of the content type you are adding the uploader to.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`None`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dataStore`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DataStore`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The DataStore to store the selected image in.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`None`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`initialValue`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Object[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The image value to set for the initial state of the uploader component.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`None`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onChangeCallback`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The callback to execute when the end-user selects an image.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`no`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Adobe Commerce saves the image to the provided `}<inlineCode parentName=\"td\">{`dataStore`}</inlineCode>{` using `}<inlineCode parentName=\"td\">{`uploaderConfig.dataScope`}</inlineCode>{` as the key.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onDeleteCallback`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The callback to execute when the end-user deletes the current image from storage.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`no`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Commerce removes the image from to the provided `}<inlineCode parentName=\"td\">{`dataStore`}</inlineCode>{` using `}<inlineCode parentName=\"td\">{`uploaderConfig.dataScope`}</inlineCode>{` as the key.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"step-3-add-markup-for-the-uploader\"\n    }}>{`Step 3: Add markup for the uploader`}</h2>\n    <p>{`To add the image uploader to your preview template (`}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{`), use Knockout's `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` binding element to render an instance of your configured uploader component from the Commerce registry, as shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div ...>\n   ...\n    <scope args=\"getUploader().getUiComponent()\">\n        <render />\n    </scope>\n   ...\n</div>\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`When an end-user deletes a file from the media browser, Commerce triggers the `}<inlineCode parentName=\"p\">{`fileDeleted`}</inlineCode>{` event on the window with the `}<inlineCode parentName=\"p\">{`mediabrowser`}</inlineCode>{` namespace. The passed argument is an object containing the `}<inlineCode parentName=\"p\">{`ids`}</inlineCode>{` property, which is an array of ID strings for each of the deleted files. Commerce adds the IDs of the selected files in the objects dispatched by the `}<inlineCode parentName=\"p\">{`addFile`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`processFile`}</inlineCode>{` methods inside the image uploader component.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}