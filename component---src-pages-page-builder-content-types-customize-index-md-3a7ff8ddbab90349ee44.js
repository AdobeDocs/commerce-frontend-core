"use strict";(self.webpackChunkcommerce_frontend_core=self.webpackChunkcommerce_frontend_core||[]).push([[7255],{62903:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return s}});var a=t(87462),i=t(45987),o=(t(35776),t(3905)),d=t(91515);const r=["components"],m={},p={_frontmatter:m},l=d.Z;function s(e){let{components:n}=e,t=(0,i.Z)(e,r);return(0,o.mdx)(l,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"add-additional-data"},"Add additional data"),(0,o.mdx)("p",null,"This topic describes how to extend and configure Page Builder content types to accommodate any preferred setting that is not addressed in the confines of our existing ",(0,o.mdx)("inlineCode",{parentName:"p"},"content_type.xsd")," schema definition."),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"additional_data")," allows you to provide extra configuration, such as ",(0,o.mdx)("inlineCode",{parentName:"p"},"maxFileSize")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"allowedExtensions"),", for various content types."),(0,o.mdx)("p",null,"For example, if you want to load data from the backend, you can use objects, ",(0,o.mdx)("inlineCode",{parentName:"p"},'xsi:type="object"'),", to implement ",(0,o.mdx)("inlineCode",{parentName:"p"},"Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\ProviderInterface")," to process the data and dynamically load information based on the system config."),(0,o.mdx)("h2",{id:"additional-data"},"Add additional data to the XML config"),(0,o.mdx)("p",null,"Use ",(0,o.mdx)("inlineCode",{parentName:"p"},"additional_data")," in your ",(0,o.mdx)("inlineCode",{parentName:"p"},"Vendor/ModuleName/view/adminhtml/pagebuilder/content_type/<your-content-type>.xml")," XML config file to add custom configuration to a content type:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<additional_data>\n    <item name="uploaderConfig" xsi:type="array">\n        <item name="maxFileSize" xsi:type="object">ImageMaxFileSizeDesktop</item>\n        <item name="allowedExtensions" xsi:type="string">jpg jpeg gif png</item>\n        <item name="component" xsi:type="string">Magento_PageBuilder/js/form/element/image-uploader</item>\n        <item name="componentType" xsi:type="string">imageUploader</item>\n        <item name="dataScope" xsi:type="string">image</item>\n        <item name="formElement" xsi:type="string">imageUploader</item>\n        <item name="uploaderConfig" xsi:type="array">\n            <item name="url" xsi:type="object">Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\Provider\\Uploader\\SaveUrl</item>\n        </item>\n        <item name="previewTmpl" xsi:type="string">Magento_PageBuilder/form/element/uploader/preview</item>\n        <item name="template" xsi:type="string">Magento_PageBuilder/form/element/uploader/preview/image</item>\n        <item name="mediaGallery" xsi:type="array">\n            <item name="openDialogUrl" xsi:type="object">Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\Provider\\Uploader\\OpenDialogUrl</item>\n            <item name="openDialogTitle" xsi:type="string" translate="true">Insert Images...</item>\n            <item name="initialOpenSubpath" xsi:type="string">wysiwyg</item>\n            <item name="storeId" xsi:type="object">\\Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\Provider\\StoreId</item>\n        </item>\n        <item name="validation" xsi:type="array">\n            <item name="required-entry" xsi:type="boolean">true</item>\n        </item>\n    </item>\n</additional_data>\n')),(0,o.mdx)("h2",{id:"conversion"},"Implement ",(0,o.mdx)("inlineCode",{parentName:"h2"},"ProviderInterface")," for conversion"),(0,o.mdx)("p",null,"Array and scalar types, ",(0,o.mdx)("inlineCode",{parentName:"p"},'xsi:type="array"')," and ",(0,o.mdx)("inlineCode",{parentName:"p"},'xsi:type="string"')," for example (but also boolean, integer, and constant), designated in the XML file are provided as-is to the additional data configuration payload."),(0,o.mdx)("p",null,"Object content types, ",(0,o.mdx)("inlineCode",{parentName:"p"},'xsi:type="object"'),", must implement ",(0,o.mdx)("inlineCode",{parentName:"p"},"ProviderInterface")," in ",(0,o.mdx)("inlineCode",{parentName:"p"},"/app/code/Magento/PageBuilder/Model/Config/ContentType/AdditionalData/ProviderInterface.php")," to be converted:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-php"},"<?php\n/**\n * Copyright &copy; Adobe, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndeclare(strict_types=1);\n\nnamespace Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData;\n\n/**\n * Provides runtime-specific data for additional data content types configuration\n */\ninterface ProviderInterface\n{\n    /**\n    * Get data from the provider\n    * @param string $itemName - the name of the item to use as key in returned array\n    * @return array\n    */\n    public function getData(string $itemName) : array;\n}\n")),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"getData")," then returns an array that must contain the key of the configuration item you're providing."),(0,o.mdx)("h3",{id:"example-use-case"},"Example use case"),(0,o.mdx)("p",null,"In the ",(0,o.mdx)("inlineCode",{parentName:"p"},"additional_data")," XML config there is a ",(0,o.mdx)("inlineCode",{parentName:"p"},"storeId")," item with a ",(0,o.mdx)("inlineCode",{parentName:"p"},"storeId")," provider class, which must return ",(0,o.mdx)("inlineCode",{parentName:"p"},"['storeId' => ...value here...]")," to be integrated properly:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<item name="storeId" xsi:type="object">\\Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\Provider\\StoreId</item>\n')),(0,o.mdx)("p",null,"Custom configuration is injected into relevant content type block constructors, such as for the image block shown here, and accessed in ",(0,o.mdx)("inlineCode",{parentName:"p"},"config.additional_data")," within the content block type in ",(0,o.mdx)("inlineCode",{parentName:"p"},"/app/code/Magento/PageBuilder/view/adminhtml/web/js/content-type/<your-content-type>/preview.js"),":"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'var uploaderConfiguration = Object.assign(\n    {},\n    config.additional_data.uploaderConfig,\n    {\n        value: this.dataStore.get().image,\n    },\n);\n\n// Create uploader\nthis.uploader = new Uploader(\n    this.id,\n    "imageuploader_" + this.id,\n    Object.assign({}, uploaderConfiguration, {\n        value: this.dataStore.get().image,\n    }),\n    uploaderConfiguration,\n);\n')))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-page-builder-content-types-customize-index-md-3a7ff8ddbab90349ee44.js.map