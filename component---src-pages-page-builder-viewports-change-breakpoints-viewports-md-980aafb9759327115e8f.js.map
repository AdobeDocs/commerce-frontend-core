{"version":3,"file":"component---src-pages-page-builder-viewports-change-breakpoints-viewports-md-980aafb9759327115e8f.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/viewports/change-breakpoints-viewports.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"change-breakpoints-and-viewports\"\n    }}>{`Change breakpoints and viewports`}</h1>\n    <p>{`Changing breakpoints and viewports is about changing Page Builder's default `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` values to match your responsive design needs.`}</p>\n    <p>{`The following list shows Page Builder's default `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` values for breakpoints and viewports:`}</p>\n    <p><strong parentName=\"p\">{`desktop`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<var name=\"min-width\">1024px</var>`}</inlineCode></li>\n    </ul>\n    <p><strong parentName=\"p\">{`tablet`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`<var name=\"max-width\">1024px</var>`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`<var name=\"min-width\">768px</var>`}</inlineCode></p>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`mobile`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`<var name=\"max-width\">768px</var>`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`<var name=\"min-width\">640px</var>`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`<var name=\"media\">only screen and (max-width: 768px)</var>`}</inlineCode></p>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`mobile-small`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<var name=\"max-width\">640px</var>`}</inlineCode></li>\n    </ul>\n    <p>{`By default, Page Builder defines only one viewport `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` query for the `}<inlineCode parentName=\"p\">{`mobile`}</inlineCode>{` breakpoint. But you may find that your instance of Page Builder has a viewport `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` query defined for each breakpoint.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Like the `}<inlineCode parentName=\"p\">{`mobile`}</inlineCode>{` breakpoint, the `}<inlineCode parentName=\"p\">{`desktop`}</inlineCode>{` breakpoint also defines viewport configurations, but it does not define a `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` query. The `}<inlineCode parentName=\"p\">{`desktop`}</inlineCode>{` breakpoint serves as the default viewport (or fallback) used to store form field properties that are not defined with a specific breakpoint like `}<inlineCode parentName=\"p\">{`mobile`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"steps-for-changing-breakpoints\"\n    }}>{`Steps for changing breakpoints`}</h2>\n    <p>{`You can change Page Builder's existing breakpoints using an Admin theme or module. The following steps apply to both.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add an overriding view.xml file`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the min-width and max-width`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the viewport media queries (as needed)`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change your frontend media queries (as needed)`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the viewport stage CSS (as needed)`}</p>\n      </li>\n    </ol>\n    <p>{`You can skip steps 3-5 if you are changing or adding new breakpoints without viewport configurations. These include the `}<inlineCode parentName=\"p\">{`tablet`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`mobile-small`}</inlineCode>{` breakpoints. Otherwise, you need to complete all these steps to ensure that the breakpoint and viewport widths are the same.`}</p>\n    <h3 {...{\n      \"id\": \"step-1-create-an-overriding-viewxml-file\"\n    }}>{`Step 1: Create an overriding view.xml file`}</h3>\n    <p>{`Start by copying Page Builder's `}<inlineCode parentName=\"p\">{`view.xml`}</inlineCode>{` file to your module or Admin theme's `}<inlineCode parentName=\"p\">{`etc`}</inlineCode>{` directory: `}<inlineCode parentName=\"p\">{`Vendor/Module/etc/view.xml`}</inlineCode>{`. Technically, in your `}<inlineCode parentName=\"p\">{`view.xml`}</inlineCode>{` file, you can remove the nodes you don't change and rely on Magento's XML merging to include Page Builder's `}<inlineCode parentName=\"p\">{`view.xml`}</inlineCode>{`. However, during development, it's helpful to keep Page Builder's nodes in place as a reminder of the configuration data Page Builder uses from the nodes you don't change.`}</p>\n    <h3 {...{\n      \"id\": \"step-2-change-the-min-width-and-max-width\"\n    }}>{`Step 2: Change the min-width and max-width`}</h3>\n    <p>{`Page Builder uses the `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` values to generate media queries that control the breakpoint settings for JavaScript widgets (like the products widget). Here's an example that changes the `}<inlineCode parentName=\"p\">{`mobile-small`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`480px`}</inlineCode>{` and adjusts the `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{` on the mobile breakpoint to match:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<var name=\"mobile\">\n    <var name=\"label\">Mobile</var>\n    <var name=\"stage\">true</var>\n    <var name=\"class\">mobile-switcher</var>\n    <var name=\"icon\">Magento_PageBuilder::css/images/switcher/switcher-mobile.svg</var>\n    <var name=\"media\">only screen and (max-width: 768px)</var>\n    <var name=\"conditions\">\n        <var name=\"max-width\">768px</var>\n        <var name=\"min-width\">480px</var>\n    </var>\n</var>\n<var name=\"mobile-small\">\n    <var name=\"conditions\">\n        <var name=\"max-width\">480px</var>\n    </var>\n</var>\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`Other CSS units`}</strong>{`. The default `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` values are in pixels (`}<inlineCode parentName=\"p\">{`px`}</inlineCode>{`). But you can use `}<inlineCode parentName=\"p\">{`em`}</inlineCode>{` units or any other CSS unit suitable to media queries.`}</p>\n    <h3 {...{\n      \"id\": \"step-3-change-the-viewport-media-queries\"\n    }}>{`Step 3: Change the viewport media queries`}</h3>\n    <p>{`If you are changing a breakpoint that doesn't define a `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` query for a viewport, you can skip this step.`}</p>\n    <p>{`Page Builder uses the `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` query node for form field properties set up to use them. So the `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` for these queries must match the `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` defined for JavaScript widgets. Otherwise, the content elements on the page will be responding to different breakpoints. The result could lead to surprising behavior on the frontend.`}</p>\n    <p>{`For example, if you changed the `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` of the `}<inlineCode parentName=\"p\">{`mobile`}</inlineCode>{` breakpoint to `}<inlineCode parentName=\"p\">{`640px`}</inlineCode>{`, you must also change the `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` query `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` to match, as shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<var name=\"mobile\">\n    <var name=\"label\">Mobile</var>\n    <var name=\"stage\">true</var>\n    <var name=\"class\">mobile-switcher</var>\n    <var name=\"icon\">Magento_PageBuilder::css/images/switcher/switcher-mobile.svg</var>\n    <var name=\"media\">only screen and (max-width: 640px)</var>\n    <var name=\"conditions\">\n        <var name=\"max-width\">640px</var>\n        <var name=\"min-width\">480px</var>\n    </var>\n</var>\n<var name=\"mobile-small\">\n    <var name=\"conditions\">\n        <var name=\"max-width\">480px</var>\n    </var>\n</var>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-4-change-your-frontend-media-queries\"\n    }}>{`Step 4: Change your frontend media queries`}</h3>\n    <p>{`You must also change any corresponding breakpoints within your frontend media queries in your modules or frontend themes. In this example, we changed our frontend queries to match the new `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` we set for the `}<inlineCode parentName=\"p\">{`mobile-small`}</inlineCode>{` breakpoint:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`//  Standard media queries\n//  ________________________________________________________\n\n@media only screen and (max-width: 480px){}\n\n//  Magento media queries: @screen__xs = 480px\n//  ________________________________________________________\n\n.media-width(@extremum, @break) when (@extremum = 'max') and (@break = @screen__xs){}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-5-change-the-viewport-stage-css\"\n    }}>{`Step 5: Change the viewport stage CSS`}</h3>\n    <p>{`When changing breakpoints that have viewport configurations, you must also change the viewport styles set for the stage width. By default, the `}<inlineCode parentName=\"p\">{`mobile`}</inlineCode>{` viewport is the only viewport that defines a CSS style for the stage width.`}</p>\n    <p><strong parentName=\"p\">{`To change the `}<inlineCode parentName=\"strong\">{`mobile`}</inlineCode>{` viewport stage width:`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`.less`}</inlineCode>{` file to the `}<inlineCode parentName=\"p\">{`adminhtml/web/css/source/`}</inlineCode>{` directory of your Admin theme or module.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy and paste in the `}<inlineCode parentName=\"p\">{`.mobile-viewport`}</inlineCode>{` style from `}<inlineCode parentName=\"p\">{`Magento/PageBuilder/view/adminhtml/web/css/source/_mobile-viewport.less`}</inlineCode>{`, as shown below.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` of the `}<inlineCode parentName=\"p\">{`.pagebuilder-canvas`}</inlineCode>{` to match the `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` you set for the breakpoint and viewport `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` query. They should all match.`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.mobile-viewport {\n    &.pagebuilder-stage-wrapper {\n        &.stage-content-snapshot,\n        &.stage-full-screen {\n            .pagebuilder-stage {\n                .pagebuilder-canvas {\n                    left: 50%;\n                    margin: 0;\n                    transform: translateX(-50%);\n                    width: 640px;\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"summary\"\n    }}>{`Summary`}</h2>\n    <p>{`Changing breakpoint and viewport widths in Page Builder is pretty simple. You just need to match all your breakpoint width changes to their viewport `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` queries, frontend media queries, and the viewport stage widths.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}