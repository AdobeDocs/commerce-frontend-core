{"version":3,"file":"component---src-pages-javascript-frontend-product-repository-md-c5cd04f0959253ebf6cc.js","mappings":"kSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,+BADR,gCAGA,8RAEA,6HACA,eACE,GAAM,wBADR,yBAGA,+DAAgD,uBAAYC,WAAW,KAAvB,wBAAhD,sLAEA,eACE,GAAM,8BADR,+BAGA,0DAA2C,cAAGA,WAAW,IACrD,KAAQ,kIACP,uBAAYA,WAAW,KAAvB,uDAFL,kFAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,uxBAoCL,eACE,GAAM,sBADR,uBAGA,6IACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,gTAiBL,eACE,GAAM,4BADR,6BAGA,8BAAe,cAAGA,WAAW,IACzB,KAAQ,oIACP,uBAAYA,WAAW,KAAvB,uBAFL,qBAE4F,uBAAYA,WAAW,KAAvB,gBAF5F,mDAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,wUAcL,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,cACH,eAAIA,WAAW,KACb,MAAS,MADX,8CAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,WACH,eAAIA,WAAW,KACb,MAAS,MADX,qDAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,SACH,eAAIA,WAAW,KACb,MAAS,MADX,uDAMN,8FAA+E,uBAAYA,WAAW,KAAvB,yBAA/E,MACA,eACE,GAAM,yBADR,0BAGA,kFACA,mBAAG,uBAAYA,WAAW,KAAvB,8BACH,qEAAsD,cAAGA,WAAW,IAChE,KAAQ,4FACP,uBAAYA,WAAW,KAAvB,iBAFL,uBAEwF,uBAAYA,WAAW,KAAvB,0DAFxF,WAGA,wDAAyC,cAAGA,WAAW,IACnD,KAAQ,+HAD6B,0BAAzC,MAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,8yBAqBL,uEAAwD,uBAAYA,WAAW,KAAvB,uBAAxD,iDAAwK,uBAAYA,WAAW,KAAvB,wBAAxK,2BACA,oFAAqE,cAAGA,WAAW,IAC/E,KAAQ,8GACP,uBAAYA,WAAW,KAAvB,0DAFL,MAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,+qDAqDR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/javascript/frontend-product-repository.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"frontend-product-repository\"\n    }}>{`Frontend product repository`}</h1>\n    <p>{`The frontend product repository is a storage service that uses the local cache to get product information without making additional requests to the server.\nThe product information it provides is useful for optimal mini-cart, widgets, and checkout customizations.`}</p>\n    <p>{`This article contains code samples for common tasks when working with the frontend product repository.`}</p>\n    <h2 {...{\n      \"id\": \"product-data-storage\"\n    }}>{`Product data storage`}</h2>\n    <p>{`The frontend product repository uses the `}<inlineCode parentName=\"p\">{`product_data_storage`}</inlineCode>{` section of the data storage cache as its data source.\nThis section is responsible for holding all product data that come from the server when a customer visits a product page.`}</p>\n    <h2 {...{\n      \"id\": \"instantiate-the-repository\"\n    }}>{`Instantiate the repository`}</h2>\n    <p>{`The following code snippet uses the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/view/frontend/web/js/product/storage/storage-service.js\"\n      }}><inlineCode parentName=\"a\">{`Magento_Catalog/js/product/storage/storage-service`}</inlineCode></a>{` to initialize the repository when the data storage cache itself initializes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`define([\n    'Magento_Catalog/js/product/storage/storage-service'\n]), function(storage){\n    'use strict';\n\n    return {\n\n        ...\n\n        identifiersConfig: {\n            namespace: 'product_data_storage'\n        },\n\n        productStorageConfig: {\n            namespace: 'product_data_storage',\n            customerDataProvider: 'product_data_storage',\n            className: 'DataStorage'\n        },\n\n        initIdsStorage: function(){\n            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));\n            return this;\n        },\n\n        idsStorageHandler: function(idsStorage){\n            this.productStorage = storage.createStorage(this.productStorageConfig);\n        },\n\n        ...\n\n    }\n\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"use-the-repository\"\n    }}>{`Use the repository`}</h2>\n    <p>{`Subscribe a callback function to the product repository data to work with the cached data from recent server requests.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n...\n\nidsStorageHandler: function(idsStorage){\n    this.productStorage = storage.createStorage(this.productStorageConfig);\n    this.productStorage.data.subscribe(this.dataCollectionHandler.bind(this));\n},\n\ndataCollectionHandler: function(data){\n    //Code to handle the data\n},\n\n...\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"get-data-from-the-server\"\n    }}>{`Get data from the server`}</h2>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/view/frontend/web/js/product/storage/data-storage.js#L213\"\n      }}><inlineCode parentName=\"a\">{`loadDataFromServer`}</inlineCode></a>{` method from the `}<inlineCode parentName=\"p\">{`data-storage`}</inlineCode>{` class to get product data from a list of IDs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n...\n\nidsStorageHandler: function(idsStorage, currency, storeId){\n    this.productStorage = storage.createStorage(this.productStorageConfig);\n    this.productStorage.data.subscribe(this.dataCollectionHandler.bind(this));\n    this.productStorage.loadDataFromServer(currency, storeId, idsStorage.get());\n},\n\n...\n\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`currency`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The currency data to get for the product`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`store`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The ID of the store associated with the product`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ids`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An object that contains the list of IDs as keys`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`In the preceding example the data is handled by the subscribed function `}<inlineCode parentName=\"p\">{`dataCollectionHandler`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"specify-rest-resource\"\n    }}>{`Specify REST resource`}</h3>\n    <p>{`Use the following REST endpoint to get product information:`}</p>\n    <p><inlineCode parentName=\"p\">{`/V1/products-render-info`}</inlineCode></p>\n    <p>{`For UI Components, add this information in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/ui_comp_guide/concepts/ui_comp_data_source.html\"\n      }}><inlineCode parentName=\"a\">{`dataProvider`}</inlineCode></a>{` entry inside your `}<inlineCode parentName=\"p\">{`etc/view/frontend/ui_component/<ui-component-name>.xml`}</inlineCode>{` file.`}</p>\n    <p>{`The following example is from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/view/frontend/ui_component/widget_recently_viewed.xml\"\n      }}>{`recently-viewed widget`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`\n<argument name=\"dataProvider\" xsi:type=\"configurableObject\">\n    <argument name=\"data\" xsi:type=\"array\">\n        <item name=\"config\" xsi:type=\"array\">\n            <item name=\"productStorageConfig\" xsi:type=\"array\">\n                <item name=\"namespace\" xsi:type=\"string\">product_data_storage</item>\n                <item name=\"className\" xsi:type=\"string\">DataStorage</item>\n                <item name=\"updateRequestConfig\" xsi:type=\"array\">\n                    <item name=\"url\" xsi:type=\"serviceUrl\" path=\"/products-render-info\"/>\n                </item>\n            </item>\n            <item name=\"identifiersConfig\" xsi:type=\"array\">\n              <item name=\"namespace\" xsi:type=\"string\">recently_viewed_product</item>\n            </item>\n        </item>\n    </argument>\n</argument>\n\n`}</code></pre>\n    <p>{`This sets the appropriate information inside the `}<inlineCode parentName=\"p\">{`updateRequestConfig`}</inlineCode>{` object in the product storage configuration(`}<inlineCode parentName=\"p\">{`productStorageConfig`}</inlineCode>{` in the example code).`}</p>\n    <p>{`The object structure for this REST response is represented by `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/Api/Data/ProductRenderInterface.php\"\n      }}><inlineCode parentName=\"a\">{`\\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductRenderInterface`}</inlineCode></a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`[\n   item_id: {\n        //@see: \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductRender\\\\ButtonInterface\n        'add_to_*_button': { //Any product button will be represented by this interface\n            post_data: {...},\n            required_options: boolean,\n            url: string\n        },\n        //\\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductRenderExtensionInterface\n        'extension_attributes': {\n            'review_html': '...'\n        },\n        //@see: \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductRender\\\\ImageInterface[]\n        'images': [\n            {\n                'url': '...',\n                'code': '...',\n                'height': ...,\n                'width': ...,\n                'resized_height': ...,\n                ...\n            }\n        ],\n        'is_salable': boolean,\n        'name': '...',\n        //@see: \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductRender\\\\PriceInfoInterface\n        'price_info': {\n            //@see \\\\Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductRender\\\\FormattedPriceInfoInterface\n            //All prices are kind of html with currency symbol and rounding rules\n            'formatted_prices': {\n                'final_price': ...,\n                'max_price': ...,\n                'max_regular_price': ...,\n                'minimal_regular_price': ...,\n                ...\n            },\n            'final_price': ...,\n            'max_price': ...,\n            'max_regular_price': ...,\n            'minimal_regular_price': ...,\n            ...\n        },\n        'url': '...',\n        'type': '...', //enum: configurable, simple, virtual, etc\n        'currency_code': '...', //e.g. USD\n        'store_id': ... //integer\n   }\n]\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}