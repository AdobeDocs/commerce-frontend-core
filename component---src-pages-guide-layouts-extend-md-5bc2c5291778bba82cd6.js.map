{"version":3,"file":"component---src-pages-guide-layouts-extend-md-5bc2c5291778bba82cd6.js","mappings":"uSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,mBACH,oBACL,kBAAK,0IAAwI,eAAIC,WAAW,KAAM,yBAA8B,yCAChM,kBAAK,wBAAsB,cAAGA,WAAW,IACrC,KAAQ,+BACL,sBAA0B,QAAM,cAAGA,WAAW,IACjD,KAAQ,2BACL,kBAAsB,WAC7B,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,mDACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,6GAQX,kBAAK,oDAAkD,uBAAYA,WAAW,KAAM,8EAA2F,sFAAoF,uBAAYA,WAAW,KAAM,+DAA4E,qDAC5W,mBAAG,mBAAQA,WAAW,KAAM,cAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,mUAMP,kBAAK,wBAAsB,cAAGA,WAAW,IACrC,KAAQ,wBACL,eAAmB,WAC1B,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,4CACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,kHAQX,kBAAK,yDAAuD,uBAAYA,WAAW,KAAM,oEAAiF,2FAAyF,uBAAYA,WAAW,KAAM,qDAAkE,0DAClW,mBAAG,mBAAQA,WAAW,KAAM,cAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,kWAOP,eACE,GAAM,+BACH,gCACL,kBAAK,oDACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,sCACrB,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAO,6DACtB,eAAIA,WAAW,MAAO,oDAExB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBACV,ydAUP,cAAGA,WAAW,MAAO,YAAU,uBAAYA,WAAW,KAAM,aAA0B,gKAExF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,uDAK5B,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/guide/layouts/extend.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"extend-a-layout\"\n    }}>{`Extend a layout`}</h1>\n    <p>{`Rather than copy extensive page layout or page configuration code and then modify what you want to change, you only need to create an `}<em parentName=\"p\">{`extending layout file`}</em>{` that contains the changes you want.`}</p>\n    <p>{`To add an extending `}<a parentName=\"p\" {...{\n        \"href\": \"types.md#page-configuration\"\n      }}>{`page configuration`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"types.md#generic-layout\"\n      }}>{`generic layout`}</a>{` file:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Put the layout file in the following location:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-tree\"\n          }}>{`<theme_dir>\n |__/<Namespace>_<Module>\n   |__/layout\n     |--<layout1>.xml\n     |--<layout2>.xml\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`For example, to customize the layout defined in `}<inlineCode parentName=\"p\">{`<Magento_Catalog_module_dir>/view/frontend/layout/catalog_product_view.xml`}</inlineCode>{`, you need to add a layout file with the same name in your custom theme, such as: `}<inlineCode parentName=\"p\">{`<theme_dir>/Magento_Catalog/layout/catalog_product_view.xml`}</inlineCode>{`. Then do your customizations on the layout xml.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page layout=\"1column\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <body>\n        <move element=\"product.info.stock.sku\" destination=\"product.info.price\" after=\"product.price.final\"/>\n    </body>\n</page>\n`}</code></pre>\n    <p>{`To add an extending `}<a parentName=\"p\" {...{\n        \"href\": \"types.md#page-layout\"\n      }}>{`page layout`}</a>{` file:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Put the file in the following location:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-tree\"\n          }}>{`<theme_dir>\n |__/<Namespace>_<Module>\n   |__/page_layout\n     |--<layout1>.xml\n     |--<layout2>.xml\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`For example, to customize the page layout defined in `}<inlineCode parentName=\"p\">{`<Magento_Theme_module_dir>/view/frontend/page_layout/1column.xml`}</inlineCode>{`, you need to add a page layout file with the same name in your custom theme, such as: `}<inlineCode parentName=\"p\">{`<theme_dir>/Magento_Theme/page_layout/1column.xml`}</inlineCode>{`. Then do your customizations on the page layout xml.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<layout xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_layout.xsd\">\n    <update handle=\"empty\"/>\n    <referenceContainer name=\"page.wrapper\">\n        <container name=\"page.top.after\" label=\"After Page Top\" after=\"page.top\"/>\n    </referenceContainer>\n</layout>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"processing-extended-layouts\"\n    }}>{`Processing extended layouts`}</h2>\n    <p>{`The application merges layout files as follows:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`For each layout file in the list:`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Loads layout handle declaration and layout instructions.`}</li>\n          <li parentName=\"ol\">{`Appends to the result in the following format:`}</li>\n        </ol>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<layouts xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <handle id=\"checkout_cart_index\" label=\"Shopping Cart\" type=\"page\" parent=\"default\">\n        <!-- Layout instructions from checkout_cart_index.xml -->\n    </handle>\n    <handle id=\"checkout_onepage_index\" label=\"One Page Checkout\" type=\"page\" parent=\"default\">\n        <!-- Layout instructions from checkout_onepage_index.xml -->\n    </handle>\n    <!-- ... -->\n</layouts>\n`}</code></pre>\n        <p parentName=\"li\">{`Where a `}<inlineCode parentName=\"p\">{`handle ID`}</inlineCode>{` is defined by the name of the corresponding layout file, and handle attributes are defined by the attributes of the root layout node of this layout file.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Replaces the base URL placeholders in the result.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}