{"version":3,"file":"component---src-pages-guide-themes-js-bundling-md-cbdafdfb8bc63e7da2d1.js","mappings":"uSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,uBACH,wBACL,kBAAK,8PAEL,eACE,GAAM,mBACH,oBACL,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,kBAAK,mEAAiE,cAAGG,WAAW,IAChF,KAAQ,gIACL,mBAAuB,oJAC9B,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,gEACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,+CAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,gCACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,2DAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,qDACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,qDAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,2HACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,iDAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,kJACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,oDAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,yFAAuF,cAAGA,WAAW,IACtH,KAAQ,oIACL,gCAAoC,MAC3C,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,gDAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,8BACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,sCAEP,cAAGA,WAAW,MAAO,sBAAoB,uBAAYA,WAAW,KAAM,qBAAkC,wCAAsC,uBAAYA,WAAW,KAAM,gCAA6C,sDAAoD,uBAAYA,WAAW,KAAM,wDAAqE,uCAAqC,uBAAYA,WAAW,KAAM,gCAA6C,oDAAkD,uBAAYA,WAAW,KAAM,uEAAoF,qFAAmF,uBAAYA,WAAW,KAAM,2CAAwD,wIAG5yB,eACE,GAAM,sBACH,uBACL,kBAAK,4aACL,eACE,GAAM,mBACH,oBACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,aAA0B,iBAAe,uBAAYA,WAAW,KAAM,gBAA6B,sLAE3I,kBAAK,mIACL,kBAAK,oCAAkC,cAAGA,WAAW,IACjD,KAAQ,mGACL,cAAkB,4EACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,2wFAmDP,eACE,GAAM,4BACH,6BACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,eAA4B,mFACnD,uBAAYA,WAAW,KAAM,eAA4B,qGACvD,uBAAYA,WAAW,KAAM,eAA4B,uDAC5E,kBAAK,aACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,iFAIP,kBAAK,uJAEL,eACE,GAAM,0BACH,2BACL,kBAAK,qDAAmD,uBAAYA,WAAW,KAAM,gBAA6B,WAClH,kBAAK,qMAAmM,uBAAYA,WAAW,KAAM,aAA0B,WAC/P,kBAAK,6FACL,oBACE,eAAIA,WAAW,MAAO,iEACtB,eAAIA,WAAW,MAAO,gFACtB,eAAIA,WAAW,MAAO,mEAI3B,CAEDL,EAAWM,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/guide/themes/js-bundling.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"javascript-bundling\"\n    }}>{`JavaScript bundling`}</h1>\n    <p>{`JavaScript bundling is an optimization technique you can use to reduce the number of server requests for JavaScript files.\nBundling accomplishes this by merging multiple JavaScript files together into one file to reduce the number of page requests.`}</p>\n    <h2 {...{\n      \"id\": \"enable-bundling\"\n    }}>{`Enable bundling`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`JavaScript bundling does not work unless the application is in `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/setup/application-modes.html#production-mode\"\n      }}>{`production mode`}</a>{`. Once in production mode, JavaScript bundling can only be enabled using the CLI. Follow these steps to setup JavaScript bundling from the CLI.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From the installation directory, switch to production mode:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento deploy:mode:set production\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enable JavaScript bundling:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento config:set dev/js/enable_js_bundling 1\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Optimize bundling by minifying JavaScript files:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento config:set dev/js/minify_files 1\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enable cache busting on static file URLs. This ensures users get the latest version of the assets anytime they update:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento config:set dev/static/sign 1\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To configure JavaScript bundling, you must disable Javascript file merging. Bundling will not work as the merging of files excludes bundling:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento config:set dev/js/merge_files 0\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Modifying the settings above when the application is in production mode will require `}<a parentName=\"p\" {...{\n            \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/static-view/static-view-file-deployment.html\"\n          }}>{`static view files deployment`}</a>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:static-content:deploy\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Finally, clear the cache:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento cache:clean config\n`}</code></pre>\n        <p parentName=\"li\">{`For example, when `}<inlineCode parentName=\"p\">{`Sign Static Files`}</inlineCode>{` is disabled (which is the default: `}<inlineCode parentName=\"p\">{`config:set dev/static/sign 0`}</inlineCode>{`), the URL to a static file might look like this: `}<inlineCode parentName=\"p\">{`/static/frontend/Magento/luma/en_US/mage/dataPost.js`}</inlineCode>{`. But when you enable the setting (`}<inlineCode parentName=\"p\">{`config:set dev/static/sign 1`}</inlineCode>{`), the same URL might look something like this: `}<inlineCode parentName=\"p\">{`static/version40s2f9ef/frontend/Magento/luma/en_US/mage/dataPost.js`}</inlineCode>{`, with a version number added as shown. The next time this file is updated (with `}<inlineCode parentName=\"p\">{`bin/magento setup:static-content:deploy`}</inlineCode>{`), a new version will be generated, causing the browser to download a new file from the server, thus busting the browser's cache.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"how-bundling-works\"\n    }}>{`How bundling works`}</h2>\n    <p>{`When you enable bundling, the application combines hundreds of JavaScript files into just a few JavaScript bundles and downloads those bundles for each page. Because the browser downloads the bundles synchronously, page rendering is blocked until all bundles finish downloading. But the time saved from reducing server requests from hundreds to just a few, usually offsets the cost of downloading the bundles synchronously.`}</p>\n    <h3 {...{\n      \"id\": \"excluding-files\"\n    }}>{`Excluding files`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<exclude>`}</inlineCode>{` node in the `}<inlineCode parentName=\"p\">{`etc/view.xml`}</inlineCode>{` file for a theme specifies the files to exclude from the JavaScript bundling process.\nJavaScript files excluded from bundling are loaded asynchronously by RequireJS as needed.`}</p>\n    <p>{`As such, you should exclude the JavaScript files you use for testing or development so that they are not loaded on every page.`}</p>\n    <p>{`The following code snippet from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/design/frontend/Magento/luma/etc/view.xml#L270\"\n      }}>{`Luma theme`}</a>{` shows the types of files you should exclude from the bundling process.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<exclude>\n    <item type=\"file\">Lib::jquery/jquery.min.js</item>\n    <item type=\"file\">Lib::jquery/jquery-ui-1.9.2.js</item>\n    <item type=\"file\">Lib::jquery/jquery.ba-hashchange.min.js</item>\n    <item type=\"file\">Lib::jquery/jquery.details.js</item>\n    <item type=\"file\">Lib::jquery/jquery.details.min.js</item>\n    <item type=\"file\">Lib::jquery/jquery.hoverIntent.js</item>\n    <item type=\"file\">Lib::jquery/colorpicker/js/colorpicker.js</item>\n    <item type=\"file\">Lib::requirejs/require.js</item>\n    <item type=\"file\">Lib::requirejs/text.js</item>\n    <item type=\"file\">Lib::date-format-normalizer.js</item>\n    <item type=\"file\">Lib::legacy-build.min.js</item>\n    <item type=\"file\">Lib::mage/captcha.js</item>\n    <item type=\"file\">Lib::mage/dropdown_old.js</item>\n    <item type=\"file\">Lib::mage/list.js</item>\n    <item type=\"file\">Lib::mage/loader_old.js</item>\n    <item type=\"file\">Lib::mage/webapi.js</item>\n    <item type=\"file\">Lib::mage/zoom.js</item>\n    <item type=\"file\">Lib::mage/translate-inline-vde.js</item>\n    <item type=\"file\">Lib::mage/requirejs/mixins.js</item>\n    <item type=\"file\">Lib::mage/requirejs/static.js</item>\n    <item type=\"file\">Magento_Customer::js/zxcvbn.js</item>\n    <item type=\"file\">Magento_Catalog::js/zoom.js</item>\n    <item type=\"file\">Magento_Ui::js/lib/step-wizard.js</item>\n    <item type=\"file\">Magento_Ui::js/form/element/ui-select.js</item>\n    <item type=\"file\">Magento_Ui::js/form/element/file-uploader.js</item>\n    <item type=\"file\">Magento_Ui::js/form/components/insert.js</item>\n    <item type=\"file\">Magento_Ui::js/form/components/insert-listing.js</item>\n    <item type=\"directory\">Magento_Ui::js/timeline</item>\n    <item type=\"directory\">Magento_Ui::js/grid</item>\n    <item type=\"directory\">Magento_Ui::js/dynamic-rows</item>\n    <item type=\"directory\">Magento_Ui::templates/timeline</item>\n    <item type=\"directory\">Magento_Ui::templates/grid</item>\n    <item type=\"directory\">Magento_Ui::templates/dynamic-rows</item>\n    <item type=\"directory\">Magento_Swagger::swagger-ui</item>\n    <item type=\"directory\">Lib::modernizr</item>\n    <item type=\"directory\">Lib::tiny_mce</item>\n    <item type=\"directory\">Lib::varien</item>\n    <item type=\"directory\">Lib::jquery/editableMultiselect</item>\n    <item type=\"directory\">Lib::jquery/jstree</item>\n    <item type=\"directory\">Lib::jquery/fileUploader</item>\n    <item type=\"directory\">Lib::css</item>\n    <item type=\"directory\">Lib::lib</item>\n    <item type=\"directory\">Lib::extjs</item>\n    <item type=\"directory\">Lib::prototype</item>\n    <item type=\"directory\">Lib::scriptaculous</item>\n    <item type=\"directory\">Lib::less</item>\n    <item type=\"directory\">Lib::mage/adminhtml</item>\n    <item type=\"directory\">Lib::mage/backend</item>\n</exclude>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"setting-bundle-file-size\"\n    }}>{`Setting bundle file size`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`bundle_size`}</inlineCode>{` variable controls the file size of the generated bundles.\nSpecifying a large `}<inlineCode parentName=\"p\">{`bundle_size`}</inlineCode>{` reduces the number of bundles generated, but generates larger file sizes.\nSpecifying a smaller `}<inlineCode parentName=\"p\">{`bundle_size`}</inlineCode>{` generates more bundles with a smaller file sizes.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<vars module=\"Js_Bundle\">\n    <var name=\"bundle_size\">1MB</var>\n</vars>\n`}</code></pre>\n    <p>{`The goal is to balance the number of bundles to download with the size of each bundle.\nAs a rule of thumb, each bundle should be at least 100 kB.`}</p>\n    <h2 {...{\n      \"id\": \"fine-tuning-your-theme\"\n    }}>{`Fine-tuning your theme`}</h2>\n    <p>{`There are many ways to tune your theme using the `}<inlineCode parentName=\"p\">{`etc/view.xml`}</inlineCode>{` file.`}</p>\n    <p>{`For example, the Luma theme is configured to work well for all pages, but you can maximize browser performance for home, catalog, or product pages by adding items to or removing items from the `}<inlineCode parentName=\"p\">{`<exclude>`}</inlineCode>{` node.`}</p>\n    <p>{`Follow these steps to help you identify which JavaScript files to bundle for your theme:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create a blank page with the layouts you would like to tune.`}</li>\n      <li parentName=\"ol\">{`Compare the JavaScript files loaded in the pages with the JavaScript files.`}</li>\n      <li parentName=\"ol\">{`Use the results of that comparison to build your exclude list.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}