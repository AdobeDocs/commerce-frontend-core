{"version":3,"file":"component---src-pages-guide-themes-apply-admin-md-69961777ed43d5da667c.js","mappings":"uSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,wBACH,yBACL,kBAAK,mEACL,eACE,GAAM,iBACH,kBACL,oBACE,eAAIC,WAAW,OACb,cAAGA,WAAW,OAAK,cAAGA,WAAW,IAC7B,KAAQ,qGACL,OAAW,uCAAqC,cAAGA,WAAW,IACjE,KAAQ,gHACL,QAAY,wEAErB,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,cAAGA,WAAW,IAC7B,KAAQ,6BACL,6CAAiD,OAE1D,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,cAAGA,WAAW,IAC7B,KAAQ,+DACL,2BAA+B,6IAA2I,uBAAYA,WAAW,KAAM,2CAAwD,0DACtQ,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBACV,wRASX,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,yEAAuE,cAAGC,WAAW,IACtF,KAAQ,iFACL,mEAAuE,gMAA8L,uBAAYA,WAAW,KAAM,oCAAiD,MAAI,uBAAYA,WAAW,KAAM,sCAAmD,MAAI,uBAAYA,WAAW,KAAM,uCAAoD,YACngB,kBAAK,+HACL,eACE,GAAM,0CACH,4CACL,kBAAK,wDACL,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,4CACL,iDAA+C,uBAAYA,WAAW,KAAM,aACnF,eAAIA,WAAW,MAAO,yCAAuC,cAAGA,WAAW,KACvE,KAAQ,oHACP,uBAAYA,WAAW,KAAM,8BAA8C,cAChF,eAAIA,WAAW,MAAO,+DAExB,kBAAK,sDACL,eACE,GAAM,2CACH,sCAAoC,uBAAYA,WAAW,MAAO,YACvE,kBAAK,0DAAwD,uBAAYA,WAAW,KAAM,gCAA6C,kEACvI,kBAAK,OAAK,uBAAYA,WAAW,KAAM,gCAA6C,2GACpF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,okBAaP,eACE,GAAM,8CACH,+CACL,kBAAK,uFACC,uBAAYA,WAAW,KAAM,6BAA0C,yDAAuD,uBAAYA,WAAW,KAAM,gCAA6C,eAAa,uBAAYA,WAAW,KAAM,2BAAwC,yBAChS,kBAAK,gFACL,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,uGACL,gCACP,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wGACL,iFAET,eACE,GAAM,yBACH,0BACL,kBAAK,iFAGR,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/guide/themes/apply-admin.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"apply-an-admin-theme\"\n    }}>{`Apply an Admin theme`}</h1>\n    <p>{`This topic describes how to apply your custom theme for Admin.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/set-mode.html\"\n          }}>{`Set`}</a>{` your application to the developer `}<a parentName=\"p\" {...{\n            \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/setup/application-modes.html\"\n          }}>{`mode`}</a>{`. The application mode influences the way static files are cached.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"../themes/create-admin.md\"\n          }}>{`Create a custom theme for the Admin panel`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://developer.adobe.com/commerce/php/development/build/\"\n          }}>{`Add a new custom module`}</a>{` or decide to use existing custom module. The module must load after the Magento_Theme module. To ensure this, add the following code in `}<inlineCode parentName=\"p\">{`<your_custom_module_dir>/etc/module.xml`}</inlineCode>{` (replace placeholders with your module information):`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<module name=\"%YourVendor_YourModule%\" setup_version=\"2.0.1\"> <!-- Example: \"Magento_Backend\" -->\n   <sequence>\n      <module name=\"Magento_Theme\"/>\n      <module name=\"Magento_Enterprise\"/> <!-- For Enterprise versions only -->\n   </sequence>\n</module>\n`}</code></pre>\n      </li>\n    </ol>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If you choose to create a separate dedicated module, you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2-samples/tree/master/sample-module-minimal\"\n      }}>{`Magento_SampleMinimal module from the sample modules repository`}</a>{` as example of a minimal module you need. If you will copy and use Magento_SampleMinimal, do not forget to enter your vendor and module naming, instead the ones used in the sample, in the `}<inlineCode parentName=\"p\">{`<your_module_dir>/etc/module.xml`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<your_module_dir>/registration.php`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`and <your_module_dir>/composer.json`}</inlineCode>{` files.`}</p>\n    <p>{`If you decide to use the existing module, keep in mind, that theme declaring might be affected when the module is changed.`}</p>\n    <h2 {...{\n      \"id\": \"apply-a-custom-theme-in-admin-overview\"\n    }}>{`Apply a custom theme in Admin: Overview`}</h2>\n    <p>{`To apply the Admin theme, take the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#specify-the-custom-admin-theme-in-dixml\"\n        }}>{`Specify the new Admin theme in your module's `}<inlineCode parentName=\"a\">{`di.xml`}</inlineCode></a></li>\n      <li parentName=\"ol\">{`Update the components by running the `}<a parentName=\"li\" {...{\n          \"href\": \"https://devdocs.magento.com/guides/v2.4/install-gde/install/cli/install-cli-uninstall.html#instgde-install-keep\"\n        }}><inlineCode parentName=\"a\">{`bin/magento setup:upgrade`}</inlineCode></a>{` command.`}</li>\n      <li parentName=\"ol\">{`Open the Admin in browser and view the new theme applied.`}</li>\n    </ol>\n    <p>{`Each step is described further with more details.`}</p>\n    <h2 {...{\n      \"id\": \"specify-the-custom-admin-theme-in-dixml\"\n    }}>{`Specify the custom Admin theme in `}<inlineCode parentName=\"h2\">{`di.xml`}</inlineCode></h2>\n    <p>{`You need to specify the admin theme to be used in the `}<inlineCode parentName=\"p\">{`<your_module_dir>/etc/di.xml`}</inlineCode>{` file. Add it, if the file does not yet exist in your module.`}</p>\n    <p>{`In `}<inlineCode parentName=\"p\">{`<your_module_dir>/etc/di.xml`}</inlineCode>{` add the following (replace the placeholders with the vendor name and theme code of your Admin theme):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n\n    <!-- Admin theme. Start -->\n    <type name=\"Magento\\\\Theme\\\\Model\\\\View\\\\Design\">\n        <arguments>\n             <argument name=\"themes\" xsi:type=\"array\">\n                 <item name=\"adminhtml\" xsi:type=\"string\">%Your_vendor_dir%/%your_theme_code%</item> <!-- Example: \"Magento/backend\" -->\n             </argument>\n         </arguments>\n    </type>\n    <!-- Admin theme. End -->\n</config>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-components-to-apply-the-admin-theme\"\n    }}>{`Update components to apply the Admin theme`}</h2>\n    <p>{`For your changes to take effect, you need to update components. For this,\nrun the `}<inlineCode parentName=\"p\">{`bin/magento setup:upgrade`}</inlineCode>{` command in your command line. If prompted, also run `}<inlineCode parentName=\"p\">{`bin/magento setup:di:compile`}</inlineCode>{`. Then run `}<inlineCode parentName=\"p\">{`bin/magento cache:clean`}</inlineCode>{` to clear the cache.`}</p>\n    <p>{`For details about performing command line tasks, view the following topics:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/config-cli.html\"\n        }}>{`Command line configuration`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://devdocs.magento.com/guides/v2.4/install-gde/install/cli/install-cli-subcommands-db-upgr.html\"\n        }}>{`Uninstall or reinstall the application: Optionally keeping generated files`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"open-admin-in-browser\"\n    }}>{`Open Admin in browser`}</h2>\n    <p>{`The last step is to open the Admin in browser and view the new theme applied.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}