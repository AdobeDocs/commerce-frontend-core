{"version":3,"file":"component---src-pages-ui-components-concepts-element-md-bede7355b453ab2324eb.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/ui-components/concepts/element.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"uielement-class\"\n    }}>{`uiElement class`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`uiElement`}</inlineCode>{` class is a direct successor of the `}<a parentName=\"p\" {...{\n        \"href\": \"class.md\"\n      }}>{`uiClass library`}</a>{`.\nWhen creating a new component, use the `}<inlineCode parentName=\"p\">{`uiElement`}</inlineCode>{` class as a direct parent, if your component will be the last in the components hierarchy chain.`}</p>\n    <p><inlineCode parentName=\"p\">{`uiElement`}</inlineCode>{` source code is `}<inlineCode parentName=\"p\">{`<Magento_Ui_module_dir>/view/base/web/js/lib/core/element/element.js`}</inlineCode>{`, in the Magento Open Source GitHub repository: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js\"\n      }}>{`app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"commonly-used-methods\"\n    }}>{`Commonly used methods`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`initLinks()`}</inlineCode>{` method implements component communication by using `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Ui/view/base/web/js/lib/core/element/links.js\"\n          }}><inlineCode parentName=\"a\">{`links.js`}</inlineCode></a>{`. `}<inlineCode parentName=\"p\">{`initLinks()`}</inlineCode>{` introduces processing of the `}<a parentName=\"p\" {...{\n            \"href\": \"linking.md\"\n          }}><inlineCode parentName=\"a\">{`exports`}</inlineCode>{`, `}<inlineCode parentName=\"a\">{`imports`}</inlineCode>{`, `}<inlineCode parentName=\"a\">{`links`}</inlineCode>{` and `}<inlineCode parentName=\"a\">{`listens`}</inlineCode>{` properties`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`initObservable()`}</inlineCode>{` method allows you to declare observable variables within the same instance.`}</p>\n        <p parentName=\"li\">{`Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`initObservable: function () {\n    this._super();\n\n    this.track('childTemplate')\n    this.observe([\n        '%myVariable1%',\n        '%myVariable2%'\n    ]);\n\n    return this;\n}\n`}</code></pre>\n        <p parentName=\"li\">{`where:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`the `}<inlineCode parentName=\"p\">{`observe()`}</inlineCode>{` method is a wrapper for the `}<inlineCode parentName=\"p\">{`ko.observable()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ko.observableArray()`}</inlineCode>{` methods. It converts the properties of the current method into the observable properties. `}<inlineCode parentName=\"p\">{`observe([{Boolean} isTracked,] {String|Array|Object} listOfProperties)`}</inlineCode>{`:`}</p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`isTracked`}</inlineCode>{` - `}<inlineCode parentName=\"li\">{`{Boolean}`}</inlineCode>{`, optional, - defines access usage: whether to use observable properties (`}<inlineCode parentName=\"li\">{`isTracked = false`}</inlineCode>{`) or property accessors (`}<inlineCode parentName=\"li\">{`isTracked = true`}</inlineCode>{`).`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`listOfProperties`}</inlineCode>{` - `}<inlineCode parentName=\"li\">{`{String}`}</inlineCode>{` is treated as space-separated list of properties' names. Initial values will be used from current instance (when corresponding property exist).`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`listOfProperties`}</inlineCode>{` - `}<inlineCode parentName=\"li\">{`{Array}`}</inlineCode>{` a list of properties' names. Initial values will be used from current instance (when corresponding property exist).`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`listOfProperties`}</inlineCode>{` - `}<inlineCode parentName=\"li\">{`{Object}`}</inlineCode>{` a list of properties' names. Initial values will be used from this object.`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`the `}<inlineCode parentName=\"p\">{`track(listOfProperties)`}</inlineCode>{` method is equal to `}<inlineCode parentName=\"p\">{`observe(true, listOfProperties)`}</inlineCode>{`.`}</p>\n            <p parentName=\"li\">{`The main difference between `}<inlineCode parentName=\"p\">{`observe()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`track()`}</inlineCode>{` is that `}<inlineCode parentName=\"p\">{`observe()`}</inlineCode>{` is mainly used without first boolean argument. So it really converts properties to observable functions. It changes how property can be accessed. Otherwise `}<inlineCode parentName=\"p\">{`track()`}</inlineCode>{` uses property accessors. So property access remains the same.`}</p>\n            <p parentName=\"li\">{`Example:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-js\"\n              }}>{`this.observable = 1;\nthis.observe('observable');\n\nthis.observable(2); // setter\nthis.observable();  // getter\n\nthis.trackable = 1;\nthis.track('trackable');\n\nthis.trackable = 2; // setter\nthis.trackable;     // getter\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`initModules()`}</inlineCode>{` method initializes external UI components' instances and links them to local variables. This method works with the `}<inlineCode parentName=\"p\">{`modules`}</inlineCode>{` section of the configuration, where we define the name of the external instance and the local variable. The `}<inlineCode parentName=\"p\">{`modules`}</inlineCode>{` section is an object where each key is the variable's name and each value is the instance's name. A developer does not need to be concerned with the instantiation of the module (external instance), because the `}<inlineCode parentName=\"p\">{`initModules()`}</inlineCode>{` method will resolve the variable when the instance is instantiated.`}</p>\n        <p parentName=\"li\">{`Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`// Config, where the \\`modules\\` property is declared\ndefaults: {\n    modules: {\n        '%myProperty%': '%linkToTheComponent%'\n    }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`getTemplate()`}</inlineCode>{` method returns a file path to UI component's template.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`hasTemplate()`}</inlineCode>{` method verifies that the `}<inlineCode parentName=\"p\">{`template`}</inlineCode>{` property was specified in the instance configuration.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}