{"version":3,"file":"component---src-pages-ui-components-components-wysiwyg-extension-points-md-a99383387a55a3ace360.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/ui-components/components/wysiwyg/extension-points.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"wysiwyg-extension-points\"\n    }}>{`WYSIWYG extension points`}</h1>\n    <p>{`This topic goes over the extension points for entities.\nYou can use these connection points to integrate entities into third-party WYSIWYG editors.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"add-custom-editor.md\"\n      }}>{`Add a third-party editor`}</a>{` for instructions on how to add a third-party WYSIWYG editor to Magento.`}</p>\n    <h2 {...{\n      \"id\": \"entity-integration\"\n    }}>{`Entity integration`}</h2>\n    <p>{`The specific steps needed to create an editor plugin vary between different editors, but\nfor most editors, it usually involves creating an icon or button for the plugin and executing JavaScript code when clicked.`}</p>\n    <p>{`Use the following steps as a starting point for integrating entities into your custom WYSIWYG editor.`}</p>\n    <h3 {...{\n      \"id\": \"step-1-create-plugin-directory-structure\"\n    }}>{`Step 1. Create plugin directory structure`}</h3>\n    <p>{`Create the appropriate plugin directory structure for the entity inside your editor's directory.`}</p>\n    <p>{`For example, both TinyMCE and CKEditor editors both have a `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` directory that holds all available plugins.`}</p>\n    <p>{`This folder should be inside your module's `}<inlineCode parentName=\"p\">{`/view/<area>`}</inlineCode>{` directory so it will be published to the `}<inlineCode parentName=\"p\">{`pub/static`}</inlineCode>{` directory.`}</p>\n    <h3 {...{\n      \"id\": \"step-2-add-editor-icon\"\n    }}>{`Step 2. Add editor icon`}</h3>\n    <p>{`Add the appropriate icon file into your plugin's specific icon or image directory.`}</p>\n    <p>{`For example, in a CKEditor4 plugin, these icons would be added to the following locations:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`app/code/CKEditor/CKEditor4/view/base/web/js/ckeditor4/plugins/variable/icons/variable.png`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`app/code/CKEditor/CKEditor4/view/base/web/js/ckeditor4/plugins/widget/icons/widget.png`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"step-3-implement-plugin-functionality\"\n    }}>{`Step 3. Implement plugin functionality`}</h3>\n    <h4 {...{\n      \"id\": \"variable-entity\"\n    }}>{`Variable entity`}</h4>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/web/mage/adminhtml/wysiwyg/tiny_mce/plugins/magentovariable/editor_plugin.js\"\n      }}><inlineCode parentName=\"a\">{`MagentovariablePlugin`}</inlineCode></a>{` object to implement the plugin functionality for the variable entity.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong>{` `}<inlineCode parentName=\"p\">{`lib/web/mage/adminhtml/wysiwyg/tiny_mce/plugins/magentovariable/editor_plugin.js`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`magentovariable`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/**\n * Initialize editor plugin.\n *\n * @param {tinymce.editor} editor - Editor instance that the plugin is initialized in.\n */\ninit: function (ed) {\n    var self = this;\n    /**\n    * Add new command to open variables selector slideout.\n    */\n    editor.addCommand('openVariablesSlideout', function (commandConfig) {\n        var selectedElement;\n\n        if (commandConfig) {\n            selectedElement = commandConfig.selectedElement;\n        } else {\n            selectedElement = tinymce.activeEditor.selection.getNode();\n        }\n        MagentovariablePlugin.setEditor(editor);\n        MagentovariablePlugin.loadChooser(\n            config.url,\n            wysiwyg.getId(),\n            selectedElement\n        );\n    });\n\n    editor.ui.registry.addToggleButton('magentovariable', {\n        icon: 'magentovariable',\n        tooltip: jQuery.mage.__('Insert Variable'),\n\n        /**\n         * execute openVariablesSlideout for onAction callback\n         */\n        onAction: function () {\n            editor.execCommand('openVariablesSlideout');\n        },\n\n        /**\n         * Highlight or dismiss Insert Variable button when variable is selected or deselected.\n         */\n        onSetup: function (api) {\n            /**\n             * Toggle active state of Insert Variable button.\n             *\n             * @param {Object} e\n             */\n            var toggleVariableButton = function (e) {\n                api.setActive(false);\n\n                if (jQuery(e.target).hasClass('magento-variable')) {\n                    api.setActive(true);\n                }\n            };\n\n            editor.on('click', toggleVariableButton);\n            editor.on('change', toggleVariableButton);\n        }\n    });\n    ......\n},\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example:`}</strong>{` `}<inlineCode parentName=\"p\">{`plugin.js`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`variable`}</inlineCode>{` plugin for CKEditor4`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/**\n * Copyright Â© Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global CKEDITOR, MagentovariablePlugin, varienGlobalEvents, Base64 */\n/* eslint-disable strict */\nCKEDITOR.plugins.add('variable', {\n    icons: 'variable',\n\n    /**\n     * Initialize editor plugin.\n     */\n    init: function (editor) {\n\n        /**\n         * Add new command to open variables selector slideout.\n         */\n        editor.addCommand('openVariablesSlideout', {\n            exec: function (editor) {\n\n                require([\n                    'CKEditor_CKEditor4/js/ckeditor4/ckeditor'\n                ], function (ckeditor) {\n                    //we need this code to transfer config\n                    var pluginSettings = ckeditor.settings.magentoPluginsOptions.get('variable');\n\n                    MagentovariablePlugin.setEditor(editor);\n                    MagentovariablePlugin.loadChooser(pluginSettings.url, ckeditor.settings.elements);\n                });\n            }\n        });\n\n        /**\n         * Add button to the editor toolbar.\n         */\n        editor.ui.addButton('variable', {\n            label: jQuery.mage.__('Insert Variable'),\n            command: 'openVariablesSlideout',\n            toolbar: 'insert'\n\n        });\n    },\n});\n`}</code></pre>\n    <p>{`To integrate the default application UI for variable, you must have access to the following data:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`backend URL to load the `}<inlineCode parentName=\"p\">{`variable_modal`}</inlineCode></p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Example:`}</strong>{` method that returns this url`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`public function getVariablesWysiwygActionUrl()\n{\n    return $this->_url->getUrl('mui/index/render', ['namespace' => 'variables_modal']);\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`htmlId of the WYSIWYG editor.\nFor CKEditor4, you can get this by calling `}<inlineCode parentName=\"p\">{`editor.element.getId()`}</inlineCode>{`.`}</p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"widget-entity\"\n    }}>{`Widget entity`}</h4>\n    <p>{`Use the global `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/web/mage/adminhtml/wysiwyg/tiny_mce/plugins/magentowidget/editor_plugin.js\"\n      }}><inlineCode parentName=\"a\">{`widgetTools`}</inlineCode></a>{` object to implement the plugin functionality for the widget entity.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong>{` `}<inlineCode parentName=\"p\">{`lib/web/mage/adminhtml/wysiwyg/tiny_mce/plugins/magentowidget/editor_plugin.js`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`magentowidget`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/**\n * @param {tinymceDeprecated.Editor} ed - Editor instance that the plugin is initialized in.\n * @param {String} url - Absolute URL to where the plugin is located.\n */\ninit: function (ed, url) {\n    ....\n    editor.addCommand('mceMagentowidget', function (img) {\n        if (self.activePlaceholder) {\n            img = self.activePlaceholder;\n        }\n\n        widgetTools.setActiveSelectedNode(img);\n        widgetTools.openDialog(\n            config['window_url'] + 'widget_target_id/' + editor.getElement().id + '/'\n        );\n    });\n\n    editor.ui.registry.addToggleButton('magentowidget', {\n        icon: 'magentowidget',\n        tooltip: jQuery.mage.__('Insert Widget'),\n\n        /**\n         * execute openVariablesSlideout for onAction callback\n         */\n        onAction: function () {\n            editor.execCommand('mceMagentowidget');\n        },\n\n        /**\n         * Add a node change handler, selects the button in the UI when a image is selected\n         * @param {ToolbarToggleButtonInstanceApi} api\n         */\n        onSetup: function (api) {\n            /**\n             * NodeChange handler\n             */\n            editor.on('NodeChange', function (e) {\n                var placeholder = e.element;\n\n                if (self.isWidgetPlaceholderSelected(placeholder)) {\n                    widgetTools.setEditMode(true);\n                    api.setActive(true);\n                } else {\n                    widgetTools.setEditMode(false);\n                    api.setActive(false);\n                }\n            });\n        }\n    });\n.......\n},\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example:`}</strong>{` `}<inlineCode parentName=\"p\">{`plugin.js`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`widget`}</inlineCode>{` plugin for CKEditor4`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/**\n * Copyright Â© Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global CKEDITOR, MagentovariablePlugin, varienGlobalEvents, Base64 */\n/* eslint-disable strict */\nCKEDITOR.plugins.add('widget', {\n    icons: 'widget',\n\n    /**\n     * Initialize editor plugin.\n     *\n     * @param {tinymce.editor} editor - Editor instance that the plugin is initialized in.\n     * @param {String} url - Absolute URL to where the plugin is located.\n     */\n    init: function (editor) {\n        var self = this;\n\n        require([\n            'Magento_Variable/js/config-directive-generator',\n            'Magento_Variable/js/custom-directive-generator'\n        ], function (configDirectiveGenerator, customDirectiveGenerator) {\n            self.configDirectiveGenerator = configDirectiveGenerator;\n            self.customDirectiveGenerator = customDirectiveGenerator;\n        });\n\n        /**\n         * Add new command to open variables selector slideout.\n         */\n        editor.addCommand('mceMagentowidget', {\n            exec: function (editor) {\n\n                require([\n                    'CKEditor_CKEditor4/js/ckeditor4/ckeditor'\n                ], function (ckeditor) {\n                    widgetTools.openDialog(\n                        ckeditor.settings['widget_window_url'] + 'widget_target_id/' + editor.element.getId()+ '/'\n                    );\n                });\n            }\n        });\n\n        /**\n         * Add button to the editor toolbar.\n         */\n        editor.ui.addButton('widget', {\n            label: jQuery.mage.__('Insert Widget'),\n            command: 'mceMagentowidget',\n            toolbar: 'insert'\n\n        });\n    }\n});\n`}</code></pre>\n    <p>{`To integrate the default application UI for widgets, you need access to the following data:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The backend `}<inlineCode parentName=\"li\">{`widget_window_url`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`\\\\Magento\\\\Widget\\\\Model\\\\Widget\\\\Config::getWidgetWindowUrl`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`htmlId of the WYSIWYG editor. For CKEditor4, you can get this by calling `}<inlineCode parentName=\"li\">{`editor.element.getId()`}</inlineCode>{`.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"media-gallery-entity\"\n    }}>{`Media Gallery entity`}</h4>\n    <p>{`Use the global `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/web/mage/adminhtml/browser.js\"\n      }}><inlineCode parentName=\"a\">{`MediabrowserUtility`}</inlineCode></a>{` object to implement or override image browsing functionality in the editor.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong>{` `}<inlineCode parentName=\"p\">{`lib/web/mage/adminhtml/wysiwyg/tiny_mce/tinymce5Adapter.js`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`.....\n/**\n * @param {Object} o\n */\nopenFileBrowser: function (o) {\n    var typeTitle = this.translate('Select Images'),\n        storeId = this.config['store_id'] ? this.config['store_id'] : 0,\n        frameDialog = jQuery('div.mce-container[role=\"dialog\"]'),\n        self = this,\n        wUrl = this.config['files_browser_window_url'] +\n            'target_element_id/' + this.getId() + '/' +\n            'store/' + storeId + '/';\n\n    this.mediaBrowserOpener = o.callback;\n\n    if (typeof o.meta.filetype !== 'undefined' && o.meta.filetype !== '') { //eslint-disable-line eqeqeq\n        wUrl = wUrl + 'type/' + o.meta.filetype + '/';\n    }\n\n    frameDialog.hide();\n    jQuery('.tox-tinymce-aux').hide();\n\n    require(['mage/adminhtml/browser'], function () {\n        MediabrowserUtility.openDialog(wUrl, false, false, typeTitle, {\n                /**\n                 * Closed.\n                 */\n                closed: function () {\n                    frameDialog.show();\n                    jQuery('.tox-tinymce-aux').show();\n                },\n\n                targetElementId: self.activeEditor() ? self.activeEditor().id : null\n            }\n        );\n    });\n},\n.....\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"step-4-register-plugin\"\n    }}>{`Step 4. Register plugin`}</h4>\n    <p>{`Use the editor specific command or steps needed to register your plugin with the editor.`}</p>\n    <p>{`For example, TinyMCE3 has a `}<inlineCode parentName=\"p\">{`PluginManager.add()`}</inlineCode>{` method while CKEditor requires you to modify a configuration file.`}</p>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <p>{`Configuration for the WYSIWYG editor and available entities is implemented in the following class:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Cms/Model/Wysiwyg/Config.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Cms\\\\Model\\\\Wysiwyg\\\\Config`}</inlineCode></a></p>\n    <p>{`This class has a `}<inlineCode parentName=\"p\">{`getConfig()`}</inlineCode>{` method that returns the all available configurations as an array.`}</p>\n    <p>{`The class that aggregates the data in the array is the configuration provider class:`}</p>\n    <p><inlineCode parentName=\"p\">{`Magento\\\\Cms\\\\Model\\\\Wysiwyg\\\\CompositeConfigProvider`}</inlineCode></p>\n    <p>{`In your module's `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/php/development/build/dependency-injection-file/\"\n      }}><inlineCode parentName=\"a\">{`di.xml`}</inlineCode></a>{` file, you can define a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/php/development/build/dependency-injection-file/#virtual-types\"\n      }}>{`virtual type`}</a>{` of this class to substitute or modify the following configuration providers:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`variablePluginConfigProvider`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provider for variable plugin configuration`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`widgetPluginConfigProvider`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provider for widget plugin configuration`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`galleryConfigProvider`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provider for the media gallery configuration`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`wysiwygConfigPostProcessor`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provider for WYSIWYG editor configuration`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If your implementation does not require any modifications to the configuration, you can use the default implementation:`}</p>\n    <p><inlineCode parentName=\"p\">{`Magento\\\\Cms\\\\Model\\\\WysiwygDefaultConfig`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Example di.xml file entry for TinyMCE editor:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Cms\\\\Model\\\\Wysiwyg\\\\CompositeConfigProvider\">\n    <arguments>\n        <argument name=\"variablePluginConfigProvider\" xsi:type=\"array\">\n            <item name=\"default\" xsi:type=\"string\">Magento\\\\Variable\\\\Model\\\\Variable\\\\ConfigProvider</item>\n        </argument>\n        <argument name=\"widgetPluginConfigProvider\" xsi:type=\"array\">\n            <item name=\"default\" xsi:type=\"string\">Magento\\\\Widget\\\\Model\\\\Widget\\\\Config</item>\n        </argument>\n        <argument name=\"wysiwygConfigPostProcessor\" xsi:type=\"array\">\n            <item name=\"default\" xsi:type=\"string\">Magento\\\\Cms\\\\Model\\\\Wysiwyg\\\\DefaultConfigProvider</item>\n        </argument>\n        <argument name=\"galleryConfigProvider\" xsi:type=\"array\">\n            <item name=\"default\" xsi:type=\"string\">Magento\\\\Cms\\\\Model\\\\Wysiwyg\\\\Gallery\\\\DefaultConfigProvider</item>\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"configuration-providers\"\n    }}>{`Configuration providers`}</h3>\n    <p>{`Configuration providers are classes with a `}<inlineCode parentName=\"p\">{`getConfig()`}</inlineCode>{` method that returns the configuration for a specific entity.\nThese classes are implementations of the following interface:`}</p>\n    <p><inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\Data\\\\Wysiwyg\\\\ConfigProviderInterface`}</inlineCode></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` attribute for the configuration provider in the `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` entry must match the editor's registered option value.\nIn the example provided, this value is `}<inlineCode parentName=\"p\">{`default`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}