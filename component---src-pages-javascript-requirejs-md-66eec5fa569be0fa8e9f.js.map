{"version":3,"file":"component---src-pages-javascript-requirejs-md-66eec5fa569be0fa8e9f.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/javascript/requirejs.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"requirejs-in-commerce\"\n    }}>{`RequireJS in Commerce`}</h1>\n    <p>{`This topic describes general concepts of how the `}<a parentName=\"p\" {...{\n        \"href\": \"http://requirejs.org\"\n      }}>{`RequireJS library`}</a>{` is used in the application with examples. Please refer to official RequireJS documentation for in-depth explanation.`}</p>\n    <p>{`RequireJS is a JavaScript file and module loader. It improves perceived page load times because it allows JavaScript to load in the background. In particular, it enables asynchronous JavaScript loading.`}</p>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <p>{`All configuration is done in the `}<inlineCode parentName=\"p\">{`requirejs-config.js`}</inlineCode>{` file. It has a single root object `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` which contains the configuration options described below. All the configuration settings are optional and are used only when required. The following snippet is a sample `}<inlineCode parentName=\"p\">{`requirejs-config.js`}</inlineCode>{` describing the structure of the file. Example `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Theme/view/base/requirejs-config.js\"\n      }}><inlineCode parentName=\"a\">{`requirejs-config.js`}</inlineCode>{` file`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var config = {\n    map: {...},\n    paths: {...},\n    deps: [...],\n    shim: {...},\n    config: {\n        mixins: {...},\n        text: {...}\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"map\"\n    }}>{`map`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`map`}</inlineCode>{` configuration maps (connects) any real AMD modules that calls `}<inlineCode parentName=\"p\">{`define()`}</inlineCode>{`, to the specified alias. In the snippet below, `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` means all loaded RequireJS modules can use the specified alias. The second mapping applies only in the context of `}<inlineCode parentName=\"p\">{`Vendor_Module/js/amd-module`}</inlineCode>{`. So, both types of contexts can be applied: either a global context, or a module specific context.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`map: {\n    '*': {\n        alias: 'Vendor_Module/js/complex/path/amd-module'\n    },\n    'Vendor_Module/js/amd-module': {\n        alias-two: 'Vendor_Module/js/complex/path/amd-module-two'\n    }\n}\n`}</code></pre>\n    <p>{`Now we can use our `}<inlineCode parentName=\"p\">{`Vendor_Module/js/complex/path/module`}</inlineCode>{` using `}<inlineCode parentName=\"p\">{`alias`}</inlineCode>{` in any RequireJS module or config file without needing to type the entire path. For example, `}<inlineCode parentName=\"p\">{`catalogAddToCart`}</inlineCode>{` is mapped to `}<inlineCode parentName=\"p\">{`Magento_Catalog/js/catalog-add-to-cart`}</inlineCode>{` and can be used anywhere as a RequireJS module name. In the next example, `}<inlineCode parentName=\"p\">{`catalogAddToCart`}</inlineCode>{` is mapped to `}<inlineCode parentName=\"p\">{`Magento_Catalog/js/catalog-add-to-cart`}</inlineCode>{` only in the context of the `}<inlineCode parentName=\"p\">{`discountCode`}</inlineCode>{` module.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`map: {\n    '*': {\n        catalogAddToCart: 'Magento_Catalog/js/catalog-add-to-cart'\n    },\n    'discountCode': {\n        catalogAddToCart: 'Magento_Catalog/js/catalog-add-to-cart'\n    }\n}\n`}</code></pre>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You can also use the `}<inlineCode parentName=\"p\">{`map`}</inlineCode>{` configuration to override a JS module with a custom JS module. See `}<a parentName=\"p\" {...{\n        \"href\": \"custom.md#replace-a-default-component\"\n      }}>{`Custom JS component`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"paths\"\n    }}>{`paths`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`paths`}</inlineCode>{` configuration, similar to `}<inlineCode parentName=\"p\">{`map`}</inlineCode>{`, is used for aliasing not just any real AMD module that calls `}<inlineCode parentName=\"p\">{`define()`}</inlineCode>{`, but also any JS file (even from a URL), HTML templates, etc. The application uses this to alias URLs and third-party libraries.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`paths: {\n    'alias': 'library/file',\n    'another-alias': 'https://some-library.com/file'\n}\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`When setting a path to an array with multiple script sources, if the first script fails to load, the next is used as a fallback.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var config = {\n    ...\n    paths: {\n        'alias': [\n            'https://some-library.com/file',\n            'vendor_name>_<module_name>/js/file'\n        ]\n    }\n};\n`}</code></pre>\n    <p>{`For external content, resources should be whitelisted; otherwise the application raises error notices in the browser console. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/php/development/security/content-security-policies/\"\n      }}>{`Content Security Policies`}</a>{`.`}</p>\n    <p>{`Consider the example of overwriting an HTML file in the adminhtml.\nIn this example, the `}<inlineCode parentName=\"p\">{`max-length`}</inlineCode>{` value of the text-box in the `}<inlineCode parentName=\"p\">{`adminhtml`}</inlineCode>{` is altered. The HTML file is located at `}<inlineCode parentName=\"p\">{`vendor/magento/module_ui/view/base/web/templates/form/element/input.html`}</inlineCode>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a `}<inlineCode parentName=\"p\">{`requirejs-config.js`}</inlineCode>{` file under `}<inlineCode parentName=\"p\">{`app/code/<Vendor_Name>/<Module_Name>/view/base/`}</inlineCode>{` and add the following code:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`var config = {\n    paths: {\n        'ui/template/form/element/input': '<vendor_name>_<module_name>/template/form/element/input'\n    }\n};\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create an `}<inlineCode parentName=\"p\">{`input.html`}</inlineCode>{` file under `}<inlineCode parentName=\"p\">{`app/code/<Vendor_Name>/<Module_Name>/view/base/web/template/form/element/`}</inlineCode>{` and copy the contents of the `}<inlineCode parentName=\"p\">{`input.html`}</inlineCode>{` file from the `}<inlineCode parentName=\"p\">{`module_ui`}</inlineCode>{` template file.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the maxlength value to `}<inlineCode parentName=\"p\">{`512`}</inlineCode>{`, which was originally set to `}<inlineCode parentName=\"p\">{`256`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Upgrade the application:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:upgrade\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Generate the dependency injection configuration:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:di:compile\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Confirm the modification by inspecting the element source code and check the `}<inlineCode parentName=\"p\">{`maxlength`}</inlineCode>{` value, which should be `}<inlineCode parentName=\"p\">{`512`}</inlineCode>{` as specified in the template.`}</p>\n      </li>\n    </ol>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The path for `}<inlineCode parentName=\"p\">{`Magento_Ui/templates`}</inlineCode>{` is set to be `}<inlineCode parentName=\"p\">{`ui/template`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`requirejs-config.js`}</inlineCode>{` module of `}<inlineCode parentName=\"p\">{`module_ui`}</inlineCode>{`, hence `}<inlineCode parentName=\"p\">{`ui/template`}</inlineCode>{` is used for specifying the path. If no paths are set, `}<inlineCode parentName=\"p\">{`<module_name>/templates`}</inlineCode>{` should be used.`}</p>\n    <h3 {...{\n      \"id\": \"deps\"\n    }}>{`deps`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`deps`}</inlineCode>{` configuration is used to add a dependency. It can either be used directly under `}<inlineCode parentName=\"p\">{`var config = {}`}</inlineCode>{` or under a `}<a parentName=\"p\" {...{\n        \"href\": \"#shim\"\n      }}>{`shim configuration`}</a>{`. Adding modules under an independent `}<inlineCode parentName=\"p\">{`deps`}</inlineCode>{` configuration will load the specified modules in all pages.`}</p>\n    <p>{`In this snippet, the custom `}<inlineCode parentName=\"p\">{`Vendor_Module/js/module`}</inlineCode>{` will be loaded in all pages.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`deps: ['Vendor_Module/js/module']\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"shim\"\n    }}>{`shim`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`shim`}</inlineCode>{` configuration is used to build a dependency on a third party library, since we cannot modify it.`}</p>\n    <p>{`When to use the `}<inlineCode parentName=\"p\">{`shim`}</inlineCode>{` configuration:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`To add a new dependency to a third party library`}</li>\n      <li parentName=\"ul\">{`To add a new dependency to a third party library which does not use an AMD module`}</li>\n      <li parentName=\"ul\">{`To change load order by adding a dependency to a third party library`}</li>\n    </ul>\n    <p>{`In this snippet, dependencies are added directly in an array, or it can be specified as an array under the `}<inlineCode parentName=\"p\">{`deps`}</inlineCode>{` key. The `}<inlineCode parentName=\"p\">{`exports`}</inlineCode>{` key is used to specify under what identifier the module is exported into. This export identifier can be used to access it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`shim: {\n    '3rd-party-library': ['myJSFile'],\n    'another-3rd-party-library': {\n        deps: ['myJSFile'],\n        exports: 'another3rdPartyLibrary'\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"mixins\"\n    }}>{`mixins`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`mixins`}</inlineCode>{` configuration is used to overwrite component methods of an AMD module which returns either a UI component, a jQuery widget, or a JS object. Unlike the above configuration properties, the `}<inlineCode parentName=\"p\">{`mixins`}</inlineCode>{` property is under the `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` property, apart from the parent object called `}<strong parentName=\"p\">{`config`}</strong>{`.`}</p>\n    <p>{`In this snippet, `}<inlineCode parentName=\"p\">{`Vendor_Module/js/module-mixin`}</inlineCode>{` will overwrite the existing component methods in `}<inlineCode parentName=\"p\">{`Vendor_Module/js/module`}</inlineCode>{` with the specified component methods. It is a convention to name the mixin by appending a `}<inlineCode parentName=\"p\">{`-mixin`}</inlineCode>{` to the original `}<inlineCode parentName=\"p\">{`path/to/js`}</inlineCode>{`, although not required.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`config: {\n    mixins: {\n        'Vendor_Module/js/module': {\n            'Vendor_Module/js/module-mixin': true\n        }\n    }\n}\n`}</code></pre>\n    <p>{`The concept of Javascript mixins itself is explained in depth in `}<a parentName=\"p\" {...{\n        \"href\": \"mixins.md\"\n      }}>{`Using Javascript Mixins`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"text\"\n    }}>{`text`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` configuration is used to set the security request headers using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/web/mage/requirejs/text.js\"\n      }}><inlineCode parentName=\"a\">{`text.js`}</inlineCode></a>{` file.`}</p>\n    <p>{`Without `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\"\n      }}>{`Cross Origin Resource Sharing (CORS)`}</a>{` it is not possible to add the `}<inlineCode parentName=\"p\">{`X-Requested-With`}</inlineCode>{` header to a cross domain XHR request. Set this header to tell the server that the request was initiated from the same domain.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`config: {\n    text: {\n        'headers': {\n            'X-Requested-With': 'XMLHttpRequest'\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}