{"version":3,"file":"component---src-pages-javascript-init-md-66d165e5d1bfca585036.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/javascript/init.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"call-and-initialize-javascript\"\n    }}>{`Call and initialize JavaScript`}</h1>\n    <p>{`This topic describes different ways to call and initialize JavaScript in Adobe Commerce and Magento Open Source:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Insert a JavaScript component in `}<inlineCode parentName=\"li\">{`.phtml`}</inlineCode>{` page templates.`}</li>\n      <li parentName=\"ul\">{`Call Javascript components that require initialization in Javascript (`}<inlineCode parentName=\"li\">{`.js`}</inlineCode>{`) files.`}</li>\n    </ul>\n    <p>{`We strongly recommend that you use the described approaches and do not add inline JavaScript.`}</p>\n    <h2 {...{\n      \"id\": \"insert-a-component-in-a-phtml-template\"\n    }}>{`Insert a component in a PHTML template`}</h2>\n    <p>{`Depending on your task, you can use declarative or imperative notation to insert a JS component into a PHTML template. Use declarative notation if a component requires initialization and imperative notation in other cases.`}</p>\n    <h3 {...{\n      \"id\": \"declarative-notation\"\n    }}>{`Declarative notation`}</h3>\n    <p>{`Using the declarative notation to insert a JS component prepares all the configuration on the backend and outputs it to page source using standard tools. Use declarative notation if your JavaScript component requires initialization.`}</p>\n    <p>{`You have two options for specifying declarative notation:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using the `}<inlineCode parentName=\"p\">{`data-mage-init`}</inlineCode>{` attribute`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`This is used to target a specific HTML element. It is easier to implement and is commonly used for jQuery UI widgets. This method can only be implemented on the specified HTML tag. For example, `}<inlineCode parentName=\"p\">{`<nav data-mage-init='{\"<component_name>\": {...}}'></nav>`}</inlineCode>{`. This is preferred for its concise syntax, and direct access to the HTML element.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using the `}<inlineCode parentName=\"p\">{`<script type=\"text/x-magento-init\"> ... </script>`}</inlineCode>{` tag`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`This is used to target either a CSS selector or `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{`. If the CSS selector matches multiple HTML elements, the script will run for each matched HTML element. For `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{`, no HTML element is selected and the script will run once with the HTML DOM as its target. This method can be implemented from anywhere in the codebase to target any HTML element. This is preferred when direct access to the HTML element is restricted, or when there is no target HTML element.`}</p>\n        </blockquote>\n      </li>\n    </ul>\n    <p>{`Consider the example of adding a custom carousel JS:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the `}<inlineCode parentName=\"p\">{`<carousel_name>.carousel.js`}</inlineCode>{` file to the `}<inlineCode parentName=\"p\">{`app/design/frontend/<package_name>/<theme_name>/web/js/<carousel_name>/`}</inlineCode>{` directory.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add your RequireJS module at `}<inlineCode parentName=\"p\">{`app/design/frontend/<package_name>/<theme_name>/web/js/carousel.js`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{` define(['jquery','<carousel_name>'], function($)\n {\n     return function(config, element)\n     {\n         $(element).<carousel_name>(config);\n     };\n });\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the RequireJS config to the `}<inlineCode parentName=\"p\">{`app/design/frontend/<package_name>/<theme_name>/requirejs-config.js`}</inlineCode>{` file.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`var config = {\n    map: {\n        '*': {\n                'carousel': 'js/carousel',\n                '<carousel_name>': 'js/<carousel_name>/<carousel_name>.carousel'\n            }\n        }\n};\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`You now have two options for specifying declarative notation:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use the `}<inlineCode parentName=\"p\">{`data-mage-init`}</inlineCode>{` attribute to insert the carousel in a certain element:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-html\"\n          }}>{`<div data-mage-init='{\"carousel\":{\"option\": value}}'>\n    <div class=\"item\">Item 1</div>\n    ...\n    <div class=\"item\">Item n</div>\n</div>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use with `}<inlineCode parentName=\"p\">{`<script type=\"text/x-magento-init\"/>`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-html\"\n          }}>{`<div id=\"<carousel_name>\" class=\"carousel\">\n    <div class=\"item\">Item 1</div>\n    ...\n    <div class=\"item\">Item n</div>\n</div>\n\n<script type=\"text/x-magento-init\">\n    {\n        \"#<carousel_name>\": {\n            \"carousel\": {\"option\": value}\n        }\n    }\n</script>\n`}</code></pre>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"use-the-data-mage-init-attribute\"\n    }}>{`Use the `}<inlineCode parentName=\"h4\">{`data-mage-init`}</inlineCode>{` attribute`}</h4>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`data-mage-init`}</inlineCode>{` attribute to insert a JS component in a specified HTML element. The following example inserts a JS component in the `}<inlineCode parentName=\"p\">{`<nav/>`}</inlineCode>{` element:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<nav data-mage-init='{\"<component_name>\": {...}}'></nav>\n`}</code></pre>\n    <p>{`When the Javascript is inserted into the specified element, the script is called only for this particular element. It is not automatically called for other elements of this type on the page.`}</p>\n    <h4 {...{\n      \"id\": \"how-data-mage-init-is-processed\"\n    }}>{`How `}<inlineCode parentName=\"h4\">{`data-mage-init`}</inlineCode>{` is processed`}</h4>\n    <p>{`On DOM ready, the `}<inlineCode parentName=\"p\">{`data-mage-init`}</inlineCode>{` attribute is parsed to extract component names and configuration to be applied to the element. Depending on the type of the inserted JS component, processing is performed as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If an object is returned, the initializer tries to find the `}<inlineCode parentName=\"p\">{`<component_name>`}</inlineCode>{` key. If the corresponding value is a function, the initializer passes the `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` values to this function. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`return {\n  '<component_name>': function(config, element) { ... }\n};\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`<component_name>`}</inlineCode>{` is a native JS component, for example: `}<inlineCode parentName=\"p\">{`menu`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`collapsible`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`tooltip`}</inlineCode>{` ...`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<nav data-mage-init='{\"tooltip\": {\"content\": \"<?= /* @noEscape */ $content ?>\"}}'></nav>\n`}</code></pre>\n    <p>{`Or a custom JS component, implemented with a component path: `}<inlineCode parentName=\"p\">{`Vendor_Module/js/component`}</inlineCode>{`, or as an alias declared in `}<inlineCode parentName=\"p\">{`requirejs-config.js`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<nav data-mage-init='{\"Vendor_Module/js/component\": {\"status\":\"<?= /* @noEscape */ $block->getStatus(); ?>\"}}'></nav>\n`}</code></pre>\n    <p>{`Read more about `}<a parentName=\"p\" {...{\n        \"href\": \"debug.md\"\n      }}>{`locate JS components`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If a function is returned, the initializer passes the `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` values to this function. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`return function(config, element) { ... };\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If neither a function nor an object with the `}<inlineCode parentName=\"p\">{`\"<component_name>\"`}</inlineCode>{` key are returned, then the initializer tries to search for `}<inlineCode parentName=\"p\">{`\"<component_name>\"`}</inlineCode>{` in the jQuery prototype. If found, the initializer applies it as `}<inlineCode parentName=\"p\">{`$(element).<component_name>;(config)`}</inlineCode>{`. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`$.fn.<component_name> = function() { ... };\nreturn;\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If none of the previous cases is true, the component is executed with no further processing. Such a component does not require either `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{`. The recommended way to declare such components is `}<a parentName=\"p\" {...{\n            \"href\": \"#use-the-script-typetextx-magento-init-tag\"\n          }}>{`using the `}<inlineCode parentName=\"a\">{`<script>`}</inlineCode>{` tag`}</a>{`.`}</p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"use-the-script-typetextx-magento-init-tag\"\n    }}>{`Use the `}<inlineCode parentName=\"h4\">{`<script type=\"text/x-magento-init\">`}</inlineCode>{` tag`}</h4>\n    <p>{`To call a JS component on an HTML element without direct access to the element or with no relation to a certain element, use the `}<inlineCode parentName=\"p\">{`<script type=\"text/x-magento-init\">`}</inlineCode>{` tag and attribute syntax shown in the following example.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<script type=\"text/x-magento-init\">\n{\n    // components initialized on the element defined by selector\n    \"<element_selector>\": {\n        \"<js_component1>\": ...,\n        \"<js_component2>\": ...\n    },\n    // components initialized without binding to an element\n    \"*\": {\n        \"<js_component3>\": ...\n    }\n}\n</script>\n`}</code></pre>\n    <p>{`Where:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<element_selector>`}</inlineCode>{` is a `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\"\n        }}>{`selector`}</a>{` (in terms of querySelectorAll) for the element on which the following JS components are called.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<js_component1>`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`<js_component2>`}</inlineCode>{` are the JS components being initialized on the element with the selector specified as `}<inlineCode parentName=\"li\">{`<element_selector>`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<js_component3>`}</inlineCode>{` is the JS component called with no binding to an element.`}</li>\n    </ul>\n    <p>{`The following example provides a working code sample of a widget call using `}<inlineCode parentName=\"p\">{`<script>`}</inlineCode>{`. Here the `}<inlineCode parentName=\"p\">{`accordion`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`navigation`}</inlineCode>{` widgets are added to the element with the `}<inlineCode parentName=\"p\">{`#main-container`}</inlineCode>{` selector, and the `}<inlineCode parentName=\"p\">{`pageCache`}</inlineCode>{` script is inserted with no binding to any element.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<script type=\"text/x-magento-init\">\n{\n    \"#main-container\": {\n        \"navigation\": <?php echo $block->getNavigationConfig(); ?>,\n        \"accordion\": <?php echo $block->getNavigationAccordionConfig(); ?>\n    },\n    \"*\": {\n        \"pageCache\": <?php echo $block->getPageCacheConfig(); ?>\n    }\n}\n</script>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"imperative-notation\"\n    }}>{`Imperative notation`}</h3>\n    <p>{`Use imperative notation in the PHTML template to include raw JavaScript code on the pages to execute specified business logic. This method uses the `}<inlineCode parentName=\"p\">{`<script>`}</inlineCode>{` tag without the `}<inlineCode parentName=\"p\">{`type=\"text/x-magento-init\"`}</inlineCode>{` attribute as shown in the following example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<script>\nrequire([\n    'jquery',\n    'accordion'  // the alias for \"mage/accordion\"\n], function ($) {\n    $(function () { // to ensure that code evaluates on page load\n        $('[data-role=example]')  // we expect that page contains the <tag data-role=\"example\">..</tag> markup\n            .accordion({ // now we can use \"accordion\" as jQuery plugin\n                header:  '[data-role=header]',\n                content: '[data-role=content]',\n                trigger: '[data-role=trigger]',\n                ajaxUrlElement: \"a\"\n            });\n    });\n});\n</script>\n`}</code></pre>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`For better control when scripts are executed, use a declarative syntax rather than an imperative syntax. When using imperative syntax, the ability to leverage existing JS classes is lost and can block the rendering of the page.`}</p>\n    <h2 {...{\n      \"id\": \"calling-components-that-require-initialization\"\n    }}>{`Calling components that require initialization`}</h2>\n    <p>{`To call a widget with JS code, use a notation similar to the (`}<a parentName=\"p\" {...{\n        \"href\": \"jquery-widgets/accordion.md\"\n      }}>{`accordion`}</a>{` widget. It is initialized on the `}<inlineCode parentName=\"p\">{`[data-role=example]`}</inlineCode>{` element as below):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`$('[data-role=example]').accordion();\n`}</code></pre>\n    <p>{`To initialize a widget with options, use notation similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`$(function () { // to ensure that code evaluates on page load\n    $('[data-role=example]')  // we expect that page contains markup <tag data-role=\"example\">..</tag>\n        .accordion({ // now we can use \"accordion\" as jQuery plugin\n            header:  '[data-role=header]',\n            content: '[data-role=content]',\n            trigger: '[data-role=trigger]',\n            ajaxUrlElement: 'a'\n        });\n});\n`}</code></pre>\n    <p>{`In a similar way, you can initialize any JS component that a returns callback function accepting a `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` object and `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` (a DOM node).`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`define ([\n    'jquery',\n    'mage/gallery/gallery'\n], function ($, Gallery) {\n\n    $(function () { // to ensure that code evaluates on page load\n        $('[data-role=example]')  // we expect that page contains markup <tag data-role=\"example\">..</tag>\n            .each(function (index, element) {\n                Gallery({\n                    options:  {},\n                    data: [{\n                        img: 'https://c2.staticflickr.com/8/7077/27935031965_facd03b4cb_b_d.jpg'\n                    }],\n                    fullscreen: {}\n                }, element);  // 'element' is single DOM node.\n            });\n    });\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"execute-data-mage-init-and-x-magento-init-in-dynamic-content\"\n    }}>{`Execute data-mage-init and x-magento-init in dynamic content`}</h2>\n    <p>{`To trigger `}<inlineCode parentName=\"p\">{`.trigger('contentUpdated')`}</inlineCode>{` on the element when dynamic content is injected, use:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`$.ajax({\n    url: 'https://www.example.com',\n    method: 'POST',\n    data: {\n        id: '1'\n    },\n    success: function (data) {\n        $('.example-element').html(data)\n                             .trigger('contentUpdated')\n    }\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}