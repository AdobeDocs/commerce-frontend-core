"use strict";(self.webpackChunkcommerce_frontend_core=self.webpackChunkcommerce_frontend_core||[]).push([[4441],{26186:function(e,n,i){i.r(n),i.d(n,{_frontmatter:function(){return r},default:function(){return s}});var t=i(87462),o=i(45987),a=(i(35776),i(3905)),m=i(91515);const l=["components"],r={},d={_frontmatter:r},p=m.Z;function s(e){let{components:n}=e,i=(0,o.Z)(e,l);return(0,a.mdx)(p,(0,t.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"configuration-flow"},"Configuration flow"),(0,a.mdx)("p",null,"The following section covers the configuration flow of UI components. Before a UI component is finally displayed on a web page, its configuration undergoes a series of modifications. Starting from the initial reading of the top-level component instance's XML declaration, all the way to the merging of module-specific options."),(0,a.mdx)("p",null,"When the server generates a page response, the configuration of these components in the ",(0,a.mdx)("a",{parentName:"p",href:"xml-declaration.md"},(0,a.mdx)("inlineCode",{parentName:"a"},".xml")," declaration files")," is then modified by the ",(0,a.mdx)("a",{parentName:"p",href:"modifier.md"},(0,a.mdx)("inlineCode",{parentName:"a"},".php")," modifiers"),", and then finally this combined configuration is packed into JSON format and added into the HTTP response body."),(0,a.mdx)("p",null,"On the client-side, this JSON is processed by ",(0,a.mdx)("inlineCode",{parentName:"p"},"Magento_Ui/js/core/app")," where ",(0,a.mdx)("inlineCode",{parentName:"p"},"Magento_Ui/js/core/app")," is an alias for the ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Ui/view/base/web/js/core/app.js"},(0,a.mdx)("inlineCode",{parentName:"a"},"app.js"))," file. The JSON could be seen in the page source. The ",(0,a.mdx)("inlineCode",{parentName:"p"},"Magento_Ui/js/core/app")," creates the UI components instances according to the configuration of the JSON using ",(0,a.mdx)("inlineCode",{parentName:"p"},"uiLayout"),"."),(0,a.mdx)("p",null,"The JavaScript application bounds these instances to the corresponding ",(0,a.mdx)("inlineCode",{parentName:"p"},".html")," templates, if there are any ",(0,a.mdx)("inlineCode",{parentName:"p"},".html")," templates declared in JSON for that particular component. The top-level UI component is bound to the page by the ",(0,a.mdx)("inlineCode",{parentName:"p"},"scope")," Knockout binding."),(0,a.mdx)("h2",{id:"implementation-details"},"Implementation details"),(0,a.mdx)("p",null,"This section provides more detailed steps about the configuration flow."),(0,a.mdx)("p",null,"Lets consider an example with the top-level UI component, ",(0,a.mdx)("inlineCode",{parentName:"p"},"form"),"."),(0,a.mdx)("p",null,"Lets imagine we have the following file structure in our module ",(0,a.mdx)("inlineCode",{parentName:"p"},"<My_Module>"),":"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"layout ",(0,a.mdx)("inlineCode",{parentName:"li"},".xml")," file of the Module's page: ",(0,a.mdx)("inlineCode",{parentName:"li"},"my_page.xml")),(0,a.mdx)("li",{parentName:"ul"},"top-level UI Component (form or listing) configuration: ",(0,a.mdx)("inlineCode",{parentName:"li"},"my_form.xml")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},".php")," modifiers that are specific to the module")),(0,a.mdx)("p",null,"Keep in mind that the Magento_UI module contains these important files:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"A general, module-agnostic form definition in the ",(0,a.mdx)("inlineCode",{parentName:"li"},"<form>")," node of the ",(0,a.mdx)("inlineCode",{parentName:"li"},".xml")," definition file: ",(0,a.mdx)("inlineCode",{parentName:"li"},"<Magento_Ui_module_dir>/view/base/ui_component/etc/definition.xml")),(0,a.mdx)("li",{parentName:"ul"},"Default ",(0,a.mdx)("inlineCode",{parentName:"li"},".xhtml")," template for the form, which is referenced in ",(0,a.mdx)("inlineCode",{parentName:"li"},"definition.xml"),": ",(0,a.mdx)("inlineCode",{parentName:"li"},"<Magento_Ui_module_dir>/view/base/ui_component/templates/form/default.xhtml")),(0,a.mdx)("li",{parentName:"ul"},"The Form class, which is referenced in ",(0,a.mdx)("inlineCode",{parentName:"li"},"definition.xml"),": ",(0,a.mdx)("inlineCode",{parentName:"li"},"<Magento_Ui_module_dir>/view/base/web/js/form/form.js"))),(0,a.mdx)("p",null,"When the request for my_page comes, the server does the following:"),(0,a.mdx)("ol",null,(0,a.mdx)("li",{parentName:"ol"},"Determines which UI components are used in this particular layout. In the example, the UI components that are used are defined in the ",(0,a.mdx)("inlineCode",{parentName:"li"},"my_form")," component's ",(0,a.mdx)("inlineCode",{parentName:"li"},".xml")," declaration file."),(0,a.mdx)("li",{parentName:"ol"},"Searches the ",(0,a.mdx)("inlineCode",{parentName:"li"},".xml")," files with name ",(0,a.mdx)("inlineCode",{parentName:"li"},"my_form")," among all modules. The server then merges all the ",(0,a.mdx)("inlineCode",{parentName:"li"},"my_form.xml")," file(s) into a single configuration object, thus overriding the common properties, so that the latest ",(0,a.mdx)("inlineCode",{parentName:"li"},"my_form.xml")," file always has the highest priority."),(0,a.mdx)("li",{parentName:"ol"},"Merges the resulting configuration (from Step 2 above) with the configuration from the UI module ",(0,a.mdx)("inlineCode",{parentName:"li"},"definition.xml"),". The UI module ",(0,a.mdx)("inlineCode",{parentName:"li"},"definition.xml")," configuration file has the lowest priority, and is overwritten by the merged configuration of all ",(0,a.mdx)("inlineCode",{parentName:"li"},"my_form.xml")," files."),(0,a.mdx)("li",{parentName:"ol"},"Translates the resulting configuration into JSON format and adds it to response body the following way:")),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-html"},'<script type="text/x-magento-init">{"*": {"Magento_Ui/js/core/app":{<JSON_configuration>}}}<\/script>\n')),(0,a.mdx)("p",null,"Now it is the client's turn to process this JSON and generate the UI component's instances. The flow is following:"),(0,a.mdx)("ol",null,(0,a.mdx)("li",{parentName:"ol"},"RequireJS requires ",(0,a.mdx)("inlineCode",{parentName:"li"},"Magento_Ui/js/core/app")," and passes ",(0,a.mdx)("a",{parentName:"li",href:"../../javascript/init.md#declarative-notation"},"JSON configuration")," as a parameter."),(0,a.mdx)("li",{parentName:"ol"},"The ",(0,a.mdx)("inlineCode",{parentName:"li"},"Magento_Ui/js/core/app")," calls ",(0,a.mdx)("inlineCode",{parentName:"li"},"layout.js")," and passes the UI component's configuration into the layout: ",(0,a.mdx)("inlineCode",{parentName:"li"},"<Magento_Ui_module_dir>/view/base/web/js/core/renderer/layout.js"),"."),(0,a.mdx)("li",{parentName:"ol"},(0,a.mdx)("inlineCode",{parentName:"li"},"layout.js")," creates instances of UI components. That means that each UI component's configuration must have an explicitly declared the ",(0,a.mdx)("inlineCode",{parentName:"li"},"component")," property in JSON. This property references the ",(0,a.mdx)("inlineCode",{parentName:"li"},".js")," file. For example, our form has the component declared in JSON like this: ",(0,a.mdx)("inlineCode",{parentName:"li"},'"my_form":{"component":"Magento_Ui/js/form/form"}'),". So the instance of this class is created, and properties from the JSON overwrites the properties from the UI component's ",(0,a.mdx)("inlineCode",{parentName:"li"},"defaults")," property. Then resulting properties become the first-level properties of the newly created UI component's instance, and the original ",(0,a.mdx)("inlineCode",{parentName:"li"},"defaults")," property is deleted."),(0,a.mdx)("li",{parentName:"ol"},"The UI components' ",(0,a.mdx)("inlineCode",{parentName:"li"},".html")," templates (if there are any) are rendered by ",(0,a.mdx)("inlineCode",{parentName:"li"},"knockout.js")," template engine. This means, that ",(0,a.mdx)("a",{parentName:"li",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Ui/view/base/web/js/lib/knockout/bootstrap.js"},"bootstrap.js")," (required by ",(0,a.mdx)("inlineCode",{parentName:"li"},"app.js"),") passes our own ",(0,a.mdx)("a",{parentName:"li",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Ui/view/base/web/js/lib/knockout/template/engine.js"},"template engine")," for the Knockout."),(0,a.mdx)("li",{parentName:"ol"},"The ",(0,a.mdx)("inlineCode",{parentName:"li"},"bootstrap.js")," binds the component as a Model behind this View (template) using Knockout bindings. The UI components are now displayed on the page, and are fully interactive.")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-ui-components-concepts-configuration-flow-md-fe8d33b8ab3d1413d372.js.map