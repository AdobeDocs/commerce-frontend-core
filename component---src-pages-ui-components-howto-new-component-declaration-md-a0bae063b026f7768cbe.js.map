{"version":3,"file":"component---src-pages-ui-components-howto-new-component-declaration-md-a0bae063b026f7768cbe.js","mappings":"uSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,iCACH,kCACL,kBAAK,yKACL,kBAAK,0IACL,eACE,GAAM,gBACH,iBACL,kBAAK,+EAA6E,uBAAYC,WAAW,KAAM,eAA4B,QAAM,uBAAYA,WAAW,KAAM,eAA4B,MAC1M,kBAAK,QAAM,uBAAYA,WAAW,KAAM,eAA4B,gHAA8G,uBAAYA,WAAW,KAAM,eAA4B,cAAY,cAAGA,WAAW,IACjQ,KAAQ,0BACL,aAAiB,6BACxB,kBAAK,QAAM,uBAAYA,WAAW,KAAM,eAA4B,oIAAkI,uBAAYA,WAAW,KAAM,eAA4B,cAAY,cAAGA,WAAW,IACrR,KAAQ,6BACL,gBAAoB,6BAC3B,eACE,GAAM,0BACH,2BACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,eAA4B,SAAO,uBAAYA,WAAW,KAAM,eAA4B,qHACpI,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,aAA0B,sDAC5E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,SAAsB,yCACxE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,YAAyB,0BAAwB,uBAAYA,WAAW,MAAO,SAAsB,eACvJ,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,YAAyB,yCAC3E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,aAA0B,6BAC5E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,eAA4B,8FAEhF,SAACX,EAAD,CAAaY,QAAQ,UAAUC,MAAM,sBAAsBH,QAAQ,iBACnE,kBAAK,8CAA4C,uBAAYC,WAAW,KAAM,eAA4B,QAAM,uBAAYA,WAAW,KAAM,eAA4B,gEACzK,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,gBAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,gBAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,uBAEpD,kBAAK,2CAAyC,uBAAYA,WAAW,KAAM,eAA4B,SAAO,uBAAYA,WAAW,KAAM,eAA4B,MAAI,cAAGA,WAAW,IACrL,KAAQ,yCACL,iCAAqC,MAC5C,eACE,GAAM,oCACH,qCACL,kBAAK,4CAA0C,cAAGA,WAAW,IACzD,KAAQ,iCACL,sBAA0B,iFACjC,oBACE,eAAIA,WAAW,MAAO,+GAA6G,cAAGA,WAAW,KAC7I,KAAQ,mGACL,4CAAgD,YACvD,eAAIA,WAAW,MAAO,wCAAsC,uBAAYA,WAAW,MAAO,QAAqB,oBAAkB,uBAAYA,WAAW,MAAO,eAA4B,QAAM,uBAAYA,WAAW,MAAO,eAA4B,sBAE7P,eACE,GAAM,wCACH,yCACL,mBAAG,mBAAQA,WAAW,KAAM,sFAM/B,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/ui-components/howto/new-component-declaration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"declare-a-custom-ui-component\"\n    }}>{`Declare a custom UI component`}</h1>\n    <p>{`Declaring a custom UI component refers to creating the XML configuration of your custom component, and is a part of a bigger task of creating a custom UI component.`}</p>\n    <p>{`This topic describes the XML elements that must be used for declaring a custom component and where this declaration should be placed.`}</p>\n    <h2 {...{\n      \"id\": \"xml-elements\"\n    }}>{`XML elements`}</h2>\n    <p>{`A custom UI component can be declared using one of the following elements: `}<inlineCode parentName=\"p\">{`<component>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<component>`}</inlineCode>{` element is typically used for declaring simple custom components that do not have other nested components. `}<inlineCode parentName=\"p\">{`<component>`}</inlineCode>{` uses the `}<a parentName=\"p\" {...{\n        \"href\": \"../concepts/element.md\"\n      }}>{`uiElement`}</a>{` constructor by default.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{` element is typically used for declaring custom components that are collections, or in other words, can have nested components. `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{` uses the `}<a parentName=\"p\" {...{\n        \"href\": \"../concepts/collection.md\"\n      }}>{`uiCollection`}</a>{` constructor by default.`}</p>\n    <h3 {...{\n      \"id\": \"attributes-you-can-use\"\n    }}>{`Attributes you can use`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<component>`}</inlineCode>{` elements have no mandatory attributes. The following optional attributes are available for both these elements:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`component`}</inlineCode>{`: link to the component's JavaScript constructor.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`class`}</inlineCode>{`: link to the component's PHP class.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`template`}</inlineCode>{`: link to component's `}<inlineCode parentName=\"li\">{`.html`}</inlineCode>{` template.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`provider`}</inlineCode>{`: link to component's data provider.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sortOrder`}</inlineCode>{`: component's sort order`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`displayArea`}</inlineCode>{`: the placeholder which defines the area for rendering the component in the layout file.`}</li>\n    </ul>\n    <InlineAlert variant=\"warning\" slots=\"text1, text2, text3\" mdxType=\"InlineAlert\" />\n    <p>{`If the following elements are used inside `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<component>`}</inlineCode>{`, they should be specified strictly in the following order:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`<argument>`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`<settings>`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`<childComponent>`}</inlineCode></li>\n    </ol>\n    <p>{`For the component configuration inside `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<component>`}</inlineCode>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"../concepts/semantic-configuration.md\"\n      }}>{`use the \"arbitrary\" structure`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"declare-a-custom-basic-component\"\n    }}>{`Declare a custom basic component`}</h2>\n    <p>{`If the custom component you create is a `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md#general-structure\"\n      }}>{`basic UI component`}</a>{` (like Form or Listing), you need to take the following steps to declare it:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Specify the XML file with its configuration it in the page layout file in your module, as described in the `}<a parentName=\"li\" {...{\n          \"href\": \"../concepts/xml-declaration.md#about-the-layout-configuration-file-and-ui-component-declaration\"\n        }}>{`About XML configuration of UI components`}</a>{` topic.`}</li>\n      <li parentName=\"ol\">{`Declare the component in a separate `}<inlineCode parentName=\"li\">{`.xml`}</inlineCode>{` file using the `}<inlineCode parentName=\"li\">{`<container>`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`<component>`}</inlineCode>{` as parent node.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"declare-a-custom-secondary-component\"\n    }}>{`Declare a custom secondary component`}</h2>\n    <p><strong parentName=\"p\">{`The current version of the application does not yet support secondary components.`}</strong></p>\n    {\n      /* Link Definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}