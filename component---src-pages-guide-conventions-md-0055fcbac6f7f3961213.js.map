{"version":3,"file":"component---src-pages-guide-conventions-md-0055fcbac6f7f3961213.js","mappings":"kSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,0DADR,2DAGA,yNACA,oFACA,eACE,GAAM,cACL,uBAAYC,WAAW,MAAvB,iBACH,mBAAG,cAAGA,WAAW,IACb,KAAQ,sCADT,SAAH,wFAGA,yCAA0B,cAAGA,WAAW,IACpC,KAAQ,yCADc,YAA1B,gEAGA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,0CACpB,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,4CAEtB,eACE,GAAM,eACL,uBAAYA,WAAW,MAAvB,kBACH,gHAAiG,uBAAYA,WAAW,KAAvB,0BAAjG,YAA+K,uBAAYA,WAAW,KAAvB,KAA/K,gEAA4R,uBAAYA,WAAW,KAAvB,KAA5R,kEACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,wBACpB,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,8BAEtB,mCAAoB,uBAAYA,WAAW,KAAvB,iCAApB,4CACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,+BACpB,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,oCAIzB,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/guide/conventions.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"conventional-notations-for-paths-to-modules-and-themes\"\n    }}>{`Conventional notations for paths to modules and themes`}</h1>\n    <p>{`Application components, including modules, themes, and language packages technically can be located anywhere under the installation directory. This refers to both, default and custom components.`}</p>\n    <p>{`The following relative paths are used for modules and themes:`}</p>\n    <h2 {...{\n      \"id\": \"theme_dir\"\n    }}><inlineCode parentName=\"h2\">{`<theme_dir>`}</inlineCode></h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/theme\"\n      }}>{`Theme`}</a>{` directory. Usually used when talking about custom themes, or any theme in general.`}</p>\n    <p>{`For out-of-the-box `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/frontend\"\n      }}>{`frontend`}</a>{` themes, the absolute path usually is one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`app/design/frontend/<Vendor>/<theme>`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vendor/magento/theme-frontend-<theme>`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"module_dir\"\n    }}><inlineCode parentName=\"h2\">{`<module_dir>`}</inlineCode></h2>\n    <p>{`Module directory. When talking about a particular module, the following notation is used: `}<inlineCode parentName=\"p\">{`<Magento_X_module_dir>`}</inlineCode>{`, where `}<inlineCode parentName=\"p\">{`X`}</inlineCode>{` would indicate the module's name. The directory for module `}<inlineCode parentName=\"p\">{`X`}</inlineCode>{` in the installation directory would be one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`app/code/Magento/X`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vendor/magento/module-x`}</inlineCode></li>\n    </ul>\n    <p>{`For example, `}<inlineCode parentName=\"p\">{`<Magento_Checkout_module_dir>`}</inlineCode>{` would resolve to one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`app/code/Magento/Checkout`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vendor/magento/module-checkout`}</inlineCode></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}