{"version":3,"file":"component---src-pages-page-builder-content-types-customize-add-block-chooser-md-31095e80155a04325fd1.js","mappings":"sSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBACH,wBACL,kBAAK,8FACL,eACE,GAAM,yBACH,0BACL,kBAAK,gBAAc,uBAAYC,WAAW,KAAM,YAAyB,oBACzE,mBAAG,uBAAYA,WAAW,KAAM,qDAAkE,4BAClG,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MACN,WACL,eAAIA,WAAW,KACb,MAAS,MACN,SACL,eAAIA,WAAW,KACb,MAAS,MACN,kBAGT,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,uBACjC,eAAIA,WAAW,KACb,MAAS,MACN,WACL,eAAIA,WAAW,KACb,MAAS,MACN,sKAAoK,uBAAYA,WAAW,MAAO,mBAAgC,4EAA0E,uBAAYA,WAAW,MAAO,+DAA4E,OAE7Z,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,sBACjC,eAAIA,WAAW,KACb,MAAS,MACN,WACL,eAAIA,WAAW,KACb,MAAS,MACN,4JAA0J,uBAAYA,WAAW,MAAO,qBAAkC,0FAAwF,uBAAYA,WAAW,MAAO,SAAsB,SAAO,uBAAYA,WAAW,MAAO,aAA0B,uDAAqD,uBAAYA,WAAW,MAAO,YAAyB,uBAAqB,uBAAYA,WAAW,MAAO,aAA0B,mEAErmB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,eACjC,eAAIA,WAAW,KACb,MAAS,MACN,WACL,eAAIA,WAAW,KACb,MAAS,MACN,0FAAwF,uBAAYA,WAAW,MAAO,+BAA4C,0EAAwE,uBAAYA,WAAW,MAAO,SAAsB,gEAA8D,uBAAYA,WAAW,MAAO,iCAA+C,OAEhb,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,iBACjC,eAAIA,WAAW,KACb,MAAS,MACN,WACL,eAAIA,WAAW,KACb,MAAS,MACN,8EAEP,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,qBACjC,eAAIA,WAAW,KACb,MAAS,MACN,YACL,eAAIA,WAAW,KACb,MAAS,MACN,yFAAuF,uBAAYA,WAAW,MAAO,QAAqB,oBAIrJ,eACE,GAAM,+DACH,gEACL,kBAAK,gDAA8C,uBAAYA,WAAW,KAAM,iCAA8C,0CAAwC,uBAAYA,WAAW,KAAM,kFAA+F,MAClS,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,m9DA0CP,kBAAK,2BAAyB,uBAAYA,WAAW,KAAM,SAAsB,mCACjF,eACE,GAAM,qCACH,sCACL,kBAAK,8CAA4C,uBAAYA,WAAW,KAAM,qDAAkE,4CAA0C,uBAAYA,WAAW,KAAM,kFAA+F,MACtT,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,gpCAyBP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,YAAyB,uDACjE,kBAAK,aAAW,uBAAYA,WAAW,KAAM,iBAA8B,2CAAyC,uBAAYA,WAAW,KAAM,YAAyB,yDAG7K,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/content-types/customize/add-block-chooser.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-block-chooser\"\n    }}>{`Add a block chooser`}</h1>\n    <p>{`This topic describes how to use the block chooser UI component for a custom content type.`}</p>\n    <h2 {...{\n      \"id\": \"configuration-options\"\n    }}>{`Configuration options`}</h2>\n    <p>{`Extends all `}<inlineCode parentName=\"p\">{`abstract`}</inlineCode>{` configuration.`}</p>\n    <p><inlineCode parentName=\"p\">{`Magento_PageBuilder/js/form/element/block-chooser`}</inlineCode>{` configuration options:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dataUrlConfigPath`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The path inside the Page Builder configuration object that points to the controller URL used to request data for display in the grid. For example, if you use the `}<inlineCode parentName=\"td\">{`additional_data`}</inlineCode>{` configuration feature and add the URL, you could specify content_types.`}<inlineCode parentName=\"td\">{`mycontenttype.additional_data.my_cusom_property.my_data_url`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`requestParameter`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The parameter name under which the selected entity ID will be sent when the component retrieves the metadata from the controller (which is specified by `}<inlineCode parentName=\"td\">{`dataUrlConfigPath`}</inlineCode>{`). The default template is expecting the associated controller to return (at minimum) `}<inlineCode parentName=\"td\">{`title`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`is_active`}</inlineCode>{`. You can override the component template with the `}<inlineCode parentName=\"td\">{`template`}</inlineCode>{` attribute for the `}<inlineCode parentName=\"td\">{`component`}</inlineCode>{` element, and display desired data using a custom controller.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`modalName`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The UI registry key to the UI component that is representing the modal containing the `}<inlineCode parentName=\"td\">{`pagebuild_block_select_grid`}</inlineCode>{` listing. For example, if you include the modal element with the name `}<inlineCode parentName=\"td\">{`modal`}</inlineCode>{` in the root of your content type form, you could set it to `}<inlineCode parentName=\"td\">{`ns = \\${ $.ns }, index = modal`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`buttonTitle`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The text displayed on the button used to open the block selection modal.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`displayMetadata`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Denotes whether to display the information grid describing the block in more detail; `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` by default.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"add-the-block-select-grid-listing-modal-to-content-type-xml\"\n    }}>{`Add the block select grid listing modal to content type XML`}</h2>\n    <p>{`To add the block select grid listing modal, `}<inlineCode parentName=\"p\">{`pagebuilder_block_select_grid`}</inlineCode>{`, to the XML file for a content type, `}<inlineCode parentName=\"p\">{`Magento_PageBuilder/view/base/pagebuilder/content_type/<your-content-type>.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<modal name=\"modal\" sortOrder=\"30\">\n    <settings>\n        <options>\n            <option name=\"title\" xsi:type=\"string\" translate=\"true\">Select Block...</option>\n            <option name=\"buttons\" xsi:type=\"array\">\n                <item name=\"0\" xsi:type=\"array\">\n                    <item name=\"text\" xsi:type=\"string\" translate=\"true\">Cancel</item>\n                    <item name=\"actions\" xsi:type=\"array\">\n                        <item name=\"0\" xsi:type=\"string\">closeModal</item>\n                    </item>\n                </item>\n                <item name=\"1\" xsi:type=\"array\">\n                    <item name=\"text\" xsi:type=\"string\">Add Selected</item>\n                    <item name=\"class\" xsi:type=\"string\">action-primary</item>\n                    <item name=\"actions\" xsi:type=\"array\">\n                        <item name=\"0\" xsi:type=\"array\">\n                            <item name=\"targetName\" xsi:type=\"string\">\\${ $.name }.pagebuilder_block_select_grid</item>\n                            <item name=\"actionName\" xsi:type=\"string\">save</item>\n                        </item>\n                        <item name=\"1\" xsi:type=\"string\">closeModal</item>\n                    </item>\n                </item>\n            </option>\n        </options>\n    </settings>\n    <insertListing name=\"pagebuilder_block_select_grid\" sortOrder=\"10\">\n        <settings>\n            <externalData>block_id</externalData>\n            <externalProvider>\\${ $.ns }.pagebuilder_block_select_grid_data_source</externalProvider>\n            <loading>false</loading>\n            <selectionsProvider>\\${ $.ns }.\\${ $.ns }.columns.ids</selectionsProvider>\n            <autoRender>true</autoRender>\n            <dataScope>select_id</dataScope>\n            <ns>pagebuilder_block_select_grid</ns>\n            <dataLinks>\n                <imports>false</imports>\n                <exports>true</exports>\n            </dataLinks>\n        </settings>\n    </insertListing>\n</modal>\n`}</code></pre>\n    <p>{`If desired, modify the `}<inlineCode parentName=\"p\">{`title`}</inlineCode>{` option to fit your situation.`}</p>\n    <h2 {...{\n      \"id\": \"add-component-to-content-type-xml\"\n    }}>{`Add component to content type XML`}</h2>\n    <p>{`To insert the block chooser UI component, `}<inlineCode parentName=\"p\">{`Magento_PageBuilder/js/form/element/block-chooser`}</inlineCode>{`, into the XML file for a content type, `}<inlineCode parentName=\"p\">{`Magento_PageBuilder/view/base/pagebuilder/content_type/<your-content-type>.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<component component=\"Magento_PageBuilder/js/form/element/block-chooser\" name=\"block_chooser\" sortOrder=\"10\">\n    <argument name=\"data\" xsi:type=\"array\">\n        <item name=\"config\" xsi:type=\"array\">\n            <item name=\"requestParameter\" xsi:type=\"string\">block_id</item>\n            <item name=\"dataUrlConfigPath\" xsi:type=\"string\">content_types.block.additional_data.chooserConfig.dataUrl</item>\n            <item name=\"modalName\" xsi:type=\"string\">ns = \\${ $.ns }, index = modal</item>\n            <item name=\"buttonTitle\" xsi:type=\"string\" translate=\"true\">Select Block...</item>\n        </item>\n    </argument>\n    <settings>\n        <imports>\n            <!-- This references the value of the block_id field below -->\n            <link name=\"id\">\\${ $.ns }.\\${ $.ns }.general.block_id:value</link>\n        </imports>\n    </settings>\n</component>\n<field name=\"block_id\" formElement=\"hidden\" sortOrder=\"20\">\n    <settings>\n        <dataType>text</dataType>\n        <imports>\n            <link name=\"value\">\\${ $.ns }.\\${ $.ns }.modal.pagebuilder_block_select_grid:externalValue</link>\n        </imports>\n    </settings>\n</field>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`block_id`}</inlineCode>{` field pulls in the selected value from the modal.`}</p>\n    <p>{`Then the `}<inlineCode parentName=\"p\">{`block_chooser`}</inlineCode>{` component pulls in the value from the `}<inlineCode parentName=\"p\">{`block_id`}</inlineCode>{` field to ascertain when it should commence updating.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}