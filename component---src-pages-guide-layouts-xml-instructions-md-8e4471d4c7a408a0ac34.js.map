{"version":3,"file":"component---src-pages-guide-layouts-xml-instructions-md-8e4471d4c7a408a0ac34.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/guide/layouts/xml-instructions.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"layout-instructions\"\n    }}>{`Layout instructions`}</h1>\n    <p>{`There are two possible ways to customize page layout:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Changing `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/layout\"\n        }}>{`layout`}</a>{` files.`}</li>\n      <li parentName=\"ul\">{`Altering templates.`}</li>\n    </ul>\n    <p>{`To change the page wireframe, modify the `}<a parentName=\"p\" {...{\n        \"href\": \"types.md#page-layout\"\n      }}>{`page layout`}</a>{` files; all other customizations are performed in the `}<a parentName=\"p\" {...{\n        \"href\": \"types.md#page-configuration\"\n      }}>{`page configuration`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"types.md#generic-layout\"\n      }}>{`generic layout`}</a>{` files.`}</p>\n    <h2 {...{\n      \"id\": \"manage-layouts\"\n    }}>{`Manage layouts`}</h2>\n    <p>{`To make layout changes available on every page, modify the `}<inlineCode parentName=\"p\">{`default.xml`}</inlineCode>{` file.\nFor example, layout changes added to `}<inlineCode parentName=\"p\">{`app/code/Vendor/Module/view/frontend/layout/default.xml`}</inlineCode>{` are loaded on all pages.\nTo add layout changes to a specific page, use a layout file that corresponds to the page's path.\nFor example, changes to the `}<inlineCode parentName=\"p\">{`app/code/Vendor/Module/view/frontend/layout/catalog_product_view.xml`}</inlineCode>{` page are loaded on the product details page.`}</p>\n    <p>{`Use these `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/layout-instructions\"\n      }}>{`layout instructions`}</a>{` to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Move a page element to another parent element.`}</li>\n      <li parentName=\"ul\">{`Add content.`}</li>\n      <li parentName=\"ul\">{`Remove a page element.`}</li>\n      <li parentName=\"ul\">{`Arrange the element position.`}</li>\n    </ul>\n    <p>{`The basic set of instructions is the same for all types of layout files. This topic describes these basic instructions. For details about how they are used in a particular layout file type, please refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"types.md\"\n      }}>{`Layout file types`}</a>{` topic.`}</p>\n    <h2 {...{\n      \"id\": \"common-layout-instructions\"\n    }}>{`Common layout instructions`}</h2>\n    <p>{`Use the following layout instructions to customize your layout:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#block\"\n        }}><inlineCode parentName=\"a\">{`<block>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#container\"\n        }}><inlineCode parentName=\"a\">{`<container>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#before-and-after-attributes\"\n        }}><inlineCode parentName=\"a\">{`before`}</inlineCode>{` and `}<inlineCode parentName=\"a\">{`after`}</inlineCode>{` attributes`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#action\"\n        }}><inlineCode parentName=\"a\">{`<action>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#referenceblock-and-referencecontainer\"\n        }}><inlineCode parentName=\"a\">{`<referenceBlock>`}</inlineCode>{` and `}<inlineCode parentName=\"a\">{`<referenceContainer>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#move\"\n        }}><inlineCode parentName=\"a\">{`<move>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#remove\"\n        }}><inlineCode parentName=\"a\">{`<remove>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#update\"\n        }}><inlineCode parentName=\"a\">{`<update>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#argument\"\n        }}><inlineCode parentName=\"a\">{`<argument>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#block-vs-container\"\n        }}><inlineCode parentName=\"a\">{`<block> vs <container>`}</inlineCode></a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"block\"\n    }}>{`block`}</h3>\n    <p>{`Defines a block.`}</p>\n    <p><strong parentName=\"p\">{`Details:`}</strong>{` A block is a unit of page output that renders some distinctive content (anything visually tangible for the end-user), such as a piece of information or a user interface element.`}</p>\n    <p>{`Blocks are a foundational building unit for layouts. They are the link between a PHP block class (which contains logic) and a template (which renders content). Blocks can have children and grandchildren (and so on). Information can be passed from layout XML files to blocks using the `}<inlineCode parentName=\"p\">{`<arguments/>`}</inlineCode>{` child node.`}</p>\n    <p>{`Blocks employ templates to generate HTML. Examples of blocks include a `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/category\"\n      }}>{`category`}</a>{` list, a mini cart, product tags, and product listing.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`We recommend always adding a `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` to blocks. Otherwise, it is given a random name.\nTo make a block non-cached, a `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` is required.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Values`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Required?`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`class`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name of a class that implements rendering of a particular block. An object of this class is responsible for actual rendering of block output.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`A fully-qualified class name, such as `}<inlineCode parentName=\"td\">{`Vendor\\\\Module\\\\Block\\\\Class`}</inlineCode>{`. Defaults to `}<inlineCode parentName=\"td\">{`Magento\\\\Framework\\\\View\\\\Element\\\\Template`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`display`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Prevents a block from displaying (the associated PHP classes are still loaded).`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`. Defaults to `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name that can be used to address the block to which this attribute is assigned. The name must be unique per generated page. If not specified, an automatic name will be assigned in the format `}<inlineCode parentName=\"td\">{`ANONYMOUS_n`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0-9, A-Z, a-z, underscore (_), period (.), dash (-). Should start with a letter. Case-sensitive.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`before`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Used to position the block before an element under the same parent. The element name or alias name is specified in the value. Use dash (-) to position the block before all other elements of its level of nesting. See `}<a parentName=\"td\" {...{\n              \"href\": \"#before-and-after-attributes\"\n            }}>{`before and after attributes`}</a>{` for details.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element name or dash (-)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`after`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Used to position the block after an element under the same parent. The element name or alias name is specified in the value. Use dash (-) to position the block after all other elements of its level of nesting. See `}<a parentName=\"td\" {...{\n              \"href\": \"#before-and-after-attributes\"\n            }}>{`before and after attributes`}</a>{` for details.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element name or dash (-)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`template`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`A template that represents the functionality of the block to which this attribute is assigned. If the attribute is omitted, the block will not render any output unless the block class (or a parent class) has the `}<inlineCode parentName=\"td\">{`$_template`}</inlineCode>{` property defined correctly.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`Vendor_Module::path/to/template.phtml`}</inlineCode>{` (Scope is already in the `}<inlineCode parentName=\"td\">{`templates`}</inlineCode>{` directory of the module)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`as`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`An alias name that serves as identifier in the scope of the parent element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0-9, A-Z, a-z, underscore (_), period (.), dash (-). Case-sensitive.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`cacheable`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Defines whether a block element is cacheable. This can be used for development purposes and to make needed elements of the page dynamic.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`. Defaults to `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`ifconfig`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Makes the block's visibility dependent on a system configuration field.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`XPath to the system configuration field. E.g. `}<inlineCode parentName=\"td\">{`contact/contact/enabled`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`To pass parameters use the `}<a parentName=\"p\" {...{\n        \"href\": \"#argument\"\n      }}><inlineCode parentName=\"a\">{`<argument></argument>`}</inlineCode></a>{` instruction.`}</p>\n    <p>{`Sample of usage in the product listing page layout:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<block class=\"Magento\\\\Catalog\\\\Block\\\\Product\\\\ListProduct\" name=\"category.products.list\" as=\"product_list\" template=\"Magento_Catalog::product/list.phtml\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"container\"\n    }}>{`container`}</h3>\n    <p>{`A structure without content that holds other layout elements such as blocks and containers.`}</p>\n    <p><strong parentName=\"p\">{`Details:`}</strong>{`\nA container renders child elements during view output generation. It can be empty or it can contain an arbitrary set of `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<block>`}</inlineCode>{` elements. If the `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{` is empty, and there is no child `}<inlineCode parentName=\"p\">{`<block>`}</inlineCode>{` available, it will not be displayed in the frontend source code.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`We recommend always adding a `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` to containers. Otherwise, it is given a random name.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Values`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Required?`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`A name that can be used to address the container in which this attribute is assigned. The name must be unique per generated page. If not specified, it will be auto-generated.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`A-Z, a-z, 0-9, underscore (_), period (.), dash (-). Should start with a letter. Case-sensitive.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`label`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Describes the purpose of the container.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`before`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Used to position the container before an element under the same parent. The element name or alias name is specified in the value. Use dash (-) to position the block before all other elements of its level of nesting. See `}<a parentName=\"td\" {...{\n              \"href\": \"#before-and-after-attributes\"\n            }}>{`before and after attributes`}</a>{` for details.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element name or dash (`}<inlineCode parentName=\"td\">{`-`}</inlineCode>{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`after`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Used to position the container after an element under the same parent. The element name or alias name is specified in the value. Use dash (-) to position the block after all other elements of its level of nesting. See `}<a parentName=\"td\" {...{\n              \"href\": \"#before-and-after-attributes\"\n            }}>{`before and after attributes`}</a>{` for details.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element name or dash (-).`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`as`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`An alias name that serves as identifier in the scope of the parent element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0-9, A-Z, a-z, underscore (_), period (.), dash (-). Case-sensitive.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`output`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Defines whether to output the root element. If specified, the element will be added to output list. (If not specified, the parent element is responsible for rendering its children.)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Any value except the obsolete `}<inlineCode parentName=\"td\">{`toHtml`}</inlineCode>{`. Recommended value is `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`htmlTag`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Output parameter. If specified, the output is wrapped into specified HTML tag.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Any of the following: `}<inlineCode parentName=\"td\">{`aside`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`dd`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`div`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`dl`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`fieldset`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`main`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`nav`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`header`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`footer`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`ol`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`p`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`section`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`table`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`tfoot`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`ul`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No, Yes - if `}<inlineCode parentName=\"td\">{`htmlClass`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`htmlId`}</inlineCode>{` is specified`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`htmlId`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Output parameter. If specified, the value is added to the wrapper element. If there is no wrapper element, this attribute has no effect.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Any valid HTML 5 `}<inlineCode parentName=\"td\">{`id`}</inlineCode>{` value.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`htmlClass`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Output parameter. If specified, the value is added to the wrapper element. If there is no wrapper element, this attribute has no effect.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Any valid HTML 5 `}<inlineCode parentName=\"td\">{`class`}</inlineCode>{` value.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`No`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Sample of usage in layout:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<container name=\"div.sidebar.additional\" htmlTag=\"div\" htmlClass=\"sidebar sidebar-additional\" after=\"div.sidebar.main\">\n    <container name=\"sidebar.additional\" as=\"sidebar_additional\" label=\"Sidebar Additional\"/>\n</container>\n`}</code></pre>\n    <p>{`This would add a new column to the page layout.`}</p>\n    <h4 {...{\n      \"id\": \"controlling-children-visibility\"\n    }}>{`Controlling children visibility`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` attribute controls the visibility of the container's children elements.\nSet this value to `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{` to render children content or `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` to disable the output of the entire container.`}</p>\n    <p>{`Use this feature to make temporary changes to a store, such as disabling a section of the page for a sales event and re-enabling it after the event ends.`}</p>\n    <h3 {...{\n      \"id\": \"block-vs-container\"\n    }}>{`block vs. container`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Blocks represents the end of the chain in rendering HTML.`}</li>\n      <li parentName=\"ul\">{`Containers contain blocks and can wrap them in an HTML tag.`}</li>\n      <li parentName=\"ul\">{`Containers do not render any output if there are no children assigned to them.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"before-and-after-attributes\"\n    }}>{`before and after attributes`}</h3>\n    <p>{`To help you to position elements in a specific order suitable for design, SEO, usability, or other requirements, the application provides the `}<inlineCode parentName=\"p\">{`before`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`after`}</inlineCode>{` layout attributes.\nThese optional attributes can be used in layout XML files to control the order of elements in their common parent.`}</p>\n    <p>{`The following tables give a detailed description of the results you can get using the `}<inlineCode parentName=\"p\">{`before`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`after`}</inlineCode>{` attributes. The first table uses a block a as positioned element.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`before`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Dash (-)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The block displays before all other elements in its parent node.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`before`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`[element name]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The block displays before the named element.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`before`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Empty value or `}{`[element name]`}{` is absent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Use the value of `}<inlineCode parentName=\"td\">{`after`}</inlineCode>{`. If that value is empty or absent as well, the element is considered as non-positioned.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`after`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Dash (-)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The block displays after all other elements in its parent node.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`after`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`[element name]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The block displays after the named element.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`after`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Empty value or `}{`[element name]`}{` is absent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Use the value of `}<inlineCode parentName=\"td\">{`before`}</inlineCode>{`. If that value is empty or absent as well, the block is considered as non-positioned.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Situation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Result`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Both `}<inlineCode parentName=\"td\">{`before`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`after`}</inlineCode>{` attributes are present`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`after`}</inlineCode>{` takes precedence.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Both `}<inlineCode parentName=\"td\">{`before`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`after`}</inlineCode>{` attributes are absent or empty`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The element is considered as non-positioned. All other elements are positioned at their specified locations. The non-positioned element displays at a random position that doesn't violate requirements for the positioned elements.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Several elements have `}<inlineCode parentName=\"td\">{`before`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`after`}</inlineCode>{` set to dash (-)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`All elements display at the top (or bottom, in case of the after attribute), but the ordering of group of these elements is undefined.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The `}<inlineCode parentName=\"td\">{`before`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`after`}</inlineCode>{` attribute's value refers to an element that is not located in the parent node of the element being defined.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The element displays at a random location that doesn't violate requirements for the correctly positioned elements.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Sample usage in a layout:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<referenceContainer name=\"page.wrapper\">\n    <container name=\"header.container\" as=\"header_container\" label=\"Page Header Container\" htmlTag=\"header\" htmlClass=\"page-header\" before=\"main.content\"/>\n    <container name=\"page.top\" as=\"page_top\" label=\"After Page Header\" after=\"header.container\"/>\n    <container name=\"footer-container\" as=\"footer\" after=\"-\" label=\"Page Footer Container\" htmlTag=\"footer\" htmlClass=\"page-footer\"/>\n</referenceContainer>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"action\"\n    }}>{`action`}</h3>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`<action>`}</inlineCode>{` instruction is deprecated. If the method implementation allows, use the `}<a parentName=\"p\" {...{\n        \"href\": \"#argument\"\n      }}><inlineCode parentName=\"a\">{`<argument>`}</inlineCode></a>{` for `}<a parentName=\"p\" {...{\n        \"href\": \"#block\"\n      }}><inlineCode parentName=\"a\">{`<block>`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"#referenceblock-and-referencecontainer\"\n      }}><inlineCode parentName=\"a\">{`<referenceBlock>`}</inlineCode></a>{` to access the block public API.`}</p>\n    <p>{`Calls public methods on the block API.`}</p>\n    <p><strong parentName=\"p\">{`Details:`}</strong>{` Used to set up the execution of a certain method of the block during block generation; the `}<inlineCode parentName=\"p\">{`<action>`}</inlineCode>{` node must be located in the scope of the `}<inlineCode parentName=\"p\">{`<block>`}</inlineCode>{` node.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<block class=\"Magento\\\\Module\\\\Block\\\\Class\" name=\"block\">\n    <action method=\"setText\">\n        <argument name=\"text\" translate=\"true\" xsi:type=\"string\">Text</argument>\n    </action>\n    <action method=\"setEnabled\">\n        <argument name=\"enabled\" xsi:type=\"boolean\">true</argument>\n    </action>\n</block>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`<action>`}</inlineCode>{` child nodes are translated into block method arguments. Child nodes names are arbitrary. If there are two or more nodes with the same name under `}<inlineCode parentName=\"p\">{`<action>`}</inlineCode>{`, they are passed as one array.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Values`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Required?`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`method`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The public method that is called during block generation.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The method name in the block`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`yes`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`To pass parameters, use the `}<a parentName=\"p\" {...{\n        \"href\": \"#argument\"\n      }}><inlineCode parentName=\"a\">{`<argument></argument>`}</inlineCode></a>{` instruction.`}</p>\n    <h3 {...{\n      \"id\": \"referenceblock-and-referencecontainer\"\n    }}>{`referenceBlock and referenceContainer`}</h3>\n    <p>{`Updates in `}<inlineCode parentName=\"p\">{`<referenceBlock>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<referenceContainer>`}</inlineCode>{` are applied to the corresponding `}<inlineCode parentName=\"p\">{`<block>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<container>`}</inlineCode>{`.`}</p>\n    <p>{`For example, if you make a reference by `}<inlineCode parentName=\"p\">{`<referenceBlock name=\"right\">`}</inlineCode>{`, you are targeting the block `}<inlineCode parentName=\"p\">{`<block name=\"right\">`}</inlineCode>{`.`}</p>\n    <p>{`To pass parameters to a block use the `}<a parentName=\"p\" {...{\n        \"href\": \"#argument\"\n      }}><inlineCode parentName=\"a\">{`<argument></argument>`}</inlineCode></a>{` instruction.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Values`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Required?`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`remove`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Allows to remove or cancel the removal of the element. When a container is removed, its child elements are removed as well.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`display`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Allows you to disable rendering of specific block or container with all its children (both set directly and by reference). The PHP objects of the block or container and its children are still generated and available for manipulation.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`remove`}</inlineCode>{` attribute is optional and its default value is `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{` This implementation allows you to remove a block or container in your layout by setting the remove attribute value to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, or to cancel the removal of a block or container by setting the value to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<referenceBlock name=\"block.name\" remove=\"true\" />\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` attribute is optional and its default value is true.`}</p>\n        <p parentName=\"li\">{` You are always able to overwrite this value in your layout.\nIn situation when remove value is true, the display attribute is ignored.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<referenceContainer name=\"container.name\" display=\"false\" />\n`}</code></pre>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"move\"\n    }}>{`move`}</h3>\n    <p>{`Sets the declared block or container element as a child of another element in the specified order.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<move element=\"name.of.an.element\" destination=\"name.of.destination.element\" as=\"new_alias\" after=\"name.of.element.after\" before=\"name.of.element.before\"/>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<move>`}</inlineCode>{` is skipped if the element to be moved is not defined.`}</li>\n      <li parentName=\"ul\">{`If the `}<inlineCode parentName=\"li\">{`as`}</inlineCode>{` attribute is not defined, the current value of the element alias is used. If that is not possible, the value of the `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` attribute is used instead.`}</li>\n      <li parentName=\"ul\">{`During layout generation, the `}<inlineCode parentName=\"li\">{`<move>`}</inlineCode>{` instruction is processed before the removal (set using the `}<inlineCode parentName=\"li\">{`remove`}</inlineCode>{` attribute). This means if any elements are moved to the element scheduled for removal, they will be removed as well.`}</li>\n    </ul>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Values`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Required?`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`element`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name of the element to move.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`yes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`destination`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name of the target parent element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`yes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`as`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Alias name for the element in the new location.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`0-9, A-Z, a-z, underscore (_), period (.), dash (-). Case-sensitive.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`after`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`before`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Specifies the element's position relative to siblings. Use dash (-) to position the block before or after all other siblings of its level of nesting. If the attribute is omitted, the element is placed after all siblings.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Element name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Sample of usage in the page layout:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<move element=\"product.info.options.wrapper\" destination=\"bundle.product.options.wrapper\" before=\"-\" />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"remove\"\n    }}>{`remove`}</h3>\n    <p><inlineCode parentName=\"p\">{`<remove>`}</inlineCode>{` is used only to remove the static resources linked in a page `}<inlineCode parentName=\"p\">{`<head>`}</inlineCode>{` section.\nFor removing blocks or containers, use the `}<inlineCode parentName=\"p\">{`remove`}</inlineCode>{` attribute for `}<a parentName=\"p\" {...{\n        \"href\": \"#referenceblock-and-referencecontainer\"\n      }}><inlineCode parentName=\"a\">{`<referenceBlock>`}</inlineCode>{` and `}<inlineCode parentName=\"a\">{`<referenceContainer>`}</inlineCode></a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n   <head>\n      <!-- Remove local resources -->\n      <remove src=\"css/styles-m.css\" />\n      <remove src=\"my-js.js\"/>\n      <remove src=\"Magento_Catalog::js/compare.js\" />\n\n      <!-- Remove external resources -->\n      <remove src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css\"/>\n      <remove src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js\"/>\n      <remove src=\"http://fonts.googleapis.com/css?family=Montserrat\" />\n   </head>\n</page>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"update\"\n    }}>{`update`}</h3>\n    <p>{`Includes a certain layout file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<update handle=\"{name_of_handle_to_include}\"/>\n`}</code></pre>\n    <p>{`The specified `}<a parentName=\"p\" {...{\n        \"href\": \"index.md#layout-handles\"\n      }}>{`handle`}</a>{` is \"included\" and executed recursively.`}</p>\n    <p>{`Sample of usage in the page layout:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<update handle=\"customer_account\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"argument\"\n    }}>{`argument`}</h3>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Adobe Commerce and Magento Open Source 2.3.2 added the `}<inlineCode parentName=\"p\">{`shared`}</inlineCode>{` attribute. Now, instances of the view models are shared by default. If a view model is required to be a new instance each time, you must add the attribute `}<inlineCode parentName=\"p\">{`shared=\"false\"`}</inlineCode>{` on the argument node in the layout xml file.`}</p>\n    <p>{`Used to pass an argument. Must be always enclosed in `}<a parentName=\"p\" {...{\n        \"href\": \"#arguments\"\n      }}><inlineCode parentName=\"a\">{`<arguments>`}</inlineCode></a>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Values`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Required?`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Argument name.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`unique`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`yes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`shared`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`If false, creates a new instance of the block.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`translate`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Specify whether the string is translatable or not`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`xsi:type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Argument type.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`boolean`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`object`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`array`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`options`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`url`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`helper`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`yes`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`To pass multiple arguments use the following construction:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<arguments>\n   <argument name=\"item1\" xsi:type=\"string\">Custom string</argument>\n   <argument name=\"item2\" xsi:type=\"boolean\">true</argument>\n   ...\n</arguments>\n`}</code></pre>\n    <p>{`Arguments values set in a layout file can be accessed in `}<a parentName=\"p\" {...{\n        \"href\": \"../templates/index.md\"\n      }}>{`templates`}</a>{` using the `}<inlineCode parentName=\"p\">{`getData('{ArgumentName}')`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`hasData('{ArgumentName}')`}</inlineCode>{` methods. The latter returns a boolean defining whether there's any value set.\n`}<inlineCode parentName=\"p\">{`{ArgumentName}`}</inlineCode>{` is obtained from the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` attribute the following way: for getting the value of `}<inlineCode parentName=\"p\">{`<argument name=\"some_string\">`}</inlineCode>{` the method name is `}<inlineCode parentName=\"p\">{`getData('some_string')`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <p>{`Setting a value of `}<inlineCode parentName=\"p\">{`css_class`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`[app/code/Magento/Theme/view/frontend/layout/default.xml]`}</inlineCode>{` layout file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<arguments>\n    <argument name=\"css_class\" xsi:type=\"string\">header links</argument>\n</arguments>\n`}</code></pre>\n    <p>{`Using the value of `}<inlineCode parentName=\"p\">{`css_class`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`[app/code/Magento/Theme/view/frontend/templates/html/title.phtml]`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$cssClass = $this->hasCssClass() ? ' ' . $this->getCssClass() : '';\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"argument-types-examples\"\n    }}>{`Argument types examples`}</h4>\n    <p>{`As was described above the argument attribute can be added with different types.\nThere are examples of all argument types.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`string`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"some_string\" xsi:type=\"string\">Some String</argument>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`boolean`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"is_active\" xsi:type=\"boolean\">true</argument>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`object`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"view_model\" xsi:type=\"object\">Vendor\\\\CustomModule\\\\ViewModel\\\\Class</argument>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Vendor\\\\CustomModule\\\\ViewModel\\\\Class`}</inlineCode>{` class should implement the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\View\\\\Element\\\\Block\\\\ArgumentInterface`}</inlineCode>{` interface.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`number`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"some_number\" xsi:type=\"number\">100</argument>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`null`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"null_value\" xsi:type=\"null\" />\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`array`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"custom_array\" xsi:type=\"array\">\n   <item name=\"array_key_one\" xsi:type=\"string\">First Item</item>\n   <item name=\"array_key_two\" xsi:type=\"string\">Second Item</item>\n   ...\n</argument>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`options`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"options\" xsi:type=\"options\">Vendor\\\\CustomModule\\\\Source\\\\Options\\\\Class</argument>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Vendor\\\\CustomModule\\\\Source\\\\Options\\\\Class`}</inlineCode>{` class should implement the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\Data\\\\OptionSourceInterface`}</inlineCode>{` interface.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`url`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"shopping_cart_url\" xsi:type=\"url\" path=\"checkout/cart/index\" >\n    <param name=\"param1\">param1value</param>\n    <param name=\"param2\">param2value</param>\n    ...\n</argument>\n`}</code></pre>\n    <p>{`The `}<em parentName=\"p\">{`url`}</em>{` may have parameters, but they are optional.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`helper`}</em>{` type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument name=\"helper_method_result\" xsi:type=\"helper\" helper=\"Vendor\\\\CustomModule\\\\Helper\\\\Class::someMethod\">\n  <param name=\"firstParam\">firstValue</param>\n  <param name=\"secondParam\">secondValue</param>\n    ...\n</argument>\n`}</code></pre>\n    <p>{`The `}<em parentName=\"p\">{`helper`}</em>{` can use only public methods. In this example the `}<inlineCode parentName=\"p\">{`someMethod()`}</inlineCode>{` method should be public.\nThe argument with `}<em parentName=\"p\">{`helper`}</em>{` type can contain `}<inlineCode parentName=\"p\">{`param`}</inlineCode>{` items which can be passed as a helper method parameters.`}</p>\n    <h4 {...{\n      \"id\": \"obtain-arguments-examples-in-template\"\n    }}>{`Obtain arguments examples in template`}</h4>\n    <p>{`These argument examples can be taken in the template by `}<em parentName=\"p\">{`getData`}</em>{` method. Another way to take these arguments is using the magic method `}<em parentName=\"p\">{`get`}</em>{` followed by the name of argument in CamelCase format. Here is an example to retrieve the arguments from above example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/** @var \\\\Magento\\\\Framework\\\\View\\\\Element\\\\Template $block */\n\n/** @var string $someString */\n$someString = $block->getData('some_string'); //or $block->getSomeString()\n\n/** @var bool $isActive */\n$isActive = $block->getData('is_active'); //or $block->getIsActive()\n\n/** @var Vendor\\\\CustomModule\\\\ViewModel\\\\Class|\\\\Magento\\\\Framework\\\\View\\\\Element\\\\Block\\\\ArgumentInterface $viewModel */\n$viewModel = $block->getData('view_model'); //or $block->getViewModel()\n\n/** @var string|int|float $someNumber */\n$someNumber = $block->getData('some_number'); //or $block->getSomeNumber()\n\n/** @var null $nullValue */\n$nullValue = $block->getData('null_value'); //or $block->getNullValue()\n\n/** @var array $customArray */\n$customArray = $block->getData('custom_array'); //or $block->getCustomArray()\n\n/** @var array $options */\n$options = $block->getData('options'); //or $block->getoptions()\n\n/** @var string $shoppingCartUrl */\n$shoppingCartUrl = $block->getData('shopping_cart_url'); //or $block->getShoppingCartUrl()\n\n/** @var mixed $helperMethodResult */\n$helperMethodResult = $block->getData('helper_method_result'); // or $block->getHelperMethodResult()\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`arguments`}</h3>\n    <p><inlineCode parentName=\"p\">{`<arguments>`}</inlineCode>{` is a required container for `}<inlineCode parentName=\"p\">{`<argument>`}</inlineCode>{`. It does not have its own attributes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<arguments>\n    <argument name=\"css_class\" xsi:type=\"string\">header links</argument>\n</arguments>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}