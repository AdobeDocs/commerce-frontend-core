"use strict";(self.webpackChunkcommerce_frontend_core=self.webpackChunkcommerce_frontend_core||[]).push([[9816],{53258:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return r},default:function(){return c}});var o=t(87462),a=t(45987),i=(t(35776),t(3905)),l=t(91515);const s=["components"],r={},m=(d="InlineAlert",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var d;const p={_frontmatter:r},f=l.Z;function c(e){let{components:n}=e,t=(0,a.Z)(e,s);return(0,i.mdx)(f,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"custom-fonts"},"Custom fonts"),(0,i.mdx)("p",null,"The application contains a set of built-in fonts, but you can easily include custom fonts. This topic describes how to include a locally stored custom font in your theme."),(0,i.mdx)(m,{variant:"success",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"If you are new to theme development, see ",(0,i.mdx)("a",{parentName:"p",href:"../themes/index.md"},"themes")," to get familiar with the basics."),(0,i.mdx)("p",null,"To ensure the stability of your customizations and prevent upgrades from overwriting your customizations, do not change the default theme files. You must include custom fonts in the your theme's stylesheet."),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},(0,i.mdx)("p",{parentName:"li"},"Add font files to your local theme directory. For example, ",(0,i.mdx)("inlineCode",{parentName:"p"},"app/design/frontend/<your_vendor_name>/<your_theme_name>/web/fonts"),"."),(0,i.mdx)("p",{parentName:"li"},"To add ",(0,i.mdx)("em",{parentName:"p"},"external")," fonts, add font references to the page configuration file as described in ",(0,i.mdx)("a",{parentName:"p",href:"../layouts/xml-manage.md#include-static-resources-javascript-css-fonts"},"Include static resources (JavaScript, CSS, fonts)"),".")),(0,i.mdx)("li",{parentName:"ol"},(0,i.mdx)("p",{parentName:"li"},"If you build a theme using the UI library, declare the custom font by adding the ",(0,i.mdx)("inlineCode",{parentName:"p"},".lib-font-face")," mixin to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"app/design/frontend/<your_vendor_name>/<your_theme_name>/web/css/source/_typography.less")," file:"),(0,i.mdx)("pre",{parentName:"li"},(0,i.mdx)("code",{parentName:"pre",className:"language-less"},".lib-font-face(\n    @family-name:'<custom_font_name>',\n    @font-path: '@{baseDir}fonts/<path_to_font_file>',\n    @font-weight: <font_weight>,\n    @font-style: <font_style>,\n    @font-display: <auto|block|fallback|optional|swap>\n);\n")),(0,i.mdx)("p",{parentName:"li"},"Where:"),(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"@{baseDir}")," stands for the ",(0,i.mdx)("inlineCode",{parentName:"li"},"app/design/frontend/<you_vendor_name>/<your_theme_name>/web")," directory."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"<path_to_font_file>")," includes the font file name, but without the extension. For example, ",(0,i.mdx)("inlineCode",{parentName:"li"},"@font-path: '@{baseDir}fonts/Luma-Icons'")," for the font stored in ",(0,i.mdx)("inlineCode",{parentName:"li"},"web/fonts/Luma-Icons.woff"),".")))),(0,i.mdx)("p",null,"The mixin generates the CSS, which includes the font. The following example shows how to generate CSS for the Open Sans font in the Blank theme:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-css"},"@font-face {\n  font-family: 'Open Sans';\n       src: url('../fonts/opensans/light/opensans-300.eot');\n       src: url('../fonts/opensans/light/opensans-300.eot?#iefix') format('embedded-opentype'), url('../fonts/opensans/light/opensans-300.woff2') format('woff2'), url('../fonts/opensans/light/opensans-300.woff') format('woff'), url('../fonts/opensans/light/opensans-300.ttf') format('truetype'), url('../fonts/opensans/light/opensans-300.svg#Open Sans') format('svg');\n   font-weight: 300;\n   font-style: normal;\n   font-display: swap;\n   }\n")),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"@font-format")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"@font-type")," are optional but they are both related. If you need to specify a format, enclose it in single quotes. For example, ",(0,i.mdx)("inlineCode",{parentName:"p"},"@font-format: 'ttf'")," with ",(0,i.mdx)("inlineCode",{parentName:"p"},"@font-type: 'truetype'"),' for TrueType Fonts. The available types are: "woff", "woff2", "ttf", "eot", "otf", and "svg"'),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-less"},".lib-font-face(\n   @family-name:'<custom_font_name>',\n   @font-path: '@{baseDir}fonts/<path_to_font_file>',\n   @font-format: '<ttf|woff|woff2|eot|otf|svg>',\n   @font-weight: <font_weight>,\n   @font-style: <font_style>,\n   @font-display: <auto|block|fallback|optional|swap>,\n   @font-type: <font_type>\n);\n")),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"@font-display: swap")," is declared by default for Blank theme in ",(0,i.mdx)("inlineCode",{parentName:"p"},"app/design/frontend/Magento/blank/web/css/source/_typography.less"),"."),(0,i.mdx)("p",null,"Fallback web fonts that are used by default are located in ",(0,i.mdx)("inlineCode",{parentName:"p"},"lib/web/css/source/lib/variables/_typography.less"),".\nFor more information about font-face, refer to this article ","[Font-face][https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face]","."),(0,i.mdx)("h2",{id:"font-head-type"},(0,i.mdx)("inlineCode",{parentName:"h2"},"<font>")," head type"),(0,i.mdx)("p",null,"A ",(0,i.mdx)("inlineCode",{parentName:"p"},"<font>")," node is added to HTML ",(0,i.mdx)("inlineCode",{parentName:"p"},"<head>")," type for layout in ",(0,i.mdx)("inlineCode",{parentName:"p"},"lib/internal/Magento/Framework/View/Layout/etc/head.xsd"),". All resources added with ",(0,i.mdx)("inlineCode",{parentName:"p"},"<font>")," node will be downloaded with ",(0,i.mdx)("inlineCode",{parentName:"p"},"preload")," html attribute."),(0,i.mdx)("h2",{id:"icon-css"},"Icon CSS"),(0,i.mdx)("p",null,"In addition to including custom fonts in your Blank theme, you also can include custom fonts for any icons in the Blank theme. The icon font files for the Blank theme are located in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"lib/web/fonts/Blank-Theme-Icons")," directory. The ",(0,i.mdx)("inlineCode",{parentName:"p"},"lib/web/css/source/lib/variables/_typography.less")," file defines the font icon path and name for the icons and the ",(0,i.mdx)("inlineCode",{parentName:"p"},"web/css/source/_icons.less")," file uses these files to define the icon font face itself, which should be used in all CSS declarations."),(0,i.mdx)("p",null," The Unicode characters that correspond to the correct font glyphs for each icon are defined in the following ",(0,i.mdx)("inlineCode",{parentName:"p"},"lib/web/css/source/lib/variables/_icons.less")," file."),(0,i.mdx)("p",null,"By calling the ",(0,i.mdx)("inlineCode",{parentName:"p"},"lib-icon-font")," mixin, you can apply the icon font and character variables throughout the theme LESS code."),(0,i.mdx)("p",null,"For Example:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-css"},".icon-calendar {\n    .lib-icon-font(\n        @icon-calendar,\n        @_icon-font-size: 28px\n   );\n}\n")),(0,i.mdx)("p",null,"See the ",(0,i.mdx)("a",{parentName:"p",href:"ui-library.md"},"UI library")," for an icon list and implementation."),(0,i.mdx)("p",null,"To customize a font you import, consider using ",(0,i.mdx)("a",{parentName:"p",href:"https://icomoon.io/app/"},"IcoMoon"),". To override Luma or Blank theme icon fonts, change the font path in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"_theme.less")," file. For example:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-css"},"//  Fonts\n@icons__font-path: '@{baseDir}fonts/Theme-Icons'; //  Add you fonts in your-theme/web/fonts\n@icons__font-name: 'Theme-Icons';\n")),(0,i.mdx)("p",null,'With uploaded icons from IcoMoon, a "404 error ',(0,i.mdx)("inlineCode",{parentName:"p"},"woff2"),' file icon not found" may occur in the console. This means the ',(0,i.mdx)("inlineCode",{parentName:"p"},"woff2")," file is missing from the IcoMoon package. You just need copy the ",(0,i.mdx)("inlineCode",{parentName:"p"},"woff")," file to ",(0,i.mdx)("inlineCode",{parentName:"p"},"woff2"),"."),(0,i.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"If your theme does not use the UI library, include the font in your theme's CSS files using the ",(0,i.mdx)("inlineCode",{parentName:"p"},"@font-face")," CSS rule."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guide-css-fonts-md-24da17780c118873dc02.js.map