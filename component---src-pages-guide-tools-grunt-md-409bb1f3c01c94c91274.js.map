{"version":3,"file":"component---src-pages-guide-tools-grunt-md-409bb1f3c01c94c91274.js","mappings":"uSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,SACH,UACL,kBAAK,qDAAmD,cAAGC,WAAW,IAClE,KAAQ,uBACL,gCAAoC,MAC3C,kBAAK,yJACL,eACE,GAAM,iBACH,kBACL,kBAAK,uBAAqB,cAAGA,WAAW,IACpC,KAAQ,qGACL,OAAW,kDAAgD,cAAGA,WAAW,IAC5E,KAAQ,gHACL,QAAY,MACnB,eACE,GAAM,+BACH,gCACL,kBAAK,kIACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,YAAU,cAAGA,WAAW,IACzC,KAAQ,mDACL,WAAe,uCAExB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,gGACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,iCAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,aAAW,uBAAYA,WAAW,KAAM,kBAA+B,oEAC5F,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,uBAAoC,UAAQ,uBAAYA,WAAW,MAAO,kBAC5H,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,uBAAoC,UAAQ,uBAAYA,WAAW,MAAO,kBAC5H,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,4BAAyC,UAAQ,uBAAYA,WAAW,MAAO,yBAGrI,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,6BAA2B,uBAAYA,WAAW,KAAM,WAAwB,yHACrG,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,0CAEP,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,mBAEP,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,oBAIX,eACE,GAAM,sBACH,uBACL,kBAAK,yBAAuB,uBAAYA,WAAW,KAAM,aAA0B,UAAQ,uBAAYA,WAAW,KAAM,mBAAgC,YAAU,uBAAYA,WAAW,KAAM,4BAAyC,gBACxO,kBAAK,mGAAiG,uBAAYA,WAAW,KAAM,4BAAyC,iDAA+C,uBAAYA,WAAW,KAAM,mBAAgC,4EACxR,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,sMAWP,kBAAK,0CACL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,YAAyB,mBAC3E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,WAAwB,qFAC1E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,UAAuB,+BAA6B,uBAAYA,WAAW,MAAO,YAAyB,QAAM,uBAAYA,WAAW,MAAO,aAA0B,MAC3N,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,cAA2B,uBAAqB,uBAAYA,WAAW,MAAO,eAA4B,yBAAuB,uBAAYA,WAAW,MAAO,SAAsB,2JAAyJ,uBAAYA,WAAW,MAAO,YAAyB,MACvb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,kBAA+B,oDAAkD,uBAAYA,WAAW,MAAO,4CAAyD,wCAAsC,cAAGA,WAAW,KAC1Q,KAAQ,wBACL,kCAAsC,mBAAoB,aAAc,+HAEjF,kBAAK,mEACL,oBACE,eAAIA,WAAW,MAAO,QAAM,uBAAYA,WAAW,MAAO,sBAAmC,wDAC7F,eAAIA,WAAW,MAAO,QAAM,uBAAYA,WAAW,MAAO,uBAAoC,iDAEhG,eACE,GAAM,oCACH,qCACL,kBAAK,mEACL,eACE,GAAM,gDACH,mDACL,kBAAK,kDACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,2HAEvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,aAAW,uBAAYA,WAAW,KAAM,qBAAkC,wEAC/F,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAO,oBACtB,eAAIA,WAAW,MAAO,qCAExB,cAAGA,WAAW,MAAO,gDACO,uBAAYA,WAAW,KAAM,mBAAgC,uBAAqB,uBAAYA,WAAW,KAAM,0CAAuD,qDAAmD,uBAAYA,WAAW,KAAM,qBAAkC,MACpT,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,uEAMX,kBAAK,2DACL,eACE,GAAM,gDACH,mDACL,kBAAK,oEACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,+IAA6I,uBAAYA,WAAW,KAAM,iBAA8B,6DAC7N,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,eACV,2EAEP,cAAGA,WAAW,MAAO,uCAAqC,uBAAYA,WAAW,KAAM,SAAsB,wCAE/G,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,WAAS,uBAAYA,WAAW,KAAM,4BAAyC,wIAAsI,uBAAYA,WAAW,KAAM,aAA0B,aAAW,uBAAYA,WAAW,KAAM,iBAA8B,QAG3W,eACE,GAAM,0CACH,2CACL,kBAAK,oHACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,yBACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,eACV,mDAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,aAAW,uBAAYA,WAAW,KAAM,qBAAkC,2CAC/F,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,eACV,+CAMd,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/guide/tools/grunt.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"grunt\"\n    }}>{`Grunt`}</h1>\n    <p>{`The topic describes how to install and configure `}<a parentName=\"p\" {...{\n        \"href\": \"http://gruntjs.com/\"\n      }}>{`Grunt JavaScript task runner`}</a>{`.`}</p>\n    <p>{`You can use Grunt to automate any tasks you need, but out of the box the application comes with pre-configured grunt tasks for compiling LESS files.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Make sure that you `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/set-mode.html\"\n      }}>{`set`}</a>{` your application to the developer or default `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/setup/application-modes.html\"\n      }}>{`mode`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"install-and-configure-grunt\"\n    }}>{`Install and configure Grunt`}</h2>\n    <p>{`The application has built-in Grunt tasks configured, but there are still several steps you need to take to be able to use it:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install `}<a parentName=\"p\" {...{\n            \"href\": \"https://nodejs.org/en/download/package-manager/\"\n          }}>{`node.js`}</a>{` to any location on your machine.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install Grunt CLI tool globally. To do this, run the following command in a command prompt:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install -g grunt-cli\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From the `}<inlineCode parentName=\"p\">{`<Magento_root>`}</inlineCode>{` directory, copy and paste the contents of the following files:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`package.json.sample`}</inlineCode>{` into `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Gruntfile.js.sample`}</inlineCode>{` into `}<inlineCode parentName=\"li\">{`Gruntfile.js`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grunt-config.json.sample`}</inlineCode>{` into `}<inlineCode parentName=\"li\">{`grunt-config.json`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install (or refresh) the `}<inlineCode parentName=\"p\">{`node.js`}</inlineCode>{` project dependency, including Grunt, for your instance. To do this, run the following commands in a command prompt:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`cd your_Magento_instance_directory\n`}</code></pre>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install\n`}</code></pre>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm update\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"configuration-file\"\n    }}>{`Configuration file`}</h2>\n    <p>{`Copy the contents of `}<inlineCode parentName=\"p\">{`themes.js`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`local-themes.js`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`dev/tools/grunt/configs/`}</inlineCode>{` directory.`}</p>\n    <p>{`If installed as described above, Grunt will use the default configuration files located in the `}<inlineCode parentName=\"p\">{`dev/tools/grunt/configs/`}</inlineCode>{` directory. You can define your theme in the `}<inlineCode parentName=\"p\">{`local-themes.js`}</inlineCode>{` file. The following shows an example of how you can define your theme.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<theme>: {\n  area: '<area>',\n  name: '<Vendor>/<theme>,\n  locale: '<language>',\n  files: [\n    '<path_to_file1>', //path to root source file\n    '<path_to_file2>'\n  ],\ndsl: 'less'\n}\n`}</code></pre>\n    <p>{`Where the following notation is used:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<Vendor>`}</inlineCode>{`: vendor name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<theme>`}</inlineCode>{`: your theme code, conventionally should correspond to the theme directory name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<area>`}</inlineCode>{`: area code, can be either `}<inlineCode parentName=\"li\">{`frontend`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`adminhtml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<language>`}</inlineCode>{`: specified in the `}<inlineCode parentName=\"li\">{`code_subtag`}</inlineCode>{` format, for example `}<inlineCode parentName=\"li\">{`en_US`}</inlineCode>{`. Only one locale can be specified here. To debug the theme with another locale, create one more theme declaration, having specified another value for `}<inlineCode parentName=\"li\">{`language`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<path_to_file>`}</inlineCode>{`: path to the root source file, relative to the `}<inlineCode parentName=\"li\">{`app/design/frontend/<Vendor>/<theme>/web`}</inlineCode>{` directory. You need to specify all `}<a parentName=\"li\" {...{\n          \"href\": \"../css/preprocess.md\"\n        }}>{`root source files of the theme`}</a>{`. If your theme `}{`[inherits]`}{` from a certain theme, and does not contain its own root source files, specify the root source files of the parent theme.`}</li>\n    </ul>\n    <p>{`Once these are set correctly, run grunt to watch your changes.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`grunt exec:<theme>`}</inlineCode>{` from the root directory to republish the symlinks.`}</li>\n      <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`grunt watch:<theme>`}</inlineCode>{` so that grunt will watch for file changes.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"custom-grunt-configuration-files\"\n    }}>{`Custom Grunt configuration files`}</h2>\n    <p>{`There are several ways to declare a custom configuration file.`}</p>\n    <h3 {...{\n      \"id\": \"declare-a-custom-configuration-file-option-1\"\n    }}>{`Declare a custom configuration file (option 1)`}</h3>\n    <p>{`To use a custom file for Grunt configuration:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the default configuration file to the preferred location in the instance directory. Do not change the file name.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open the `}<inlineCode parentName=\"p\">{`grunt-config.json`}</inlineCode>{` file in the installation and set configurations object as follows.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`key: file alias`}</li>\n          <li parentName=\"ul\">{`value: path to your custom file`}</li>\n        </ul>\n        <p parentName=\"li\">{`Example:\nIf your custom configuration file `}<inlineCode parentName=\"p\">{`local-themes.js`}</inlineCode>{` is located in the `}<inlineCode parentName=\"p\">{`<magento_root>/dev/tools/grunt/configs`}</inlineCode>{` directory, the following is already set in your `}<inlineCode parentName=\"p\">{`grunt-config.json`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n    \"themes\": \"dev/tools/grunt/configs/local-themes.js\"\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`This path is also added to your .gitignore by default.`}</p>\n    <h3 {...{\n      \"id\": \"declare-a-custom-configuration-file-option-2\"\n    }}>{`Declare a custom configuration file (option 2)`}</h3>\n    <p>{`You can also use the other way to declare a custom config file:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your Grunt related scripts, in the file router, set the alias and path to the custom configuration file. For example, to set the custom `}<inlineCode parentName=\"p\">{`themes.loc.js`}</inlineCode>{` configuration file, this would look like the following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`filesRouter.set('themes', 'dev/tools/grunt/configs/themes.loc.js');\n`}</code></pre>\n        <p parentName=\"li\">{`It must be added earlier, than the `}<inlineCode parentName=\"p\">{`get()`}</inlineCode>{` method with this alias is called.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<inlineCode parentName=\"p\">{`dev/tools/grunt/configs/`}</inlineCode>{` directory, create a copy of the default configuration file. Change its name by adding the \".loc\" suffix. For example, your copy of `}<inlineCode parentName=\"p\">{`themes.js`}</inlineCode>{` will be `}<inlineCode parentName=\"p\">{`themes.loc.js`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"how-to-use-a-custom-configuration-file\"\n    }}>{`How to use a custom configuration file`}</h3>\n    <p>{`To tell Grunt to use a custom configuration file, instead of the default one, add the following in your script:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Require file-router:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`var fileRouter = require('/files-router');\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Call the `}<inlineCode parentName=\"p\">{`get(%file_alias%)`}</inlineCode>{` method to get the configuration file.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`var themes = fileRouter.get('themes');\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}