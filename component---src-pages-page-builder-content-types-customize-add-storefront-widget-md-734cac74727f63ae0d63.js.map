{"version":3,"file":"component---src-pages-page-builder-content-types-customize-add-storefront-widget-md-734cac74727f63ae0d63.js","mappings":"uSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,2BACH,4BACL,kBAAK,qSACL,kBAAK,wOACL,kBAAK,kFACL,mBAAG,gBAAKC,WAAW,IACf,IAAO,mGACP,IAAO,iCAEX,eACE,GAAM,gCACH,kCACL,kBAAK,8BAA4B,uBAAYA,WAAW,KAAM,aAA0B,sDAAoD,uBAAYA,WAAW,KAAM,6FAA0G,iEACnR,mBAAG,iBAAMA,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UAEX,YACH,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAET,QAChB,oBAASA,WAAW,QAAS,gBACrB,mBAAQA,WAAW,UACnB,OAAU,CAAC,sGAAuG,sGAAuG,uGACzN,MAAS,kCACT,KAAQ,eACI,gBACZ,mBAAQA,WAAW,UACnB,OAAU,CAAC,qGAAsG,qGAAsG,sGACvN,MAAS,kCACT,KAAQ,cACI,gBACZ,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,gGACP,IAAO,iCACP,MAAS,iCACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAED,cACC,YAElB,kBAAK,2JAAyJ,eAAIA,WAAW,KAAM,SAAc,8HACjM,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,+NAWP,eACE,GAAM,2CACH,6CACL,kBAAK,sBAAoB,uBAAYA,WAAW,KAAM,aAA0B,mEAAiE,uBAAYA,WAAW,KAAM,2BAAwC,kCAAgC,uBAAYA,WAAW,KAAM,UAAuB,WAAS,uBAAYA,WAAW,KAAM,cAA2B,4JAC3W,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,0yBAgBP,kBAAK,yGAAuG,uBAAYA,WAAW,KAAM,+DAA4E,KAGxN,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/content-types/customize/add-storefront-widget.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-storefront-widget\"\n    }}>{`Add a storefront widget`}</h1>\n    <p>{`A storefront widget is a JavaScript component that handles the behavior of a content type after Page Builder renders it on the storefront. For example, the Tabs and Sliders have their own storefront widgets to handle the end-user's tapping of tabs and swiping of slides on the storefront.`}</p>\n    <p>{`However, Page Builder also executes storefront widgets on the Admin stage for block and dynamic block content types. This allows end-users to preview how Page Builder will render the blocks and dynamic blocks on the storefront.`}</p>\n    <p>{`Adding a storefront widget to your content type is a simple two-step process:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-frontend-core/assets/33708e5e6ea838b3b783b0ce4c996a44/how-to-add-storefront-widget.svg\",\n        \"alt\": \"Adding a storefront widget\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"step-1-create-the-javascript\"\n    }}>{`Step 1: Create the JavaScript`}</h2>\n    <p>{`Name your JavaScript file `}<inlineCode parentName=\"p\">{`widget.js`}</inlineCode>{` and put it in the following directory structure: `}<inlineCode parentName=\"p\">{`/view/base/web/js/content-type/{content-type-name}/appearance/{appearance-name}/widget.js`}</inlineCode>{`. An example from the PageBuilderQuote content type follows:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"954px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"52.1875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/2d87e6708bd390c3925d9c294e4f70f1/5530d/where-to-add-widget.webp 320w\", \"/commerce-frontend-core/static/2d87e6708bd390c3925d9c294e4f70f1/0c8fb/where-to-add-widget.webp 640w\", \"/commerce-frontend-core/static/2d87e6708bd390c3925d9c294e4f70f1/8ef22/where-to-add-widget.webp 954w\"],\n            \"sizes\": \"(max-width: 954px) 100vw, 954px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/2d87e6708bd390c3925d9c294e4f70f1/dd4a7/where-to-add-widget.png 320w\", \"/commerce-frontend-core/static/2d87e6708bd390c3925d9c294e4f70f1/0f09e/where-to-add-widget.png 640w\", \"/commerce-frontend-core/static/2d87e6708bd390c3925d9c294e4f70f1/65dc2/where-to-add-widget.png 954w\"],\n            \"sizes\": \"(max-width: 954px) 100vw, 954px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-frontend-core/static/2d87e6708bd390c3925d9c294e4f70f1/65dc2/where-to-add-widget.png\",\n            \"alt\": \"Where to add storefront widget\",\n            \"title\": \"Where to add storefront widget\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`The JavaScript for the widget can handle events, initialize third-party controls, or do whatever else you need to control your content type's behavior `}<em parentName=\"p\">{`after`}</em>{` Page Builder renders the master format template on the frontend (or within a block or dynamic block on the Admin stage).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`define([\n    'jquery',\n], function ($) {\n    'use strict';\n\n    return function (config, element) {\n        var element = $(element);\n        console.log(\"ELEMENT: \" + element.data('element'));\n    };\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-2-configure-the-widget-initializer\"\n    }}>{`Step 2: Configure the widget initializer`}</h2>\n    <p>{`To configure your `}<inlineCode parentName=\"p\">{`widget.js`}</inlineCode>{` so that Page Builder can initialize and load it, create a new `}<inlineCode parentName=\"p\">{`WidgetInitializerConfig`}</inlineCode>{` type in your module's global `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file (`}<inlineCode parentName=\"p\">{`etc/di.xml`}</inlineCode>{`). Then add your custom configuration (that includes your widget) as a replacement argument. The following example is from the PageBuilderQuote module:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <type name=\"Magento\\\\PageBuilder\\\\Model\\\\WidgetInitializerConfig\">\n        <arguments>\n            <argument name=\"config\" xsi:type=\"array\">\n                <item name=\"example_quote\" xsi:type=\"array\">\n                <!-- Name is the appearance name -->\n                <item name=\"default\" xsi:type=\"array\">\n                    <!--required argument-->\n                        <item name=\"component\" xsi:type=\"string\">Example_PageBuilderQuote/js/content-type/example-quote/appearance/default/widget</item>\n                    </item>\n                </item>\n            </argument>\n        </arguments>\n    </type>\n</config>\n`}</code></pre>\n    <p>{`That's it! For more examples, look at several of Page Builder's native widget implementations within `}<inlineCode parentName=\"p\">{`app/code/Magento/PageBuilder/view/base/web/js/content-type/`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}