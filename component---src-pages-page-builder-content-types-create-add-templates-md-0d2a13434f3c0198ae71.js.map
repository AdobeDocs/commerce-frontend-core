{"version":3,"file":"component---src-pages-page-builder-content-types-create-add-templates-md-0d2a13434f3c0198ae71.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/content-types/create/add-templates.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-templates\"\n    }}>{`Add templates`}</h1>\n    <p>{`Content type templates are the HTML files (HTML fragments) that define how your content type `}<em parentName=\"p\">{`appears`}</em>{` on both the Admin stage and within your storefront. The combination of these templates (one `}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{` and one `}<inlineCode parentName=\"p\">{`master.html`}</inlineCode>{`) creates an `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{`. As discussed in the previous configuration step, you must have at least one `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` (two templates) defined for your content type. But like the Banner, you can define several appearances for users to choose from as shown here:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"935px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"27.8125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/5530d/banner-appearances.webp 320w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/0c8fb/banner-appearances.webp 640w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/0597b/banner-appearances.webp 935w\"],\n            \"sizes\": \"(max-width: 935px) 100vw, 935px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/dd4a7/banner-appearances.png 320w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/0f09e/banner-appearances.png 640w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/487e7/banner-appearances.png 935w\"],\n            \"sizes\": \"(max-width: 935px) 100vw, 935px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/487e7/banner-appearances.png\",\n            \"alt\": \"banner-appearances\",\n            \"title\": \"banner-appearances\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"template-conventions\"\n    }}>{`Template conventions`}</h2>\n    <p>{`Conventions for adding content type templates are as follows.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Page Builder requires you to name your templates `}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{` for the Admin preview template and `}<inlineCode parentName=\"p\">{`master.html`}</inlineCode>{` for the master format storefront template.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Page Builder requires the name of an `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` to match the name of the directory containing the appearance templates. If they don't match, your content type appearances will not render.`}</p>\n        <p parentName=\"li\">{`For example, if you navigate to the Banner's appearance templates (`}<inlineCode parentName=\"p\">{`PageBuilder/view/adminhtml/web/template/content-type/banner`}</inlineCode>{`) you can see that the names of the template directories match the names of the four appearances defined in the `}<inlineCode parentName=\"p\">{`banner.xml`}</inlineCode>{` configuration file as shown here:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<appearances>\n    <appearance name=\"collage-left\"...>\n    <appearance name=\"collage-centered\"...>\n    <appearance name=\"collage-right\"...>\n    <appearance name=\"poster\" default=\"true\" ...>\n</appearances>\n`}</code></pre>\n        <p parentName=\"li\"><span parentName=\"p\" {...{\n            \"className\": \"gatsby-resp-image-wrapper\",\n            \"style\": {\n              \"position\": \"relative\",\n              \"display\": \"block\",\n              \"marginLeft\": \"auto\",\n              \"marginRight\": \"auto\",\n              \"maxWidth\": \"517px\"\n            }\n          }}>{`\n      `}<span parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-background-image\",\n              \"style\": {\n                \"paddingBottom\": \"94.375%\",\n                \"position\": \"relative\",\n                \"bottom\": \"0\",\n                \"left\": \"0\",\n                \"display\": \"block\",\n                \"transition\": \"opacity 0.5s 0.5s\",\n                \"pointerEvents\": \"none\"\n              }\n            }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                \"srcSet\": [\"/commerce-frontend-core/static/5dd1b0250d1ae08a2fe6a86b3bc19923/5530d/BannerBlockTemplateSets.webp 320w\", \"/commerce-frontend-core/static/5dd1b0250d1ae08a2fe6a86b3bc19923/df279/BannerBlockTemplateSets.webp 517w\"],\n                \"sizes\": \"(max-width: 517px) 100vw, 517px\",\n                \"type\": \"image/webp\"\n              }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                \"srcSet\": [\"/commerce-frontend-core/static/5dd1b0250d1ae08a2fe6a86b3bc19923/dd4a7/BannerBlockTemplateSets.png 320w\", \"/commerce-frontend-core/static/5dd1b0250d1ae08a2fe6a86b3bc19923/3414f/BannerBlockTemplateSets.png 517w\"],\n                \"sizes\": \"(max-width: 517px) 100vw, 517px\",\n                \"type\": \"image/png\"\n              }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                \"className\": \"gatsby-resp-image-image\",\n                \"src\": \"/commerce-frontend-core/static/5dd1b0250d1ae08a2fe6a86b3bc19923/3414f/BannerBlockTemplateSets.png\",\n                \"alt\": \"BannerBlockTemplateSets\",\n                \"title\": \"BannerBlockTemplateSets\",\n                \"loading\": \"lazy\",\n                \"style\": {\n                  \"width\": \"100%\",\n                  \"height\": \"100%\",\n                  \"margin\": \"0\",\n                  \"verticalAlign\": \"middle\",\n                  \"position\": \"absolute\",\n                  \"opacity\": \"0\",\n                  \"transition\": \"opacity 0.5s\",\n                  \"color\": \"inherit\",\n                  \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                  \"top\": \"0\",\n                  \"left\": \"0\"\n                }\n              }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n      </li>\n    </ul>\n    <p>{`For content types with only one appearance (as noted in the screenshot with block), we use the name `}<inlineCode parentName=\"p\">{`default`}</inlineCode>{` for both the content type's appearance name and the name of the template directory.`}</p>\n    <h2 {...{\n      \"id\": \"template-configuration\"\n    }}>{`Template configuration`}</h2>\n    <p>{`The Quote example defines only one `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{`. Therefore, by convention, set the name of the Quote `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` and the name of the template directory to `}<inlineCode parentName=\"p\">{`default`}</inlineCode>{` as shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<appearances>\n    <appearance name=\"default\"\n    ...\n`}</code></pre>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"518px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"46.5625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/3b855b42e01269011b685ce0a4f8b219/5530d/step2-add-templates.webp 320w\", \"/commerce-frontend-core/static/3b855b42e01269011b685ce0a4f8b219/cfda6/step2-add-templates.webp 518w\"],\n            \"sizes\": \"(max-width: 518px) 100vw, 518px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/3b855b42e01269011b685ce0a4f8b219/dd4a7/step2-add-templates.png 320w\", \"/commerce-frontend-core/static/3b855b42e01269011b685ce0a4f8b219/2f227/step2-add-templates.png 518w\"],\n            \"sizes\": \"(max-width: 518px) 100vw, 518px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-frontend-core/static/3b855b42e01269011b685ce0a4f8b219/2f227/step2-add-templates.png\",\n            \"alt\": \"Create config file\",\n            \"title\": \"Create config file\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`These files can be blank initially; they just need to exist in their proper location for now so we can reference them in the `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` element of our `}<inlineCode parentName=\"p\">{`example_quote.xml`}</inlineCode>{` configuration file as shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<appearances>\n    <appearance name=\"default\"\n              default=\"true\"\n              preview_template=\"Example_PageBuilderQuote/content-type/example-quote/default/preview\"\n              master_template=\"Example_PageBuilderQuote/content-type/example-quote/default/master\"\n              reader=\"Magento_PageBuilder/js/master-format/read/configurable\">\n    <elements...>\n    </appearance>\n</appearances>\n`}</code></pre>\n    <p>{`The following table describes each `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` attribute in our example.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`As noted by convention, the name of the appearance and the name of the directory for the appearance templates `}<em parentName=\"td\">{`must`}</em>{` match.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`default`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Every content type must have a default appearance. If you only define one appearance for your content type, you must set the default to `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`preview_template`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`References the `}<inlineCode parentName=\"td\">{`preview.html`}</inlineCode>{` (the Admin preview template) for rendering the preview appearance of your content type on the stage within the Admin UI.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`master_template`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`References the `}<inlineCode parentName=\"td\">{`master.html`}</inlineCode>{` (the master format storefront template) for rendering the appearance of your content type on the storefront for customers to see.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`reader`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Reads content type data from the master format.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"quote-preview_template\"\n    }}>{`Quote `}<inlineCode parentName=\"h2\">{`preview_template`}</inlineCode></h2>\n    <p>{`The Quote `}<inlineCode parentName=\"p\">{`preview_template`}</inlineCode>{`  (`}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{`) is shown here in full, followed by the attribute descriptions to help you understand the basics of content type templates.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- preview.html -->\n<div attr=\"data.main.attributes\"\n     ko-style=\"data.main.style\"\n     class=\"pagebuilder-content-type\"\n     css=\"data.main.css\"\n     event=\"{ mouseover: onMouseOver, mouseout: onMouseOut }, mouseoverBubble: false\">\n    <render args=\"getOptions().template\" ></render>\n    <blockquote attr=\"data.quote.attributes\"\n              ko-style=\"data.quote.style\"\n              css=\"data.quote.css\"\n              data-bind=\"liveEdit: { field: 'quote_text', placeholder: $t('Enter Quote') }\">\n    </blockquote>\n    <div class=\"quote-author\"\n       attr=\"data.author.attributes\"\n       ko-style=\"data.author.style\"\n       css=\"data.author.css\"\n       data-bind=\"liveEdit: { field: 'quote_author', placeholder: $t('Enter Author') }\">\n    </div>\n    <div class=\"quote-title\"\n       attr=\"data.author_title.attributes\"\n       ko-style=\"data.author_title.style\"\n       css=\"data.author_title.css\"\n       data-bind=\"liveEdit: { field: 'quote_author_desc', placeholder: $t('Enter Description') }\">\n    </div>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"attr\"\n    }}>{`attr`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`attr`}</inlineCode>{` attribute allows binding of data from the content type form (UI component) to the html elements in the template.`}</p>\n    <p>{`The value for `}<inlineCode parentName=\"p\">{`attr`}</inlineCode>{` is derived from the `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` name in the configuration file followed by `}<inlineCode parentName=\"p\">{`attributes`}</inlineCode>{`. For example, the `}<inlineCode parentName=\"p\">{`attr`}</inlineCode>{` value used to bind data for the  `}<inlineCode parentName=\"p\">{`blockquote`}</inlineCode>{` on line 8 of the Quote `}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`attr=\"data.quote.attributes\"`}</inlineCode>{`. This corresponds to the  `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` named `}<inlineCode parentName=\"p\">{`quote`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`example_quote.xml`}</inlineCode>{` configuration file, as shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!-- example_quote.xml -->\n<element name=\"quote\">\n    <html name=\"quote_text\" converter=\"Magento_PageBuilder/js/converter/html/tag-escaper\"/>\n    <css name=\"quote_css\"/>\n</element>\n`}</code></pre>\n    <p>{`The nodes declared within an `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` define the bindings that can be applied to your templates.`}</p>\n    <h3 {...{\n      \"id\": \"ko-style\"\n    }}>{`ko-style`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ko-style`}</inlineCode>{` attribute applies the `}<inlineCode parentName=\"p\">{`<style>`}</inlineCode>{` attributes from the form to a template element. For example, the `}<inlineCode parentName=\"p\">{`main`}</inlineCode>{` element for the Quote configuration defines several style bindings as shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!-- example_quote.xml -->\n<element name=\"main\">\n    <style name=\"text_align\" source=\"text_align\"/>\n    <style name=\"border\" source=\"border_style\" converter=\"Magento_PageBuilder/js/converter/style/border-style\"/>\n    <style name=\"border_color\" source=\"border_color\"/>\n    <style name=\"background_color\" source=\"background_color\"/>\n    <style name=\"border_width\" source=\"border_width\" converter=\"Magento_PageBuilder/js/converter/style/border-width\"/>\n    <style name=\"border_radius\" source=\"border_radius\" converter=\"Magento_PageBuilder/js/converter/style/remove-px\"/>\n    <style name=\"margins\" storage_key=\"margins_and_padding\" reader=\"Magento_PageBuilder/js/property/margins\" converter=\"Magento_PageBuilder/js/converter/style/margins\"/>\n    <style name=\"padding\" storage_key=\"margins_and_padding\" reader=\"Magento_PageBuilder/js/property/paddings\" converter=\"Magento_PageBuilder/js/converter/style/paddings\"/>\n    ...\n</element>\n`}</code></pre>\n    <p>{`As we discuss more in `}<a parentName=\"p\" {...{\n        \"href\": \"add-form.md\"\n      }}>{`Add form`}</a>{`, the `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` styles define bindings to fields in our form. In turn, these form fields provide user-entered data or default values that we apply to the HTML elements in our templates using the `}<inlineCode parentName=\"p\">{`ko-style`}</inlineCode>{` attribute.`}</p>\n    <p>{`The following snippet shows the `}<inlineCode parentName=\"p\">{`ko-style`}</inlineCode>{` (Knockout binding) that applies the styles defined in the main `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` to the  `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` node of the Quote's Admin preview template:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- preview.html -->\n<div attr=\"data.main.attributes\" ko-style=\"data.main.style\"...>\n<!-- other template elements -->\n</div>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ko-style`}</inlineCode>{` value is derived from the configuration `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` name  (`}<inlineCode parentName=\"p\">{`main`}</inlineCode>{`) and the attribute to be bound (`}<inlineCode parentName=\"p\">{`style`}</inlineCode>{`) to give us `}<inlineCode parentName=\"p\">{`data.main.style`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"css\"\n    }}>{`css`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`css`}</inlineCode>{` attribute applies CSS classes entered by users on the form to a template element. More on this when we discuss forms in `}<a parentName=\"p\" {...{\n        \"href\": \"add-form.md\"\n      }}>{`Add form`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"class\"\n    }}>{`class`}</h3>\n    <p>{` Just as with any other HTML template, you can add your own classes to your template elements. However, `}<strong parentName=\"p\">{`always add the `}<inlineCode parentName=\"strong\">{`pagebuilder-content-type`}</inlineCode>{` as the first class in the top node in your `}<inlineCode parentName=\"strong\">{`preview.html`}</inlineCode>{` template`}</strong>{` as shown for the Quote. Page Builder uses the `}<inlineCode parentName=\"p\">{`pagebuilder-content-type`}</inlineCode>{` class to add visual indicators and mouseover effects to the Admin preview template, such as correctly positioning the options menu. Defining custom LESS/CSS classes for your content type is discussed in `}<a parentName=\"p\" {...{\n        \"href\": \"add-styles.md\"\n      }}>{`Add styles`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"liveedit\"\n    }}>{`liveEdit`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`liveEdit`}</inlineCode>{` binding enables end users to enter HTML content directly on the Admin stage. The basic usage from the Quote control includes specifying the form field it binds to and adding placeholder text as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- preview.html -->\n<blockquote attr=\"data.quote.attributes\"\n            data-bind=\"liveEdit: { field: 'quote_text', placeholder: $t('Enter Quote') }\">\n</blockquote>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"event\"\n    }}>{`event`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`event`}</inlineCode>{` attribute enables the options menu to be shown and hidden when users interact with the content type using the mouse. If you have a special circumstance with the way you wish to handle your option menus, you can modify this logic to suit your needs.`}</p>\n    <h2 {...{\n      \"id\": \"quote-master_template\"\n    }}>{`Quote `}<inlineCode parentName=\"h2\">{`master_template`}</inlineCode></h2>\n    <p>{`The Quote `}<inlineCode parentName=\"p\">{`master_template`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`master.html`}</inlineCode>{`) is shown here in full. The same attributes and descriptions from the `}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{` template apply to the `}<inlineCode parentName=\"p\">{`master.html`}</inlineCode>{` template as well. However, the  `}<inlineCode parentName=\"p\">{`master.html`}</inlineCode>{` template introduces one addition attribute, `}<inlineCode parentName=\"p\">{`html`}</inlineCode>{`, which is described after the code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!--master.html-->\n<div attr=\"data.main.attributes\">\n    <blockquote class=\"quote-content\"\n              attr=\"data.quote.attributes\"\n              ko-style=\"data.quote.style\"\n              css=\"data.quote.css\"\n              html=\"data.quote.html\">\n    </blockquote>\n    <div class=\"quote-author\"\n       attr=\"data.author.attributes\"\n       ko-style=\"data.author.style\"\n       css=\"data.author.css\"\n       html=\"data.author.html\">\n    </div>\n    <div class=\"quote-title\"\n       attr=\"data.author_title.attributes\"\n       ko-style=\"data.author_title.style\"\n       css=\"data.author_title.css\"\n       html=\"data.author_title.html\">\n    </div>\n</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"html\"\n    }}>{`html`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`html`}</inlineCode>{` attribute applies the actual user-entered HTML content to the template element. In our Quote example, the end-user enters their quote text either on the Admin stage using `}<inlineCode parentName=\"p\">{`liveEdit`}</inlineCode>{` (which is bound to the `}<inlineCode parentName=\"p\">{`quote_text`}</inlineCode>{` field in the form editor) or on the form, directly into the`}<inlineCode parentName=\"p\">{`quote_text`}</inlineCode>{` field itself.`}</p>\n    <p>{`For example, from the Quote `}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{` template, the `}<inlineCode parentName=\"p\">{`liveEdit`}</inlineCode>{` binding on the `}<inlineCode parentName=\"p\">{`blockquote`}</inlineCode>{` is bound to the `}<inlineCode parentName=\"p\">{`quote_text`}</inlineCode>{` field that stores the HTML content, as shown here (`}<inlineCode parentName=\"p\">{`{ field: 'quote_text'...}`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!--preview.html-->\n<blockquote data-bind=\"liveEdit: { field: 'quote_text', placeholder: $t('Enter Quote') }\">\n</blockquote>\n`}</code></pre>\n    <p>{`The master format storefront template uses the `}<inlineCode parentName=\"p\">{`html`}</inlineCode>{` attribute to retrieve the HTML content and display it in the `}<inlineCode parentName=\"p\">{`blockquote`}</inlineCode>{` element as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!--master.html-->\n<blockquote html=\"data.quote.html\"></blockquote>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`html`}</inlineCode>{` value is derived from the configuration `}<inlineCode parentName=\"p\">{`element`}</inlineCode>{` name  (`}<inlineCode parentName=\"p\">{`quote`}</inlineCode>{`) and the attribute to be bound (`}<inlineCode parentName=\"p\">{`html`}</inlineCode>{`) to give us `}<inlineCode parentName=\"p\">{`data.quote.html`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<element name=\"quote\">\n    <html name=\"quote_text\" converter=\"Magento_PageBuilder/js/converter/html/tag-escaper\"/>\n    ...\n</element>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"next\"\n    }}>{`Next`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"add-components.md\"\n      }}>{`Step 3: Add components`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}