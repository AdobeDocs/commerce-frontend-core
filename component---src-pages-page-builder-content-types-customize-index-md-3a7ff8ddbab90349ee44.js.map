{"version":3,"file":"component---src-pages-page-builder-content-types-customize-index-md-3a7ff8ddbab90349ee44.js","mappings":"uSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBACH,wBACL,kBAAK,2KAAyK,uBAAYC,WAAW,KAAM,oBAAiC,wBAC5O,mBAAG,uBAAYA,WAAW,KAAM,mBAAgC,wDAAsD,uBAAYA,WAAW,KAAM,eAA4B,QAAM,uBAAYA,WAAW,KAAM,qBAAkC,iCACpP,kBAAK,iFAA+E,uBAAYA,WAAW,KAAM,qBAAkC,mBAAiB,uBAAYA,WAAW,KAAM,uFAAoG,sFACrS,eACE,GAAM,mBACH,0CACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,mBAAgC,aAAW,uBAAYA,WAAW,KAAM,qFAAkG,oEAClN,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,ssDAyBP,eACE,GAAM,cACH,cAAY,uBAAYA,WAAW,MAAO,qBAAkC,oBACjF,kBAAK,4BAA0B,uBAAYA,WAAW,KAAM,oBAAiC,SAAO,uBAAYA,WAAW,KAAM,qBAAkC,wJACnK,kBAAK,0BAAwB,uBAAYA,WAAW,KAAM,qBAAkC,qBAAmB,uBAAYA,WAAW,KAAM,qBAAkC,QAAM,uBAAYA,WAAW,KAAM,+FAA4G,sBAC7T,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,yjBAuBP,mBAAG,uBAAYA,WAAW,KAAM,WAAwB,iGACxD,eACE,GAAM,oBACH,qBACL,kBAAK,WAAS,uBAAYA,WAAW,KAAM,mBAAgC,2BAAyB,uBAAYA,WAAW,KAAM,WAAwB,iBAAe,uBAAYA,WAAW,KAAM,WAAwB,uCAAqC,uBAAYA,WAAW,KAAM,mCAAgD,gCAC/U,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,2IAEP,kBAAK,4IAA0I,uBAAYA,WAAW,KAAM,0BAAuC,sCAAoC,uBAAYA,WAAW,KAAM,mGAAgH,MACpY,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,8YAoBV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/content-types/customize/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-additional-data\"\n    }}>{`Add additional data`}</h1>\n    <p>{`This topic describes how to extend and configure Page Builder content types to accommodate any preferred setting that is not addressed in the confines of our existing `}<inlineCode parentName=\"p\">{`content_type.xsd`}</inlineCode>{` schema definition.`}</p>\n    <p><inlineCode parentName=\"p\">{`additional_data`}</inlineCode>{` allows you to provide extra configuration, such as `}<inlineCode parentName=\"p\">{`maxFileSize`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`allowedExtensions`}</inlineCode>{`, for various content types.`}</p>\n    <p>{`For example, if you want to load data from the backend, you can use objects, `}<inlineCode parentName=\"p\">{`xsi:type=\"object\"`}</inlineCode>{`, to implement `}<inlineCode parentName=\"p\">{`Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\ProviderInterface`}</inlineCode>{` to process the data and dynamically load information based on the system config.`}</p>\n    <h2 {...{\n      \"id\": \"additional-data\"\n    }}>{`Add additional data to the XML config`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`additional_data`}</inlineCode>{` in your `}<inlineCode parentName=\"p\">{`Vendor/ModuleName/view/adminhtml/pagebuilder/content_type/<your-content-type>.xml`}</inlineCode>{` XML config file to add custom configuration to a content type:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<additional_data>\n    <item name=\"uploaderConfig\" xsi:type=\"array\">\n        <item name=\"maxFileSize\" xsi:type=\"object\">ImageMaxFileSizeDesktop</item>\n        <item name=\"allowedExtensions\" xsi:type=\"string\">jpg jpeg gif png</item>\n        <item name=\"component\" xsi:type=\"string\">Magento_PageBuilder/js/form/element/image-uploader</item>\n        <item name=\"componentType\" xsi:type=\"string\">imageUploader</item>\n        <item name=\"dataScope\" xsi:type=\"string\">image</item>\n        <item name=\"formElement\" xsi:type=\"string\">imageUploader</item>\n        <item name=\"uploaderConfig\" xsi:type=\"array\">\n            <item name=\"url\" xsi:type=\"object\">Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\Provider\\\\Uploader\\\\SaveUrl</item>\n        </item>\n        <item name=\"previewTmpl\" xsi:type=\"string\">Magento_PageBuilder/form/element/uploader/preview</item>\n        <item name=\"template\" xsi:type=\"string\">Magento_PageBuilder/form/element/uploader/preview/image</item>\n        <item name=\"mediaGallery\" xsi:type=\"array\">\n            <item name=\"openDialogUrl\" xsi:type=\"object\">Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\Provider\\\\Uploader\\\\OpenDialogUrl</item>\n            <item name=\"openDialogTitle\" xsi:type=\"string\" translate=\"true\">Insert Images...</item>\n            <item name=\"initialOpenSubpath\" xsi:type=\"string\">wysiwyg</item>\n            <item name=\"storeId\" xsi:type=\"object\">\\\\Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\Provider\\\\StoreId</item>\n        </item>\n        <item name=\"validation\" xsi:type=\"array\">\n            <item name=\"required-entry\" xsi:type=\"boolean\">true</item>\n        </item>\n    </item>\n</additional_data>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"conversion\"\n    }}>{`Implement `}<inlineCode parentName=\"h2\">{`ProviderInterface`}</inlineCode>{` for conversion`}</h2>\n    <p>{`Array and scalar types, `}<inlineCode parentName=\"p\">{`xsi:type=\"array\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`xsi:type=\"string\"`}</inlineCode>{` for example (but also boolean, integer, and constant), designated in the XML file are provided as-is to the additional data configuration payload.`}</p>\n    <p>{`Object content types, `}<inlineCode parentName=\"p\">{`xsi:type=\"object\"`}</inlineCode>{`, must implement `}<inlineCode parentName=\"p\">{`ProviderInterface`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`/app/code/Magento/PageBuilder/Model/Config/ContentType/AdditionalData/ProviderInterface.php`}</inlineCode>{` to be converted:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright &copy; Adobe, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndeclare(strict_types=1);\n\nnamespace Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData;\n\n/**\n * Provides runtime-specific data for additional data content types configuration\n */\ninterface ProviderInterface\n{\n    /**\n    * Get data from the provider\n    * @param string $itemName - the name of the item to use as key in returned array\n    * @return array\n    */\n    public function getData(string $itemName) : array;\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`getData`}</inlineCode>{` then returns an array that must contain the key of the configuration item you're providing.`}</p>\n    <h3 {...{\n      \"id\": \"example-use-case\"\n    }}>{`Example use case`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`additional_data`}</inlineCode>{` XML config there is a `}<inlineCode parentName=\"p\">{`storeId`}</inlineCode>{` item with a `}<inlineCode parentName=\"p\">{`storeId`}</inlineCode>{` provider class, which must return `}<inlineCode parentName=\"p\">{`['storeId' => ...value here...]`}</inlineCode>{` to be integrated properly:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<item name=\"storeId\" xsi:type=\"object\">\\\\Magento\\\\PageBuilder\\\\Model\\\\Config\\\\ContentType\\\\AdditionalData\\\\Provider\\\\StoreId</item>\n`}</code></pre>\n    <p>{`Custom configuration is injected into relevant content type block constructors, such as for the image block shown here, and accessed in `}<inlineCode parentName=\"p\">{`config.additional_data`}</inlineCode>{` within the content block type in `}<inlineCode parentName=\"p\">{`/app/code/Magento/PageBuilder/view/adminhtml/web/js/content-type/<your-content-type>/preview.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`var uploaderConfiguration = Object.assign(\n    {},\n    config.additional_data.uploaderConfig,\n    {\n        value: this.dataStore.get().image,\n    },\n);\n\n// Create uploader\nthis.uploader = new Uploader(\n    this.id,\n    \"imageuploader_\" + this.id,\n    Object.assign({}, uploaderConfiguration, {\n        value: this.dataStore.get().image,\n    }),\n    uploaderConfiguration,\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}