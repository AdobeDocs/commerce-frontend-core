"use strict";(self.webpackChunkcommerce_frontend_core=self.webpackChunkcommerce_frontend_core||[]).push([[6189],{24828:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return m},default:function(){return g}});var a=n(87462),d=n(45987),i=(n(35776),n(3905)),r=n(91515);const o=["components"],m={},l=(p="InlineAlert",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var p;const s={_frontmatter:m},u=r.Z;function g(e){let{components:t}=e,n=(0,d.Z)(e,o);return(0,i.mdx)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"add-an-image-uploader"},"Add an image uploader"),(0,i.mdx)("p",null,"This topic describes how to add the image uploader component to your content type so that end-users can add images from the Admin stage as needed."),(0,i.mdx)("p",null,(0,i.mdx)("img",{parentName:"p",src:"/commerce-frontend-core/assets/e0c54b6ec85134da97f7c079e212b5fe/how-to-add-image-uploader.svg",alt:"Add an image uploader"})),(0,i.mdx)("h2",{id:"add-configuration-data-for-the-uploader"},"Add configuration data for the uploader"),(0,i.mdx)("p",null,"The first step is to customize the image uploader to suit your needs. To do this, you must add the ",(0,i.mdx)("inlineCode",{parentName:"p"},"additional_data")," element to your content type's config file to create the data types and values needed to initialize the image uploader for your specific needs."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_PageBuilder:etc/content_type.xsd">\n    <type name="example_quote"\n        ...\n        <additional_data>\n            <item name="uploaderConfig" xsi:type="array">\n                <item name="isShowImageUploadInstructions" xsi:type="boolean">false</item>\n                <item name="isShowImageUploadOptions" xsi:type="boolean">true</item>\n                <item name="maxFileSize" xsi:type="object">ImageMaxFileSizeDesktop</item>\n                <item name="allowedExtensions" xsi:type="string">jpg jpeg gif png</item>\n                <item name="component" xsi:type="string">Magento_PageBuilder/js/form/element/image-uploader</item>\n                <item name="componentType" xsi:type="string">imageUploader</item>\n                <item name="dataScope" xsi:type="string">background_image</item>\n                <item name="formElement" xsi:type="string">imageUploader</item>\n                <item name="uploaderConfig" xsi:type="array">\n                    <item name="url" xsi:type="object">Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\Provider\\Uploader\\SaveUrl</item>\n                </item>\n                <item name="previewTmpl" xsi:type="string">Magento_PageBuilder/form/element/uploader/preview</item>\n                <item name="template" xsi:type="string">Magento_PageBuilder/form/element/uploader/preview/image</item>\n                <item name="mediaGallery" xsi:type="array">\n                    <item name="openDialogUrl" xsi:type="object">Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\Provider\\Uploader\\OpenDialogUrl</item>\n                    <item name="openDialogTitle" xsi:type="string" translate="true">Insert Images...</item>\n                    <item name="initialOpenSubpath" xsi:type="string">wysiwyg</item>\n                    <item name="storeId" xsi:type="object">Magento\\PageBuilder\\Model\\Config\\ContentType\\AdditionalData\\Provider\\StoreId</item>\n                </item>\n                <item name="validation" xsi:type="array">\n                    <item name="required-entry" xsi:type="boolean">true</item>\n                </item>\n            </item>\n        </additional_data>\n    </type>\n</config>\n')),(0,i.mdx)("h2",{id:"step-2-create-an-instance-of-the-uploader"},"Step 2: Create an instance of the uploader"),(0,i.mdx)("p",null,"To create an instance of the image uploader in your preview component (",(0,i.mdx)("inlineCode",{parentName:"p"},"preview.js"),"), import the ",(0,i.mdx)("inlineCode",{parentName:"p"},"Magento_PageBuilder/js/content-type/uploader")," component as a dependency and call the uploader constructor, passing in your content type's configuration options (added in step 1) and the other required arguments, as shown here :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},'define([\'Magento_PageBuilder/js/uploader\'], function (Uploader) {\n\n    Preview.prototype.getUploader = function () {\n        var initialImageValue = this.contentType.dataStore\n            .get(this.config.additional_data.uploaderConfig.dataScope, "");\n\n        return new Uploader(\n            "imageuploader_" + this.contentType.id,\n            this.config.additional_data.uploaderConfig,\n            this.contentType.id,\n            this.contentType.dataStore,\n            initialImageValue,\n        );\n    };\n')),(0,i.mdx)("h3",{id:"uploader-constructor-arguments"},"Uploader constructor arguments"),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:null},"Argument"),(0,i.mdx)("th",{parentName:"tr",align:null},"Type"),(0,i.mdx)("th",{parentName:"tr",align:null},"Description"),(0,i.mdx)("th",{parentName:"tr",align:null},"Required"),(0,i.mdx)("th",{parentName:"tr",align:null},"Default"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"name")),(0,i.mdx)("td",{parentName:"tr",align:null},"String"),(0,i.mdx)("td",{parentName:"tr",align:null},"Used to locate the component in the UI registry."),(0,i.mdx)("td",{parentName:"tr",align:null},"yes"),(0,i.mdx)("td",{parentName:"tr",align:null},"None")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"uploaderConfig")),(0,i.mdx)("td",{parentName:"tr",align:null},"Object"),(0,i.mdx)("td",{parentName:"tr",align:null},"Initializes the image uploader UI component with the configuration settings from the ",(0,i.mdx)("inlineCode",{parentName:"td"},"additional_data")," element."),(0,i.mdx)("td",{parentName:"tr",align:null},"yes"),(0,i.mdx)("td",{parentName:"tr",align:null},"None")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"contentTypeId")),(0,i.mdx)("td",{parentName:"tr",align:null},"String"),(0,i.mdx)("td",{parentName:"tr",align:null},"The ID of the content type you are adding the uploader to."),(0,i.mdx)("td",{parentName:"tr",align:null},"yes"),(0,i.mdx)("td",{parentName:"tr",align:null},"None")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"dataStore")),(0,i.mdx)("td",{parentName:"tr",align:null},"DataStore"),(0,i.mdx)("td",{parentName:"tr",align:null},"The DataStore to store the selected image in."),(0,i.mdx)("td",{parentName:"tr",align:null},"yes"),(0,i.mdx)("td",{parentName:"tr",align:null},"None")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"initialValue")),(0,i.mdx)("td",{parentName:"tr",align:null},"Object[]"),(0,i.mdx)("td",{parentName:"tr",align:null},"The image value to set for the initial state of the uploader component."),(0,i.mdx)("td",{parentName:"tr",align:null},"yes"),(0,i.mdx)("td",{parentName:"tr",align:null},"None")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"onChangeCallback")),(0,i.mdx)("td",{parentName:"tr",align:null},"Function"),(0,i.mdx)("td",{parentName:"tr",align:null},"The callback to execute when the end-user selects an image."),(0,i.mdx)("td",{parentName:"tr",align:null},"no"),(0,i.mdx)("td",{parentName:"tr",align:null},"Adobe Commerce saves the image to the provided ",(0,i.mdx)("inlineCode",{parentName:"td"},"dataStore")," using ",(0,i.mdx)("inlineCode",{parentName:"td"},"uploaderConfig.dataScope")," as the key.")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"onDeleteCallback")),(0,i.mdx)("td",{parentName:"tr",align:null},"Function"),(0,i.mdx)("td",{parentName:"tr",align:null},"The callback to execute when the end-user deletes the current image from storage."),(0,i.mdx)("td",{parentName:"tr",align:null},"no"),(0,i.mdx)("td",{parentName:"tr",align:null},"Commerce removes the image from to the provided ",(0,i.mdx)("inlineCode",{parentName:"td"},"dataStore")," using ",(0,i.mdx)("inlineCode",{parentName:"td"},"uploaderConfig.dataScope")," as the key.")))),(0,i.mdx)("h2",{id:"step-3-add-markup-for-the-uploader"},"Step 3: Add markup for the uploader"),(0,i.mdx)("p",null,"To add the image uploader to your preview template (",(0,i.mdx)("inlineCode",{parentName:"p"},"preview.html"),"), use Knockout's ",(0,i.mdx)("inlineCode",{parentName:"p"},"scope")," binding element to render an instance of your configured uploader component from the Commerce registry, as shown here:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-html"},'<div ...>\n   ...\n    <scope args="getUploader().getUiComponent()">\n        <render />\n    </scope>\n   ...\n</div>\n')),(0,i.mdx)(l,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"When an end-user deletes a file from the media browser, Commerce triggers the ",(0,i.mdx)("inlineCode",{parentName:"p"},"fileDeleted")," event on the window with the ",(0,i.mdx)("inlineCode",{parentName:"p"},"mediabrowser")," namespace. The passed argument is an object containing the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ids")," property, which is an array of ID strings for each of the deleted files. Commerce adds the IDs of the selected files in the objects dispatched by the ",(0,i.mdx)("inlineCode",{parentName:"p"},"addFile")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"processFile")," methods inside the image uploader component."))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-page-builder-content-types-customize-add-image-uploader-md-6b347a1cda673ed8a9dc.js.map