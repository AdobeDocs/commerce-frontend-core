"use strict";(self.webpackChunkcommerce_frontend_core=self.webpackChunkcommerce_frontend_core||[]).push([[946],{52038:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return s}});var a=t(87462),i=t(63366),o=(t(15007),t(64983)),m=t(91515),r=["components"],d={},l={_frontmatter:d},p=m.Z;function s(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.mdx)(p,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"javascript-mixins"},"JavaScript mixins"),(0,o.mdx)("p",null,"A ",(0,o.mdx)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Mixin"},"mixin")," is a class whose methods are added to, or mixed in, with another class."),(0,o.mdx)("p",null,"A base class includes the methods from a mixin instead of inheriting from it.\nThis allows you to add to or augment the behavior of the base class by adding different mixins to it."),(0,o.mdx)("p",null,"This topic contains information on how you can use JavaScript mixins to overwrite component methods."),(0,o.mdx)("h2",{id:"mixin-scope"},"Mixin scope"),(0,o.mdx)("p",null,"The scope of a module's mixin depends on its directory location under the ",(0,o.mdx)("inlineCode",{parentName:"p"},"view")," directory.\nThis allows you to target component instances in specific areas."),(0,o.mdx)("p",null,"The following table maps a directory location to the ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/php/architecture/modules/areas/"},"application area")," a mixin affects:"),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Directory"),(0,o.mdx)("th",{parentName:"tr",align:null},"Scope"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"view/frontend")),(0,o.mdx)("td",{parentName:"tr",align:null},"Storefront")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"view/adminhtml")),(0,o.mdx)("td",{parentName:"tr",align:null},"Admin panel")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"view/base")),(0,o.mdx)("td",{parentName:"tr",align:null},"All areas (unless a specific ",(0,o.mdx)("inlineCode",{parentName:"td"},"frontend")," or ",(0,o.mdx)("inlineCode",{parentName:"td"},"adminhtml")," entry exists)")))),(0,o.mdx)("h2",{id:"mixin-files"},"Mixin files"),(0,o.mdx)("h3",{id:"location"},"Location"),(0,o.mdx)("p",null,"Mixins are JavaScript files located under the ",(0,o.mdx)("inlineCode",{parentName:"p"},"web/js")," directory under an area specific directory.\nThe mixin file can be nested under more directories as long as those directories are under ",(0,o.mdx)("inlineCode",{parentName:"p"},"web/js"),"."),(0,o.mdx)("h3",{id:"format"},"Format"),(0,o.mdx)("p",null,"A mixin is written as an ",(0,o.mdx)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Asynchronous_module_definition"},"AMD module")," that returns a callback function.\nThis function accepts a target component(module) as an argument and returns a module."),(0,o.mdx)("p",null,"This allows you to return a new instance of the target component with your modifications attached to it before it is used in the application."),(0,o.mdx)("h3",{id:"examples"},"Examples"),(0,o.mdx)("h4",{id:"extend-ui-component"},"Extend UI component"),(0,o.mdx)("p",null,"The following is an example of a mixin that extends the ",(0,o.mdx)("inlineCode",{parentName:"p"},"target")," component with a function that introduces a new ",(0,o.mdx)("inlineCode",{parentName:"p"},"blockVisibility")," property to a column element."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"File:")," ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp/Sample/view/base/web/js/columns-mixin.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"define(function () {\n    'use strict';\n\n    var mixin = {\n\n        /**\n         *\n         * @param {Column} elem\n         */\n        isDisabled: function (elem) {\n            return elem.blockVisibility || this._super();\n        }\n    };\n\n    return function (target) { // target == Result that Magento_Ui/.../columns returns.\n        return target.extend(mixin); // new result that all other modules receive\n    };\n});\n")),(0,o.mdx)("h4",{id:"extend-jquery-widget"},"Extend jQuery widget"),(0,o.mdx)("p",null,"The following is an example of a mixin that extends the ",(0,o.mdx)("a",{parentName:"p",href:"jquery-widgets/modal.md"},"modal widget")," with a function that adds confirmation for a modal closing."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"File:")," ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp/Sample/view/base/web/js/modal-widget-mixin.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"define(['jquery'], function ($) {\n    'use strict';\n\n    var modalWidgetMixin = {\n        options: {\n            confirmMessage: \"Please, confirm modal closing.\"\n        },\n\n        /**\n         * Added confirming for modal closing\n         *\n         * @returns {Element}\n         */\n        closeModal: function () {\n            if (!confirm(this.options.confirmMessage)) {\n                return this.element;\n            }\n\n            return this._super();\n        }\n    };\n\n    return function (targetWidget) {\n        // Example how to extend a widget by mixin object\n        $.widget('mage.modal', targetWidget, modalWidgetMixin); // the widget alias should be like for the target widget\n\n        return $.mage.modal; //  the widget by parent alias should be returned\n    };\n});\n")),(0,o.mdx)("h4",{id:"extend-js-object"},"Extend JS object"),(0,o.mdx)("p",null,"Another use-case for the JS mixin is when the base Javascript file returns an object. In this case, a wrapper is necessary. The following example mixin extends the ",(0,o.mdx)("inlineCode",{parentName:"p"},"setHash")," method of ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Checkout/view/frontend/web/js/model/step-navigator.js"},"step navigator object"),". Here, ",(0,o.mdx)("inlineCode",{parentName:"p"},"this._super()")," is the base method that can be called if needed."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"File:")," ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp/Sample/view/frontend/web/js/model/step-navigator-mixin.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"define([\n    'mage/utils/wrapper'\n], function (wrapper) {\n    'use strict';\n\n    return function (stepNavigator) {\n        stepNavigator.setHash = wrapper.wrapSuper(stepNavigator.setHash, function (hash) {\n            this._super(hash);\n            // add extended functionality here or modify method logic altogether\n        });\n\n        return stepNavigator;\n    };\n});\n")),(0,o.mdx)("h4",{id:"extend-js-function"},"Extend JS function"),(0,o.mdx)("p",null,"The following is an example of a mixin that adds additional functionality to the ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Checkout/view/frontend/web/js/proceed-to-checkout.js"},"proceed to checkout function"),"."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"File:")," ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp/Sample/view/frontend/web/js/proceed-to-checkout-mixin.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"define([\n    'mage/utils/wrapper'\n], function (wrapper) {\n    'use strict';\n\n    return function (proceedToCheckoutFunction) {\n        return wrapper.wrap(proceedToCheckoutFunction, function (originalProceedToCheckoutFunction, config, element) {\n            originalProceedToCheckoutFunction(config, element);\n            // add extended functionality here\n        });\n    };\n});\n")),(0,o.mdx)("h2",{id:"declaring-a-mixin"},"Declaring a mixin"),(0,o.mdx)("p",null,"Mixins are declared in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"mixins")," property in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"requirejs-config.js")," configuration file.\nThis file must be created in the same area specific directory the mixin is defined in."),(0,o.mdx)("p",null,"The mixins configuration in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"requirejs-config.js")," associates a target component with a mixin using their paths."),(0,o.mdx)("h3",{id:"example"},"Example"),(0,o.mdx)("p",null,"The following is an example of a ",(0,o.mdx)("inlineCode",{parentName:"p"},"requirejs-config.js")," file that adds the ",(0,o.mdx)("inlineCode",{parentName:"p"},"columns-mixin"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"modal-widget-mixin"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"step-navigator-mixin"),", and ",(0,o.mdx)("inlineCode",{parentName:"p"},"proceed-to-checkout-mixin")," mixins, which were defined in the previous examples, to the ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Ui/view/base/web/js/grid/controls/columns.js"},"grid column component"),", ",(0,o.mdx)("a",{parentName:"p",href:"jquery-widgets/modal.md"},"modal widget"),", ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Checkout/view/frontend/web/js/model/step-navigator.js"},"step navigator object"),", and ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Checkout/view/frontend/web/js/proceed-to-checkout.js"},"proceed to checkout function"),"."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"File:")," ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp/Sample/view/base/requirejs-config.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"var config = {\n config: {\n     mixins: {\n         'Magento_Ui/js/grid/controls/columns': {\n             'ExampleCorp_Sample/js/columns-mixin': true\n         },\n         'Magento_Ui/js/modal/modal': {\n             'ExampleCorp_Sample/js/modal-widget-mixin': true\n         },\n         'Magento_Checkout/js/model/step-navigator': {\n             'ExampleCorp_Sample/js/model/step-navigator-mixin': true\n         },\n         'Magento_Checkout/js/proceed-to-checkout': {\n             'ExampleCorp_Sample/js/proceed-to-checkout-mixin': true\n         }\n     }\n }\n};\n")),(0,o.mdx)("h2",{id:"overwriting-a-mixin"},"Overwriting a mixin"),(0,o.mdx)("p",null,"A mixin can be overwritten by another mixin but cannot be disabled separately."),(0,o.mdx)("h3",{id:"example-1"},"Example"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"File:")," ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp/CartFix/view/base/requirejs-config.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"var config = {\n    config: {\n        mixins: {\n            'Magento_Catalog/js/catalog-add-to-cart': {\n                'ExampleCorp_Sample/js/original-add-to-cart-mixin': false,\n                'ExampleCorp_CartFix/js/overwritten-add-to-cart-mixin': true\n            }\n        }\n    }\n};\n")),(0,o.mdx)("p",null,"In this case, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp_Sample/js/original-add-to-cart-mixin")," is overwritten by ",(0,o.mdx)("inlineCode",{parentName:"p"},"ExampleCorp_CartFix/js/overwritten-add-to-cart-mixin"),".\nBe sure to add the origin module as the over-written module dependency (use the sequence tag in ",(0,o.mdx)("inlineCode",{parentName:"p"},"etc/module.xml"),")."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">\n    <module name="ExampleCorp_CartFix" setup_version="0.0.1">\n        <sequence>\n            <module name="ExampleCorp_Sample" />\n        </sequence>\n    </module>\n</config>\n')),(0,o.mdx)("p",null,"After making changes to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"requirejs-config.js")," configuration, you must clean the cache and regenerate static files."),(0,o.mdx)("h2",{id:"mixin-examples"},"Mixin examples"),(0,o.mdx)("p",null,"The following is a list of files in the ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/CheckoutAgreements"},(0,o.mdx)("inlineCode",{parentName:"a"},"Magento_CheckoutAgreement"))," module that declare and define mixins that modify checkout behavior:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/CheckoutAgreements/view/frontend/requirejs-config.js"},(0,o.mdx)("inlineCode",{parentName:"a"},"view/frontend/requirejs-config.js"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/CheckoutAgreements/view/frontend/web/js/model/place-order-mixin.js"},(0,o.mdx)("inlineCode",{parentName:"a"},"view/frontend/web/js/model/place-order-mixin.js"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/magento/magento2/blob/2.4/app/code/Magento/CheckoutAgreements/view/frontend/web/js/model/set-payment-information-mixin.js"},(0,o.mdx)("inlineCode",{parentName:"a"},"view/frontend/web/js/model/set-payment-information-mixin.js")))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-javascript-mixins-md-402b1351a019b3b9d0b6.js.map