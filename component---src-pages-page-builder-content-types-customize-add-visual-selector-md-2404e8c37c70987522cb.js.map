{"version":3,"file":"component---src-pages-page-builder-content-types-customize-add-visual-selector-md-2404e8c37c70987522cb.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/content-types/customize/add-visual-selector.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-visual-selector\"\n    }}>{`Add a visual selector`}</h1>\n    <p>{`In Page Builder, we use a term called `}<em parentName=\"p\">{`visual selector`}</em>{`, which refers to a UI select control that makes its options visually clear to end users. You can see examples of these selectors in Page Builder's content type form fields for `}<strong parentName=\"p\">{`Background Type`}</strong>{`, `}<strong parentName=\"p\">{`Background Size`}</strong>{`, `}<strong parentName=\"p\">{`Alignment`}</strong>{`, and more. This topic describes how to add these visual selector controls to your own content types.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"839px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"19.0625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/fd996a6a1495c95d99405ce505442f63/5530d/advanced-alignment.webp 320w\", \"/commerce-frontend-core/static/fd996a6a1495c95d99405ce505442f63/0c8fb/advanced-alignment.webp 640w\", \"/commerce-frontend-core/static/fd996a6a1495c95d99405ce505442f63/c0e8b/advanced-alignment.webp 839w\"],\n            \"sizes\": \"(max-width: 839px) 100vw, 839px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/fd996a6a1495c95d99405ce505442f63/dd4a7/advanced-alignment.png 320w\", \"/commerce-frontend-core/static/fd996a6a1495c95d99405ce505442f63/0f09e/advanced-alignment.png 640w\", \"/commerce-frontend-core/static/fd996a6a1495c95d99405ce505442f63/75539/advanced-alignment.png 839w\"],\n            \"sizes\": \"(max-width: 839px) 100vw, 839px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-frontend-core/static/fd996a6a1495c95d99405ce505442f63/75539/advanced-alignment.png\",\n            \"alt\": \"alignments\",\n            \"title\": \"Content alignment\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Visual selectors support all image formats, but we highly recommend using SVG images for sharpness and clarity.`}</p>\n    <h2 {...{\n      \"id\": \"element-template\"\n    }}>{`Override the select component with an element template`}</h2>\n    <p>{`We use the default select component in the `}<inlineCode parentName=\"p\">{`/app/code/Magento/PageBuilder/view/adminhtml/ui-component/pagebuilder_base_form.xml`}</inlineCode>{` file. You can override the default template, by specifying an element template and component for this functionality to implement the Visual Select option.`}</p>\n    <p>{`In the provided template, specify `}<inlineCode parentName=\"p\">{`<elementTmpl>`}</inlineCode>{` alongside updating the fields component to `}<inlineCode parentName=\"p\">{`Magento_PageBuilder/js/form/element/visual-select`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<field name=\"text_align\" sortOrder=\"10\" formElement=\"select\" component=\"Magento_PageBuilder/js/form/element/visual-select\">\n    <settings>\n        <dataType>text</dataType>\n        <label translate=\"true\">Alignment</label>\n        <elementTmpl>Magento_PageBuilder/form/element/align</elementTmpl>\n    </settings>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"xml-config\"\n    }}>{`Add Visual Select to the XML config`}</h2>\n    <p>{`The available options for select, `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`title`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`icon`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`noticeMessage`}</inlineCode>{`, can be provided by the PHP class that implements the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\Option\\\\ArrayInterface`}</inlineCode>{` method.`}</p>\n    <p>{`Options should return an array with the following format:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`[\n    value => \"value\", //key used in the component dataSource\n    title => \"Title\",\n    icon => \"path/to/picture/on/server\",\n    noticeMessage => \"A message to be displayed when option is selected\"\n]\n`}</code></pre>\n    <p>{`These new configuration values are used in the `}<inlineCode parentName=\"p\">{`align.html`}</inlineCode>{` template file stored in Page Builder's `}<inlineCode parentName=\"p\">{`app/code/Magento/PageBuilder/view/adminhtml/web/template/form/element`}</inlineCode>{` directory.`}</p>\n    <p>{`Use a virtual type of `}<inlineCode parentName=\"p\">{`Magento\\\\PageBuilder\\\\Model\\\\Source\\\\VisualSelect`}</inlineCode>{` in your module's `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` configuration file to define the options in a visual select field.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<virtualType name=\"AlignmentSource\" type=\"Magento\\\\PageBuilder\\\\Model\\\\Source\\\\VisualSelect\">\n       <arguments>\n           <argument name=\"optionsSize\" xsi:type=\"string\">small</argument>\n           <argument name=\"optionsData\" xsi:type=\"array\">\n               <item name=\"0\" xsi:type=\"array\">\n                   <item name=\"value\" xsi:type=\"string\"/>\n                   <item name=\"title\" xsi:type=\"string\" translate=\"true\">Default</item>\n               </item>\n               <item name=\"1\" xsi:type=\"array\">\n                   <item name=\"value\" xsi:type=\"string\">left</item>\n                   <item name=\"title\" xsi:type=\"string\" translate=\"true\">Left</item>\n                   <item name=\"icon\" xsi:type=\"string\">Magento_PageBuilder/css/images/form/element/visual-select/alignment/left.svg</item>\n               </item>\n               <item name=\"2\" xsi:type=\"array\">\n                   <item name=\"value\" xsi:type=\"string\">center</item>\n                   <item name=\"title\" xsi:type=\"string\" translate=\"true\">Center</item>\n                   <item name=\"icon\" xsi:type=\"string\">Magento_PageBuilder/css/images/form/element/visual-select/alignment/center.svg</item>\n               </item>\n               <item name=\"3\" xsi:type=\"array\">\n                   <item name=\"value\" xsi:type=\"string\">right</item>\n                   <item name=\"title\" xsi:type=\"string\" translate=\"true\">Right</item>\n                   <item name=\"icon\" xsi:type=\"string\">Magento_PageBuilder/css/images/form/element/visual-select/alignment/right.svg</item>\n               </item>\n           </argument>\n       </arguments>\n   </virtualType>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"display-notice-when-option-is-selected\"\n    }}>{`Display notice when option is selected`}</h3>\n    <p>{`For some options you may wish to display an additional notice when the user selects the item. You can do this by providing a `}<inlineCode parentName=\"p\">{`noticeMessage`}</inlineCode>{` within the items declaration.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<item name=\"3\" xsi:type=\"array\">\n   <item name=\"value\" xsi:type=\"string\">right</item>\n   <item name=\"title\" xsi:type=\"string\" translate=\"true\">Right</item>\n   <item name=\"icon\" xsi:type=\"string\">Magento_PageBuilder/css/images/form/element/visual-select/alignment/right.svg</item>\n   <item name=\"noticeMessage\" xsi:type=\"string\" translate=\"true\">Message to be displayed below field when selected.</item>\n</item>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"vertical-alignment\"\n    }}>{`How to reuse vertical alignment between different content types`}</h2>\n    <p>{`To apply vertical alignment to a content type using the Visual Select component, use the virtualType `}<inlineCode parentName=\"p\">{`Magento\\\\PageBuilder\\\\Model\\\\Source\\\\VerticalAlignment`}</inlineCode>{` with options in your module's `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` configuration file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<virtualType name=\"Magento\\\\PageBuilder\\\\Model\\\\Source\\\\VerticalAlignment\" type=\"Magento\\\\PageBuilder\\\\Model\\\\Source\\\\VisualSelect\">\n    <arguments>\n        <argument name=\"optionsSize\" xsi:type=\"string\">small</argument>\n        <argument name=\"optionsData\" xsi:type=\"array\">\n            <item name=\"0\" xsi:type=\"array\">\n                <item name=\"value\" xsi:type=\"string\">flex-start</item>\n                <item name=\"title\" xsi:type=\"string\" translate=\"true\">Top</item>\n                <item name=\"icon\" xsi:type=\"string\">Magento_PageBuilder/css/images/form/element/visual-select/vertical-align/top.svg</item>\n            </item>\n            <item name=\"1\" xsi:type=\"array\">\n                <item name=\"value\" xsi:type=\"string\">center</item>\n                <item name=\"title\" xsi:type=\"string\" translate=\"true\">Center</item>\n                <item name=\"icon\" xsi:type=\"string\">Magento_PageBuilder/css/images/form/element/visual-select/vertical-align/center.svg</item>\n            </item>\n            <item name=\"2\" xsi:type=\"array\">\n                <item name=\"value\" xsi:type=\"string\">flex-end</item>\n                <item name=\"title\" xsi:type=\"string\" translate=\"true\">Bottom</item>\n                <item name=\"icon\" xsi:type=\"string\">Magento_PageBuilder/css/images/form/element/visual-select/vertical-align/bottom.svg</item>\n            </item>\n        </argument>\n    </arguments>\n</virtualType>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-the-visual-select-option-in-your-modules-form-configuration-file\"\n    }}>{`Add the Visual Select option in your module's form configuration file`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<field name=\"justify_content\" sortOrder=\"20\" formElement=\"select\" component=\"Magento_PageBuilder/js/form/element/visual-select\">\n    <argument name=\"data\" xsi:type=\"array\">\n        <item name=\"config\" xsi:type=\"array\">\n            <item name=\"default\" xsi:type=\"string\">flex-start</item>\n        </item>\n    </argument>\n    <settings>\n        <dataType>text</dataType>\n        <label translate=\"true\">Vertical Alignment</label>\n        <notice translate=\"true\">Vertical alignment controls how the child blocks of this container will be positioned. Set minimum height in order to use vertical alignment.</notice>\n        <elementTmpl>Magento_PageBuilder/form/element/visual-select</elementTmpl>\n    </settings>\n    <formElements>\n        <select>\n            <settings>\n                <options class=\"Magento\\\\PageBuilder\\\\Model\\\\Source\\\\VerticalAlignment\"/>\n            </settings>\n        </select>\n    </formElements>\n</field>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"configure-the-content-type-with-the-vertical-alignment-style-properties-this-example-is-from-row\"\n    }}>{`Configure the content type with the vertical alignment style properties. This example is from Row.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<elements>\n    <element name=\"main\" path=\".\">\n        <style name=\"background_color\" source=\"background_color\" converter=\"Magento_PageBuilder/js/converter/style/color\"/>\n        <style name=\"background_image\" source=\"background_image\" converter=\"Magento_PageBuilder/js/converter/style/background-image\" preview_converter=\"Magento_PageBuilder/js/converter/style/preview/background-image\"/>\n        <style name=\"background_position\" source=\"background_position\"/>\n        <style name=\"background_size\" source=\"background_size\"/>\n        <style name=\"background_repeat\" source=\"background_repeat\"/>\n        <style name=\"background_attachment\" source=\"background_attachment\"/>\n        <style name=\"text_align\" source=\"text_align\"/>\n        <style name=\"border\" source=\"border_style\" converter=\"Magento_PageBuilder/js/converter/style/border-style\"/>\n        <style name=\"border_color\" source=\"border_color\" converter=\"Magento_PageBuilder/js/converter/style/color\"/>\n        <style name=\"border_width\" source=\"border_width\" converter=\"Magento_PageBuilder/js/converter/style/remove-px\"/>\n        <style name=\"border_radius\" source=\"border_radius\" converter=\"Magento_PageBuilder/js/converter/style/remove-px\"/>\n        <style name=\"justify_content\" source=\"justify_content\" persistence_mode=\"read\"/>\n        <style name=\"min_height\" source=\"min_height\" converter=\"Magento_PageBuilder/js/converter/style/remove-px\"/>\n        <style name=\"margins_and_padding\" reader=\"Magento_PageBuilder/js/property/margins\" converter=\"Magento_PageBuilder/js/converter/style/margins\" preview_converter=\"Magento_PageBuilder/js/content-type/row/converter/style/margins\"/>\n        <style name=\"margins_and_padding\" reader=\"Magento_PageBuilder/js/property/paddings\" converter=\"Magento_PageBuilder/js/converter/style/paddings\" preview_converter=\"Magento_PageBuilder/js/content-type/row/converter/style/paddings\"/>\n        <attribute name=\"name\" source=\"data-content-type\"/>\n        <attribute name=\"appearance\" source=\"data-appearance\"/>\n        <attribute name=\"enable_parallax\" source=\"data-enable-parallax\"/>\n        <attribute name=\"parallax_speed\" source=\"data-parallax-speed\"/>\n        <attribute name=\"background_color_format\" source=\"data-background-color-format\" persistence_mode=\"write\"/>\n        <css name=\"css_classes\"/>\n    </element>\n    <element name=\"container\">\n        <style name=\"justify_content\" source=\"justify_content\"/>\n        <static_style source=\"display\" value=\"flex\"/>\n        <static_style source=\"flex_direction\" value=\"column\"/>\n    </element>\n</elements>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"specify-which-elements-in-the-preview-and-master-templates-should-receive-the-style-properties\"\n    }}>{`Specify which elements in the preview and master templates should receive the style properties`}</h3>\n    <p>{`Example master template:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div attr=\"data.main.attributes\"\n     ko-style=\"Object.assign(data.container.style(), data.main.style())\"\n     css=\"data.main.css\">\n    <render args=\"masterTemplate\"/>\n</div>\n`}</code></pre>\n    <p>{`Example preview template:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"pagebuilder-content-type type-container pagebuilder-row children-min-height\" data-bind=\"attr: data.main.attributes, style: data.main.style, css: Object.assign(data.main.css(), {'empty-container': parent.children().length == 0, 'jarallax': data.main.attributes()['data-enable-parallax'] == 1}), event: {mouseover: onMouseOver, mouseout: onMouseOut }, mouseoverBubble: false, afterRender: function (element) { setTimeout(function () { initParallax.call($data, element); }, 0) }\">\n    <render args=\"getOptions().template\"></render>\n    <div class=\"element-children content-type-container\" each=\"parent.getChildren()\" ko-style=\"data.container.style\" css=\"getChildrenCss()\" attr=\"{id: parent.id + '-children'}\" data-bind=\"sortable: getSortableOptions()\" afterRender=\"function (element) { if (typeof afterChildrenRender === 'function') { afterChildrenRender(element); } }\">\n        <if args=\"$parent.isContainer()\">\n            <div class=\"pagebuilder-drop-indicator\"></div>\n        </if>\n        <div class=\"pagebuilder-content-type-wrapper\" template=\"{ name: preview.template, data: preview, afterRender: function () { preview.dispatchAfterRenderEvent.apply(preview, arguments); } }\" attr=\"{ id: id }\"></div>\n        <if args=\"$parent.isContainer() && $index() === $parent.parent.getChildren()().length - 1\">\n            <div class=\"pagebuilder-drop-indicator\"></div>\n        </if>\n    </div>\n    <div class=\"pagebuilder-display-label\" data-bind=\"text: function () { return displayLabel().toUpperCase(); }()\"></div>\n    <div class=\"pagebuilder-empty-container empty-placeholder\" data-bind=\"css: {visible: parent.children().length == 0}, i18n: 'Drag content types or columns here'\"></div>\n</div>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}