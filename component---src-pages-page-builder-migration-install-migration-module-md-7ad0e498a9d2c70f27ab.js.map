{"version":3,"file":"component---src-pages-page-builder-migration-install-migration-module-md-7ad0e498a9d2c70f27ab.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/migration/install-migration-module.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"install-the-migration-module\"\n    }}>{`Install the migration module`}</h1>\n    <p>{`The migration module is a composer package hosted within our repository. This package is only available for those with Commerce access keys.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`We recommend using the module in a development environment before deploying it to the production environment. We also recommend creating sufficient backups before completing any form of content migration.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Before installing the migration module, you need to prepare the environment you intend to migrate:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Make a backup of your current database.`}</strong></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Remove BlueFoot from your current Adobe Commerce instance: `}<inlineCode parentName=\"p\">{`composer remove gene/bluefoot`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`BlueFoot does not contain uninstall scripts, but we do preserve your data on uninstall.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Upgrade to Commerce 2.3.1 (which includes Page Builder).`}</p>\n        <p parentName=\"li\">{`Please see our `}<a parentName=\"p\" {...{\n            \"href\": \"https://devdocs.magento.com/guides/v2.3/comp-mgr/cli/cli-upgrade.html\"\n          }}>{`Command-line upgrade`}</a>{` instructions on how to complete this.\nPage Builder itself does not convert any of your content. We preserve your existing BlueFoot content when we install Page Builder.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"composer-installation\"\n    }}>{`Composer installation`}</h2>\n    <p>{`To install the migration module:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to the root directory of your Commerce 2.3.1 installation.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use the following composer command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`composer require magento/module-page-builder-data-migration\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#disable-migration-on-deployment\"\n          }}>{`Disable the default migration-on-deployment feature`}</a>{`.`}</p>\n        <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n        <p parentName=\"li\">{`This step is critical for migration development work. It disables the default migration module behavior that migrates your content as part of the deployment using `}<inlineCode parentName=\"p\">{`setup:upgrade`}</inlineCode>{`. We made this the default behavior so that deployment to production is easy. But during development, you need to turn it off so that you do not run your migrations accidentally, before you have made strategic changes to your migration code, or backups to your database.`}</p>\n      </li>\n    </ol>\n    <p>{`After completing these steps, the data migration source code can be found within the `}<inlineCode parentName=\"p\">{`vendor/magento`}</inlineCode>{` directory with the other Commerce modules.`}</p>\n    <h2 {...{\n      \"id\": \"github-installation\"\n    }}>{`GitHub installation`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This installation option is for those who are part of the Commerce organization on GitHub and want easier access to the migration source code during migration development work.`}</p>\n    <p>{`To install the migration module from the GitHub repo, you will need access to the private repo: `}<inlineCode parentName=\"p\">{`magento/magento2-page-builder-data-migration`}</inlineCode>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate into the directory above your Magento 2 installation.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Clone the `}<inlineCode parentName=\"p\">{`magento/magento2-page-builder-data-migration`}</inlineCode>{` repository using the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`git clone git@github.com:magento/magento2-page-builder-data-migration.git\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Symlink the `}<inlineCode parentName=\"p\">{`magento2-page-builder-data-migration`}</inlineCode>{` into your Commerce installation:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`php <magento-root-directory>/dev/tools/build-ee.php --command=link --ce-source <magento-root-directory> --ee-source magento2-page-builder-data-migration\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#disable-migration-on-deployment\"\n          }}>{`Disable the default migration-on-deployment feature`}</a>{`.`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Note`}</strong>{`: This step is critical for migration development work. It disables the default migration module behavior that migrates your content as part of the deployment using `}<inlineCode parentName=\"p\">{`setup:upgrade`}</inlineCode>{`. We made this the default behavior so that deployment to production is easy. But during development, you need to turn it off so that you do not run your migrations accidentally, before you have made strategic changes to your migration code, or backups to your database.`}</p>\n      </li>\n    </ol>\n    <p>{`After completing these steps, the data migration source code should sit alongside the root directory of Commerce 2.3.1 installation, with the symlinks placed within. If your directory structure differs, adjust your symlink paths as needed.`}</p>\n    <h2 {...{\n      \"id\": \"disable-migration-on-deployment\"\n    }}>{`Disable migration on deployment`}</h2>\n    <p>{`This step disables the migration module feature that migrates your content as part of the deployment using `}<inlineCode parentName=\"p\">{`setup:upgrade`}</inlineCode>{`. During development, you often need to customize your migration code `}<em parentName=\"p\">{`before`}</em>{` running migrations to ensure that your content migrates to Page Builder as intended. So it is best to turn off this auto-migration feature and use the explicit migration command as described in `}<a parentName=\"p\" {...{\n        \"href\": \"run-migration-module.md\"\n      }}>{`running the migration module`}</a>{`.`}</p>\n    <p>{`To disable migration on deployment, run the following queries on the `}<inlineCode parentName=\"p\">{`setup_module`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`patch_list`}</inlineCode>{` tables in your database. These query values indicate that the migration module has already been installed, which prevents Commerce from applying the patch and auto-running the migration before you are ready.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sql\"\n      }}>{`INSERT INTO \\`setup_module\\` (\\`module\\`, \\`schema_version\\`, \\`data_version\\`)\nVALUES\n    ('Magento_PageBuilderDataMigration', '1.0.0', '1.0.0');\n\nINSERT INTO \\`patch_list\\` (\\`patch_name\\`)\nVALUES\n    ('Magento\\\\\\\\PageBuilderDataMigration\\\\\\\\Setup\\\\\\\\Patch\\\\\\\\Data\\\\\\\\MigrateToPageBuilder');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"modifying-migration-source-code\"\n    }}>{`Modifying migration source code`}</h2>\n    <p>{`We do not plan on releasing any updates of the `}<inlineCode parentName=\"p\">{`PageBuilderDataMigration`}</inlineCode>{` module. This means you can modify the migration source code as needed to suite your needs.`}</p>\n    <h2 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next Steps`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"run-migration-module.md\"\n      }}>{`Run the migration module`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}