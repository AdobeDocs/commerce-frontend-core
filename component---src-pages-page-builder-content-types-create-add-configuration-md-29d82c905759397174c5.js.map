{"version":3,"file":"component---src-pages-page-builder-content-types-create-add-configuration-md-29d82c905759397174c5.js","mappings":"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","sources":["webpack://commerce-frontend-core/./src/pages/page-builder/content-types/create/add-configuration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-frontend-core/commerce-frontend-core/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-configuration\"\n    }}>{`Add configuration`}</h1>\n    <p>{`The configuration file defines the settings and references to your content type files. You will return to this file often to update references and change settings during the development process.`}</p>\n    <p>{`Files referenced from the configuration include the HTML templates, the JavaScript components, the icon displayed for your content type in the Page Builder panel, and the UI component form for your content type editor within the Admin.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"488px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"37.8125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/965753ebdea44bb2d3495cfdfebc74c2/5530d/configuration-hub.webp 320w\", \"/commerce-frontend-core/static/965753ebdea44bb2d3495cfdfebc74c2/a6b86/configuration-hub.webp 488w\"],\n            \"sizes\": \"(max-width: 488px) 100vw, 488px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/965753ebdea44bb2d3495cfdfebc74c2/dd4a7/configuration-hub.png 320w\", \"/commerce-frontend-core/static/965753ebdea44bb2d3495cfdfebc74c2/4cd97/configuration-hub.png 488w\"],\n            \"sizes\": \"(max-width: 488px) 100vw, 488px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-frontend-core/static/965753ebdea44bb2d3495cfdfebc74c2/4cd97/configuration-hub.png\",\n            \"alt\": \"configuration-hub\",\n            \"title\": \"configuration-hub\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"configuration-conventions\"\n    }}>{`Configuration conventions`}</h2>\n    <p>{`By convention, Page Builder requires the configuration file to be in the `}<inlineCode parentName=\"p\">{`<module_name>/view/adminhtml/pagebuilder/content_type`}</inlineCode>{` directory.`}</p>\n    <p>{`The name of your configuration file should reflect the name of your content type prefixed by your module vendor name and separated by an underscore (_). For example, our module name is `}<inlineCode parentName=\"p\">{`Example/PageBuilderQuote`}</inlineCode>{` and our content type is a quote control, so we name our configuration file `}<inlineCode parentName=\"p\">{`example_quote.xml`}</inlineCode>{` and add it to our module within the following directory structure (`}<inlineCode parentName=\"p\">{`view/adminhtml/pagebuilder/content_type/`}</inlineCode>{`):`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"511px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"37.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/fb2d9f178e556930df872385b4a7c20a/5530d/step1-add-config-file.webp 320w\", \"/commerce-frontend-core/static/fb2d9f178e556930df872385b4a7c20a/41b6c/step1-add-config-file.webp 511w\"],\n            \"sizes\": \"(max-width: 511px) 100vw, 511px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/fb2d9f178e556930df872385b4a7c20a/dd4a7/step1-add-config-file.png 320w\", \"/commerce-frontend-core/static/fb2d9f178e556930df872385b4a7c20a/40f84/step1-add-config-file.png 511w\"],\n            \"sizes\": \"(max-width: 511px) 100vw, 511px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-frontend-core/static/fb2d9f178e556930df872385b4a7c20a/40f84/step1-add-config-file.png\",\n            \"alt\": \"Create config file\",\n            \"title\": \"Create config file\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The reason we suggest prefixing your content type with your vendor name is to prevent Adobe Commerce from merging your content type configuration file with another configuration file of the same name, or with a future content type published by Adobe.`}</p>\n    <h2 {...{\n      \"id\": \"the-example_quote-configuration\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`example_quote`}</inlineCode>{` configuration`}</h2>\n    <p>{`Only a subset of configuration elements are described in our Quote example (enough to understand the basic role of the configuration file). For more details, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"../../architecture/configurations.md\"\n      }}>{`Content type configurations`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"../customize/index.md\"\n      }}>{`Additional configurations`}</a>{`.`}</p>\n    <p>{`The following configuration is from the Quote content type. An overview of these elements and attributes are described in the tables that follow.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_PageBuilder:etc/content_type.xsd\">\n    <type name=\"example_quote\"\n        label=\"Quote\"\n        menu_section=\"elements\"\n        component=\"Magento_PageBuilder/js/content-type\"\n        preview_component=\"Example_PageBuilderQuote/js/content-type/example-quote/preview\"\n        master_component=\"Magento_PageBuilder/js/content-type/master\"\n        form=\"pagebuilder_example_quote_form\"\n        icon=\"icon-pagebuilder-heading\"\n        sortOrder=\"21\"\n        translate=\"label\">\n    <children default_policy=\"deny\"/>\n    <parents default_policy=\"deny\">\n        <parent name=\"column\" policy=\"allow\"/>\n    </parents>\n    <appearances>\n        <appearance name=\"default\"\n                  default=\"true\"\n                  preview_template=\"Example_PageBuilderQuote/content-type/example-quote/default/preview\"\n                  master_template=\"Example_PageBuilderQuote/content-type/example-quote/default/master\"\n                  reader=\"Magento_PageBuilder/js/master-format/read/configurable\">\n        <elements...>\n        </appearance>\n    </appearances>\n    </type>\n</config>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-type-element\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`type`}</inlineCode>{` element`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` element defines the key properties of your content type. The attributes from the previous code example are described here:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the content type that Magento uses for XML merging. The convention for using multi-word names is to separate the words with hyphens.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`label`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Label displayed in the Page Builder panel, option menu, and on the Admin stage.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`menu_section`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Menu section or category in the panel menu where your content type is displayed. The default menu sections are Layout, Elements, Media, and Add Content. See `}<a parentName=\"td\" {...{\n              \"href\": \"../customize/configure-panel.md\"\n            }}>{`Panel configurations`}</a>{` for more details.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`component`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`View model responsible for rendering the preview and master format. The component does not need to specify the `}<inlineCode parentName=\"td\">{`.js`}</inlineCode>{` extension. There are two component types to choose from: `}<inlineCode parentName=\"td\">{`content-type`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`content-type-collection`}</inlineCode>{`. Use `}<inlineCode parentName=\"td\">{`Magento_PageBuilder/js/content-type`}</inlineCode>{` for static content types that do not have children. Use `}<inlineCode parentName=\"td\">{`Magento_PageBuilder/js/content-type-collection`}</inlineCode>{` for content types that can contain children, otherwise known as container content types.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`preview_component`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`JavaScript file (`}<inlineCode parentName=\"td\">{`preview.js`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`preview-collection.js`}</inlineCode>{`) that provides rendering logic within the Admin UI. The preview component does not need to specify the `}<inlineCode parentName=\"td\">{`.js`}</inlineCode>{` extension. `}<br /><br />{`For `}<em parentName=\"td\">{`collection`}</em>{` content types, you need to either reference your own `}<inlineCode parentName=\"td\">{`preview-collection`}</inlineCode>{` component or reference Page Builder's `}<inlineCode parentName=\"td\">{`preview-collection`}</inlineCode>{` (`}<inlineCode parentName=\"td\">{`preview_component=\"Magento_PageBuilder/js/content-type/preview-collection\"`}</inlineCode>{`). If you don't specify the `}<inlineCode parentName=\"td\">{`preview_component`}</inlineCode>{`, Page Builder uses the base `}<inlineCode parentName=\"td\">{`Preview`}</inlineCode>{` component shown in the code: `}<inlineCode parentName=\"td\">{`Magento_PageBuilder/js/content-type/preview`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`master_component`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`JavaScript file (`}<inlineCode parentName=\"td\">{`master.js`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`master-collection.js`}</inlineCode>{`) that provides rendering logic generic for all appearances of your content type when rendered on the storefront. The master component does not need to specify the `}<inlineCode parentName=\"td\">{`.js`}</inlineCode>{` extension. `}<br /><br />{`For `}<em parentName=\"td\">{`collection`}</em>{` content types, you need to either reference your own `}<inlineCode parentName=\"td\">{`master-collection`}</inlineCode>{` component or reference Page Builder's `}<inlineCode parentName=\"td\">{`master-collection`}</inlineCode>{` (`}<inlineCode parentName=\"td\">{`master_component=\"Magento_PageBuilder/js/content-type/master-collection\"`}</inlineCode>{`). If you don't specify the `}<inlineCode parentName=\"td\">{`master_component`}</inlineCode>{`, Page Builder uses the base `}<inlineCode parentName=\"td\">{`Master`}</inlineCode>{` component shown in the code: `}<inlineCode parentName=\"td\">{`Magento_PageBuilder/js/content-type/master`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`form`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`UI component form that provides the form controls for editing your content type.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`icon`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional. Class name for your PNG or SVG image (or font icon) displayed in the Page Builder panel alongside the label. If you don't provide an icon value, the Page Builder panel displays the content type name without an icon.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`sortOrder`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional. The listed order within the menu section. For example, `}<inlineCode parentName=\"td\">{`sortOrder=21`}</inlineCode>{` puts the content type third in the `}<inlineCode parentName=\"td\">{`Elements`}</inlineCode>{` menu section, after the content types with `}<inlineCode parentName=\"td\">{`sortOrder`}</inlineCode>{` values of 10 and 20.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`translate`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Identifies the attribute you want Magento to translate. Here, the `}<inlineCode parentName=\"td\">{`label`}</inlineCode>{` value is set for translation.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"the--children-element\"\n    }}>{`The  `}<inlineCode parentName=\"h2\">{`children`}</inlineCode>{` element`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` element determines if your content type can contain other content types as children. In the Admin UI, it either allows or prevents you from dragging and dropping `}<em parentName=\"p\">{`other`}</em>{` content types from the panel into `}<em parentName=\"p\">{`your`}</em>{` content type.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<children default_policy=\"deny\"/>\n`}</code></pre>\n    <p>{`In our configuration, we don't allow any other content types to be children of our content type. Put another way, our content type cannot be a parent; we only want it to be the child of other content types, which leads us to the `}<inlineCode parentName=\"p\">{`parents`}</inlineCode>{` element.`}</p>\n    <h2 {...{\n      \"id\": \"the-parents-element\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`parents`}</inlineCode>{` element`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`parents`}</inlineCode>{` element determines if other content types can be a parent to your content type. In the Admin UI, it either allows or prevents you from dragging and dropping `}<em parentName=\"p\">{`your`}</em>{` content type into `}<em parentName=\"p\">{`other`}</em>{` content types on the stage.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<parents default_policy=\"deny\">\n    <parent name=\"column\" policy=\"allow\"/>\n</parents>\n`}</code></pre>\n    <p>{`In our configuration, the `}<inlineCode parentName=\"p\">{`parents`}</inlineCode>{` element first prevents our content type from having any parents. If we left it there, we could not drag our content type onto the stage at all because even the stage is a parent. So we limit our content type's parents to only one: the `}<inlineCode parentName=\"p\">{`column`}</inlineCode>{` content type. This allows you to drag and drop your content type into columns, but nowhere else.`}</p>\n    <h2 {...{\n      \"id\": \"the-appearances-element\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`appearances`}</inlineCode>{` element`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<appearances>`}</inlineCode>{` element specifies one or more views for displaying your content type. For example, the Banner has four appearances you can choose from within its editor as shown here:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"935px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"27.8125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/5530d/banner-appearances.webp 320w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/0c8fb/banner-appearances.webp 640w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/0597b/banner-appearances.webp 935w\"],\n            \"sizes\": \"(max-width: 935px) 100vw, 935px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/dd4a7/banner-appearances.png 320w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/0f09e/banner-appearances.png 640w\", \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/487e7/banner-appearances.png 935w\"],\n            \"sizes\": \"(max-width: 935px) 100vw, 935px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-frontend-core/static/df32ce0d0167ded1139ea39777548003/487e7/banner-appearances.png\",\n            \"alt\": \"banner-appearances\",\n            \"title\": \"banner-appearances\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Each of these views is defined as an `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` within the Banner configuration file (`}<inlineCode parentName=\"p\">{`app/code/Magento/PageBuilder/view/adminhtml/pagebuilder/content_type/banner.xml`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<appearances>\n    <appearance name=\"collage-left\"...>\n    <appearance name=\"collage-centered\"...>\n    <appearance name=\"collage-right\"...>\n    <appearance name=\"poster\" default=\"true\" ...>\n</appearances>\n`}</code></pre>\n    <p>{`Going further, each `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` is defined by exactly two HTML templates, one to display a preview appearance in the Admin (`}<inlineCode parentName=\"p\">{`preview.html`}</inlineCode>{`) and the other to display the master appearance (`}<inlineCode parentName=\"p\">{`master.html`}</inlineCode>{`) on your storefront. We will discuss HTML templates more in `}<a parentName=\"p\" {...{\n        \"href\": \"add-templates.md\"\n      }}>{`Add templates`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"the-elements-element\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`elements`}</inlineCode>{` element`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<elements>`}</inlineCode>{` element as defined within an `}<inlineCode parentName=\"p\">{`appearance`}</inlineCode>{` is to map the data from the content type's form editor to the content type's master format so that the values entered in the form can be stored and rendered correctly on the Admin stage and storefront. We discuss content type `}<inlineCode parentName=\"p\">{`elements`}</inlineCode>{` in `}<a parentName=\"p\" {...{\n        \"href\": \"add-form.md\"\n      }}>{`Add form`}</a></p>\n    <h2 {...{\n      \"id\": \"next\"\n    }}>{`Next`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"add-templates.md\"\n      }}>{`Add templates`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}